; ModuleID = 'micropather.cpp'
source_filename = "micropather.cpp"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.15.0"

%class.OpenQueue = type { %"class.micropather::PathNode"*, [23 x i32], %"class.micropather::Graph"* }
%"class.micropather::Graph" = type { i32 (...)** }
%"class.micropather::PathNode" = type <{ i8*, float, float, float, [4 x i8], %"class.micropather::PathNode"*, i32, i32, i32, [4 x i8], [2 x %"class.micropather::PathNode"*], %"class.micropather::PathNode"*, %"class.micropather::PathNode"*, i8, i8, [6 x i8] }>
%"class.micropather::PathNodePool" = type <{ %"class.micropather::PathNode"**, %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::NodeCost"*, i32, i32, %"class.micropather::PathNode", i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.micropather::PathNodePool::Block" = type { %"struct.micropather::PathNodePool::Block"*, [1 x %"class.micropather::PathNode"] }
%"struct.micropather::NodeCost" = type { %"class.micropather::PathNode"*, float }
%"class.micropather::MicroPather" = type { %"class.micropather::PathNodePool", %"class.micropather::MPVector", %"class.micropather::MPVector.0", %"class.micropather::MPVector.1", %"class.micropather::Graph"*, i32, %"class.micropather::PathCache"* }
%"class.micropather::MPVector" = type { i32, i32, %"struct.micropather::StateCost"* }
%"struct.micropather::StateCost" = type { i8*, float }
%"class.micropather::MPVector.0" = type { i32, i32, %"struct.micropather::NodeCost"* }
%"class.micropather::MPVector.1" = type { i32, i32, float* }
%"class.micropather::PathCache" = type { i32, i32, %"struct.micropather::PathCache::Item"*, i32, i32 }
%"struct.micropather::PathCache::Item" = type { i8*, i8*, i8*, float }
%"class.micropather::MPVector.2" = type { i32, i32, i8** }
%"struct.micropather::CacheData" = type { i32, i32, float, i32, i32, float }
%class.ClosedSet = type { %"class.micropather::Graph"* }

; Function Attrs: ssp uwtable
define void @_ZN9OpenQueue4PushEPN11micropather8PathNodeE(%class.OpenQueue* %this, %"class.micropather::PathNode"* %pNode) #0 align 2 {
entry:
  %this.addr = alloca %class.OpenQueue*, align 8
  %pNode.addr = alloca %"class.micropather::PathNode"*, align 8
  %iter = alloca %"class.micropather::PathNode"*, align 8
  store %class.OpenQueue* %this, %class.OpenQueue** %this.addr, align 8, !tbaa !3
  store %"class.micropather::PathNode"* %pNode, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  %this1 = load %class.OpenQueue*, %class.OpenQueue** %this.addr, align 8
  %0 = bitcast %"class.micropather::PathNode"** %iter to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #10
  %sentinel = getelementptr inbounds %class.OpenQueue, %class.OpenQueue* %this1, i32 0, i32 0
  %1 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %sentinel, align 8, !tbaa !7
  %next = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %1, i32 0, i32 11
  %2 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %next, align 8, !tbaa !9
  store %"class.micropather::PathNode"* %2, %"class.micropather::PathNode"** %iter, align 8, !tbaa !3
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  br label %while.body

while.body:                                       ; preds = %while.cond
  %3 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  %totalCost = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %3, i32 0, i32 3
  %4 = load float, float* %totalCost, align 8, !tbaa !14
  %5 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %iter, align 8, !tbaa !3
  %totalCost2 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %5, i32 0, i32 3
  %6 = load float, float* %totalCost2, align 8, !tbaa !14
  %cmp = fcmp olt float %4, %6
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %7 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %iter, align 8, !tbaa !3
  %8 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  call void @_ZN11micropather8PathNode9AddBeforeEPS0_(%"class.micropather::PathNode"* %7, %"class.micropather::PathNode"* %8)
  %9 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  %inOpen = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %9, i32 0, i32 13
  store i8 1, i8* %inOpen, align 8, !tbaa !15
  br label %while.end

if.end:                                           ; preds = %while.body
  %10 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %iter, align 8, !tbaa !3
  %next3 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %10, i32 0, i32 11
  %11 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %next3, align 8, !tbaa !9
  store %"class.micropather::PathNode"* %11, %"class.micropather::PathNode"** %iter, align 8, !tbaa !3
  br label %while.cond

while.end:                                        ; preds = %if.then
  %12 = bitcast %"class.micropather::PathNode"** %iter to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN11micropather8PathNode9AddBeforeEPS0_(%"class.micropather::PathNode"* %this, %"class.micropather::PathNode"* %addThis) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNode"*, align 8
  %addThis.addr = alloca %"class.micropather::PathNode"*, align 8
  store %"class.micropather::PathNode"* %this, %"class.micropather::PathNode"** %this.addr, align 8, !tbaa !3
  store %"class.micropather::PathNode"* %addThis, %"class.micropather::PathNode"** %addThis.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %this.addr, align 8
  %0 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %addThis.addr, align 8, !tbaa !3
  %next = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %0, i32 0, i32 11
  store %"class.micropather::PathNode"* %this1, %"class.micropather::PathNode"** %next, align 8, !tbaa !9
  %prev = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 12
  %1 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %prev, align 8, !tbaa !16
  %2 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %addThis.addr, align 8, !tbaa !3
  %prev2 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %2, i32 0, i32 12
  store %"class.micropather::PathNode"* %1, %"class.micropather::PathNode"** %prev2, align 8, !tbaa !16
  %3 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %addThis.addr, align 8, !tbaa !3
  %prev3 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 12
  %4 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %prev3, align 8, !tbaa !16
  %next4 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %4, i32 0, i32 11
  store %"class.micropather::PathNode"* %3, %"class.micropather::PathNode"** %next4, align 8, !tbaa !9
  %5 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %addThis.addr, align 8, !tbaa !3
  %prev5 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 12
  store %"class.micropather::PathNode"* %5, %"class.micropather::PathNode"** %prev5, align 8, !tbaa !16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1

; Function Attrs: ssp uwtable
define %"class.micropather::PathNode"* @_ZN9OpenQueue3PopEv(%class.OpenQueue* %this) #0 align 2 {
entry:
  %this.addr = alloca %class.OpenQueue*, align 8
  %pNode = alloca %"class.micropather::PathNode"*, align 8
  store %class.OpenQueue* %this, %class.OpenQueue** %this.addr, align 8, !tbaa !3
  %this1 = load %class.OpenQueue*, %class.OpenQueue** %this.addr, align 8
  %0 = bitcast %"class.micropather::PathNode"** %pNode to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #10
  %sentinel = getelementptr inbounds %class.OpenQueue, %class.OpenQueue* %this1, i32 0, i32 0
  %1 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %sentinel, align 8, !tbaa !7
  %next = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %1, i32 0, i32 11
  %2 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %next, align 8, !tbaa !9
  store %"class.micropather::PathNode"* %2, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  %3 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  call void @_ZN11micropather8PathNode6UnlinkEv(%"class.micropather::PathNode"* %3)
  %4 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  %inOpen = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %4, i32 0, i32 13
  store i8 0, i8* %inOpen, align 8, !tbaa !15
  %5 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  %6 = bitcast %"class.micropather::PathNode"** %pNode to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #10
  ret %"class.micropather::PathNode"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN11micropather8PathNode6UnlinkEv(%"class.micropather::PathNode"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNode"*, align 8
  store %"class.micropather::PathNode"* %this, %"class.micropather::PathNode"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %this.addr, align 8
  %prev = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 12
  %0 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %prev, align 8, !tbaa !16
  %next = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 11
  %1 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %next, align 8, !tbaa !9
  %prev2 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %1, i32 0, i32 12
  store %"class.micropather::PathNode"* %0, %"class.micropather::PathNode"** %prev2, align 8, !tbaa !16
  %next3 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 11
  %2 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %next3, align 8, !tbaa !9
  %prev4 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 12
  %3 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %prev4, align 8, !tbaa !16
  %next5 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %3, i32 0, i32 11
  store %"class.micropather::PathNode"* %2, %"class.micropather::PathNode"** %next5, align 8, !tbaa !9
  %prev6 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 12
  store %"class.micropather::PathNode"* null, %"class.micropather::PathNode"** %prev6, align 8, !tbaa !16
  %next7 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 11
  store %"class.micropather::PathNode"* null, %"class.micropather::PathNode"** %next7, align 8, !tbaa !9
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN9OpenQueue6UpdateEPN11micropather8PathNodeE(%class.OpenQueue* %this, %"class.micropather::PathNode"* %pNode) #0 align 2 {
entry:
  %this.addr = alloca %class.OpenQueue*, align 8
  %pNode.addr = alloca %"class.micropather::PathNode"*, align 8
  %it = alloca %"class.micropather::PathNode"*, align 8
  store %class.OpenQueue* %this, %class.OpenQueue** %this.addr, align 8, !tbaa !3
  store %"class.micropather::PathNode"* %pNode, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  %this1 = load %class.OpenQueue*, %class.OpenQueue** %this.addr, align 8
  %0 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  %prev = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %0, i32 0, i32 12
  %1 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %prev, align 8, !tbaa !16
  %sentinel = getelementptr inbounds %class.OpenQueue, %class.OpenQueue* %this1, i32 0, i32 0
  %2 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %sentinel, align 8, !tbaa !7
  %cmp = icmp ne %"class.micropather::PathNode"* %1, %2
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  %totalCost = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %3, i32 0, i32 3
  %4 = load float, float* %totalCost, align 8, !tbaa !14
  %5 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  %prev2 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %5, i32 0, i32 12
  %6 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %prev2, align 8, !tbaa !16
  %totalCost3 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %6, i32 0, i32 3
  %7 = load float, float* %totalCost3, align 8, !tbaa !14
  %cmp4 = fcmp olt float %4, %7
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %8 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  call void @_ZN11micropather8PathNode6UnlinkEv(%"class.micropather::PathNode"* %8)
  %sentinel5 = getelementptr inbounds %class.OpenQueue, %class.OpenQueue* %this1, i32 0, i32 0
  %9 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %sentinel5, align 8, !tbaa !7
  %next = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %9, i32 0, i32 11
  %10 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %next, align 8, !tbaa !9
  %11 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  call void @_ZN11micropather8PathNode9AddBeforeEPS0_(%"class.micropather::PathNode"* %10, %"class.micropather::PathNode"* %11)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %12 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  %totalCost6 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %12, i32 0, i32 3
  %13 = load float, float* %totalCost6, align 8, !tbaa !14
  %14 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  %next7 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %14, i32 0, i32 11
  %15 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %next7, align 8, !tbaa !9
  %totalCost8 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %15, i32 0, i32 3
  %16 = load float, float* %totalCost8, align 8, !tbaa !14
  %cmp9 = fcmp ogt float %13, %16
  br i1 %cmp9, label %if.then10, label %if.end16

if.then10:                                        ; preds = %if.end
  %17 = bitcast %"class.micropather::PathNode"** %it to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #10
  %18 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  %next11 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %18, i32 0, i32 11
  %19 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %next11, align 8, !tbaa !9
  store %"class.micropather::PathNode"* %19, %"class.micropather::PathNode"** %it, align 8, !tbaa !3
  %20 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  call void @_ZN11micropather8PathNode6UnlinkEv(%"class.micropather::PathNode"* %20)
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then10
  %21 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  %totalCost12 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %21, i32 0, i32 3
  %22 = load float, float* %totalCost12, align 8, !tbaa !14
  %23 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %it, align 8, !tbaa !3
  %totalCost13 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %23, i32 0, i32 3
  %24 = load float, float* %totalCost13, align 8, !tbaa !14
  %cmp14 = fcmp ogt float %22, %24
  br i1 %cmp14, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %25 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %it, align 8, !tbaa !3
  %next15 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %25, i32 0, i32 11
  %26 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %next15, align 8, !tbaa !9
  store %"class.micropather::PathNode"* %26, %"class.micropather::PathNode"** %it, align 8, !tbaa !3
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %27 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %it, align 8, !tbaa !3
  %28 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  call void @_ZN11micropather8PathNode9AddBeforeEPS0_(%"class.micropather::PathNode"* %27, %"class.micropather::PathNode"* %28)
  %29 = bitcast %"class.micropather::PathNode"** %it to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #10
  br label %if.end16

if.end16:                                         ; preds = %while.end, %if.end
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather12PathNodePoolC2Ejj(%"class.micropather::PathNodePool"* %this, i32 %_allocate, i32 %_typicalAdjacent) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  %_allocate.addr = alloca i32, align 4
  %_typicalAdjacent.addr = alloca i32, align 4
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  store i32 %_allocate, i32* %_allocate.addr, align 4, !tbaa !17
  store i32 %_typicalAdjacent, i32* %_typicalAdjacent.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  %firstBlock = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 1
  store %"struct.micropather::PathNodePool::Block"* null, %"struct.micropather::PathNodePool::Block"** %firstBlock, align 8, !tbaa !18
  %blocks = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 2
  store %"struct.micropather::PathNodePool::Block"* null, %"struct.micropather::PathNodePool::Block"** %blocks, align 8, !tbaa !20
  %freeMemSentinel = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 6
  %allocate = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 7
  %0 = load i32, i32* %_allocate.addr, align 4, !tbaa !17
  store i32 %0, i32* %allocate, align 8, !tbaa !21
  %nAllocated = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 8
  store i32 0, i32* %nAllocated, align 4, !tbaa !22
  %nAvailable = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 9
  store i32 0, i32* %nAvailable, align 8, !tbaa !23
  %freeMemSentinel2 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 6
  call void @_ZN11micropather8PathNode12InitSentinelEv(%"class.micropather::PathNode"* %freeMemSentinel2)
  %allocate3 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 7
  %1 = load i32, i32* %allocate3, align 8, !tbaa !21
  %2 = load i32, i32* %_typicalAdjacent.addr, align 4, !tbaa !17
  %mul = mul i32 %1, %2
  %cacheCap = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 4
  store i32 %mul, i32* %cacheCap, align 8, !tbaa !24
  %cacheSize = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 5
  store i32 0, i32* %cacheSize, align 4, !tbaa !25
  %cacheCap4 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 4
  %3 = load i32, i32* %cacheCap4, align 8, !tbaa !24
  %conv = sext i32 %3 to i64
  %mul5 = mul i64 %conv, 16
  %call = call i8* @malloc(i64 %mul5) #11
  %4 = bitcast i8* %call to %"struct.micropather::NodeCost"*
  %cache = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 3
  store %"struct.micropather::NodeCost"* %4, %"struct.micropather::NodeCost"** %cache, align 8, !tbaa !26
  %hashShift = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 10
  store i32 3, i32* %hashShift, align 4, !tbaa !27
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %call6 = call i32 @_ZNK11micropather12PathNodePool8HashSizeEv(%"class.micropather::PathNodePool"* %this1)
  %allocate7 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 7
  %5 = load i32, i32* %allocate7, align 8, !tbaa !21
  %cmp = icmp ult i32 %call6, %5
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %hashShift8 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 10
  %6 = load i32, i32* %hashShift8, align 4, !tbaa !27
  %inc = add i32 %6, 1
  store i32 %inc, i32* %hashShift8, align 4, !tbaa !27
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %call9 = call i32 @_ZNK11micropather12PathNodePool8HashSizeEv(%"class.micropather::PathNodePool"* %this1)
  %conv10 = zext i32 %call9 to i64
  %call11 = call i8* @calloc(i64 %conv10, i64 8) #12
  %7 = bitcast i8* %call11 to %"class.micropather::PathNode"**
  %hashTable = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 0
  store %"class.micropather::PathNode"** %7, %"class.micropather::PathNode"*** %hashTable, align 8, !tbaa !28
  %call12 = call %"struct.micropather::PathNodePool::Block"* @_ZN11micropather12PathNodePool8NewBlockEv(%"class.micropather::PathNodePool"* %this1)
  %firstBlock13 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 1
  store %"struct.micropather::PathNodePool::Block"* %call12, %"struct.micropather::PathNodePool::Block"** %firstBlock13, align 8, !tbaa !18
  %blocks14 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 2
  store %"struct.micropather::PathNodePool::Block"* %call12, %"struct.micropather::PathNodePool::Block"** %blocks14, align 8, !tbaa !20
  %totalCollide = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 11
  store i32 0, i32* %totalCollide, align 8, !tbaa !29
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8PathNode12InitSentinelEv(%"class.micropather::PathNode"* %this) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNode"*, align 8
  store %"class.micropather::PathNode"* %this, %"class.micropather::PathNode"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %this.addr, align 8
  call void @_ZN11micropather8PathNode5ClearEv(%"class.micropather::PathNode"* %this1)
  call void @_ZN11micropather8PathNode4InitEjPvffPS0_(%"class.micropather::PathNode"* %this1, i32 0, i8* null, float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000, %"class.micropather::PathNode"* null)
  %next = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 11
  store %"class.micropather::PathNode"* %this1, %"class.micropather::PathNode"** %next, align 8, !tbaa !9
  %prev = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 12
  store %"class.micropather::PathNode"* %this1, %"class.micropather::PathNode"** %prev, align 8, !tbaa !16
  ret void
}

; Function Attrs: allocsize(0)
declare i8* @malloc(i64) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr i32 @_ZNK11micropather12PathNodePool8HashSizeEv(%"class.micropather::PathNodePool"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  %hashShift = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 10
  %0 = load i32, i32* %hashShift, align 4, !tbaa !27
  %shl = shl i32 1, %0
  ret i32 %shl
}

; Function Attrs: allocsize(0,1)
declare i8* @calloc(i64, i64) #4

; Function Attrs: ssp uwtable
define %"struct.micropather::PathNodePool::Block"* @_ZN11micropather12PathNodePool8NewBlockEv(%"class.micropather::PathNodePool"* %this) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  %block = alloca %"struct.micropather::PathNodePool::Block"*, align 8
  %i = alloca i32, align 4
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  %0 = bitcast %"struct.micropather::PathNodePool::Block"** %block to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #10
  %allocate = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 7
  %1 = load i32, i32* %allocate, align 8, !tbaa !21
  %sub = sub i32 %1, 1
  %conv = zext i32 %sub to i64
  %mul = mul i64 88, %conv
  %add = add i64 96, %mul
  %call = call i8* @calloc(i64 1, i64 %add) #12
  %2 = bitcast i8* %call to %"struct.micropather::PathNodePool::Block"*
  store %"struct.micropather::PathNodePool::Block"* %2, %"struct.micropather::PathNodePool::Block"** %block, align 8, !tbaa !3
  %3 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %block, align 8, !tbaa !3
  %nextBlock = getelementptr inbounds %"struct.micropather::PathNodePool::Block", %"struct.micropather::PathNodePool::Block"* %3, i32 0, i32 0
  store %"struct.micropather::PathNodePool::Block"* null, %"struct.micropather::PathNodePool::Block"** %nextBlock, align 8, !tbaa !30
  %allocate2 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 7
  %4 = load i32, i32* %allocate2, align 8, !tbaa !21
  %nAvailable = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 9
  %5 = load i32, i32* %nAvailable, align 8, !tbaa !23
  %add3 = add i32 %5, %4
  store i32 %add3, i32* %nAvailable, align 8, !tbaa !23
  %6 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %6) #10
  store i32 0, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !tbaa !17
  %allocate4 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 7
  %8 = load i32, i32* %allocate4, align 8, !tbaa !21
  %cmp = icmp ult i32 %7, %8
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %9 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %9) #10
  br label %for.end

for.body:                                         ; preds = %for.cond
  %freeMemSentinel = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 6
  %10 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %block, align 8, !tbaa !3
  %pathNode = getelementptr inbounds %"struct.micropather::PathNodePool::Block", %"struct.micropather::PathNodePool::Block"* %10, i32 0, i32 1
  %11 = load i32, i32* %i, align 4, !tbaa !17
  %idxprom = zext i32 %11 to i64
  %arrayidx = getelementptr inbounds [1 x %"class.micropather::PathNode"], [1 x %"class.micropather::PathNode"]* %pathNode, i64 0, i64 %idxprom
  call void @_ZN11micropather8PathNode9AddBeforeEPS0_(%"class.micropather::PathNode"* %freeMemSentinel, %"class.micropather::PathNode"* %arrayidx)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !tbaa !17
  %inc = add i32 %12, 1
  store i32 %inc, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.end:                                          ; preds = %for.cond.cleanup
  %13 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %block, align 8, !tbaa !3
  %14 = bitcast %"struct.micropather::PathNodePool::Block"** %block to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %14) #10
  ret %"struct.micropather::PathNodePool::Block"* %13
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather12PathNodePoolC1Ejj(%"class.micropather::PathNodePool"* %this, i32 %_allocate, i32 %_typicalAdjacent) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  %_allocate.addr = alloca i32, align 4
  %_typicalAdjacent.addr = alloca i32, align 4
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  store i32 %_allocate, i32* %_allocate.addr, align 4, !tbaa !17
  store i32 %_typicalAdjacent, i32* %_typicalAdjacent.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  %0 = load i32, i32* %_allocate.addr, align 4, !tbaa !17
  %1 = load i32, i32* %_typicalAdjacent.addr, align 4, !tbaa !17
  call void @_ZN11micropather12PathNodePoolC2Ejj(%"class.micropather::PathNodePool"* %this1, i32 %0, i32 %1)
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather12PathNodePoolD2Ev(%"class.micropather::PathNodePool"* %this) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  call void @_ZN11micropather12PathNodePool5ClearEv(%"class.micropather::PathNodePool"* %this1)
  %firstBlock = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 1
  %0 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %firstBlock, align 8, !tbaa !18
  %1 = bitcast %"struct.micropather::PathNodePool::Block"* %0 to i8*
  call void @free(i8* %1)
  %cache = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 3
  %2 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %cache, align 8, !tbaa !26
  %3 = bitcast %"struct.micropather::NodeCost"* %2 to i8*
  call void @free(i8* %3)
  %hashTable = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 0
  %4 = load %"class.micropather::PathNode"**, %"class.micropather::PathNode"*** %hashTable, align 8, !tbaa !28
  %5 = bitcast %"class.micropather::PathNode"** %4 to i8*
  call void @free(i8* %5)
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather12PathNodePool5ClearEv(%"class.micropather::PathNodePool"* %this) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  %b = alloca %"struct.micropather::PathNodePool::Block"*, align 8
  %temp = alloca %"struct.micropather::PathNodePool::Block"*, align 8
  %i = alloca i32, align 4
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  %0 = bitcast %"struct.micropather::PathNodePool::Block"** %b to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #10
  %blocks = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 2
  %1 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %blocks, align 8, !tbaa !20
  store %"struct.micropather::PathNodePool::Block"* %1, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %2 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  %tobool = icmp ne %"struct.micropather::PathNodePool::Block"* %2, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = bitcast %"struct.micropather::PathNodePool::Block"** %temp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #10
  %4 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  %nextBlock = getelementptr inbounds %"struct.micropather::PathNodePool::Block", %"struct.micropather::PathNodePool::Block"* %4, i32 0, i32 0
  %5 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %nextBlock, align 8, !tbaa !30
  store %"struct.micropather::PathNodePool::Block"* %5, %"struct.micropather::PathNodePool::Block"** %temp, align 8, !tbaa !3
  %6 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  %firstBlock = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 1
  %7 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %firstBlock, align 8, !tbaa !18
  %cmp = icmp ne %"struct.micropather::PathNodePool::Block"* %6, %7
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %8 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  %9 = bitcast %"struct.micropather::PathNodePool::Block"* %8 to i8*
  call void @free(i8* %9)
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %10 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %temp, align 8, !tbaa !3
  store %"struct.micropather::PathNodePool::Block"* %10, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  %11 = bitcast %"struct.micropather::PathNodePool::Block"** %temp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #10
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %firstBlock2 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 1
  %12 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %firstBlock2, align 8, !tbaa !18
  %blocks3 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 2
  store %"struct.micropather::PathNodePool::Block"* %12, %"struct.micropather::PathNodePool::Block"** %blocks3, align 8, !tbaa !20
  %nAllocated = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 8
  %13 = load i32, i32* %nAllocated, align 4, !tbaa !22
  %cmp4 = icmp ugt i32 %13, 0
  br i1 %cmp4, label %if.then5, label %if.end12

if.then5:                                         ; preds = %while.end
  %freeMemSentinel = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 6
  %freeMemSentinel6 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 6
  %next = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %freeMemSentinel6, i32 0, i32 11
  store %"class.micropather::PathNode"* %freeMemSentinel, %"class.micropather::PathNode"** %next, align 8, !tbaa !32
  %freeMemSentinel7 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 6
  %freeMemSentinel8 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 6
  %prev = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %freeMemSentinel8, i32 0, i32 12
  store %"class.micropather::PathNode"* %freeMemSentinel7, %"class.micropather::PathNode"** %prev, align 8, !tbaa !33
  %hashTable = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 0
  %14 = load %"class.micropather::PathNode"**, %"class.micropather::PathNode"*** %hashTable, align 8, !tbaa !28
  %15 = bitcast %"class.micropather::PathNode"** %14 to i8*
  %call = call i32 @_ZNK11micropather12PathNodePool8HashSizeEv(%"class.micropather::PathNodePool"* %this1)
  %conv = zext i32 %call to i64
  %mul = mul i64 8, %conv
  call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 %mul, i32 8, i1 false)
  %16 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #10
  store i32 0, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then5
  %17 = load i32, i32* %i, align 4, !tbaa !17
  %allocate = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 7
  %18 = load i32, i32* %allocate, align 8, !tbaa !21
  %cmp9 = icmp ult i32 %17, %18
  br i1 %cmp9, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %19 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %19) #10
  br label %for.end

for.body:                                         ; preds = %for.cond
  %freeMemSentinel10 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 6
  %firstBlock11 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 1
  %20 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %firstBlock11, align 8, !tbaa !18
  %pathNode = getelementptr inbounds %"struct.micropather::PathNodePool::Block", %"struct.micropather::PathNodePool::Block"* %20, i32 0, i32 1
  %21 = load i32, i32* %i, align 4, !tbaa !17
  %idxprom = zext i32 %21 to i64
  %arrayidx = getelementptr inbounds [1 x %"class.micropather::PathNode"], [1 x %"class.micropather::PathNode"]* %pathNode, i64 0, i64 %idxprom
  call void @_ZN11micropather8PathNode9AddBeforeEPS0_(%"class.micropather::PathNode"* %freeMemSentinel10, %"class.micropather::PathNode"* %arrayidx)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !tbaa !17
  %inc = add i32 %22, 1
  store i32 %inc, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.end:                                          ; preds = %for.cond.cleanup
  br label %if.end12

if.end12:                                         ; preds = %for.end, %while.end
  %allocate13 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 7
  %23 = load i32, i32* %allocate13, align 8, !tbaa !21
  %nAvailable = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 9
  store i32 %23, i32* %nAvailable, align 8, !tbaa !23
  %nAllocated14 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 8
  store i32 0, i32* %nAllocated14, align 4, !tbaa !22
  %cacheSize = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 5
  store i32 0, i32* %cacheSize, align 4, !tbaa !25
  %24 = bitcast %"struct.micropather::PathNodePool::Block"** %b to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24) #10
  ret void
}

declare void @free(i8*) #5

; Function Attrs: ssp uwtable
define void @_ZN11micropather12PathNodePoolD1Ev(%"class.micropather::PathNodePool"* %this) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  call void @_ZN11micropather12PathNodePoolD2Ev(%"class.micropather::PathNodePool"* %this1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @_ZN11micropather12PathNodePool9PushCacheEPKNS_8NodeCostEiPi(%"class.micropather::PathNodePool"* %this, %"struct.micropather::NodeCost"* %nodes, i32 %nNodes, i32* %start) #2 align 2 {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  %nodes.addr = alloca %"struct.micropather::NodeCost"*, align 8
  %nNodes.addr = alloca i32, align 4
  %start.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  store %"struct.micropather::NodeCost"* %nodes, %"struct.micropather::NodeCost"** %nodes.addr, align 8, !tbaa !3
  store i32 %nNodes, i32* %nNodes.addr, align 4, !tbaa !17
  store i32* %start, i32** %start.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  %0 = load i32*, i32** %start.addr, align 8, !tbaa !3
  store i32 -1, i32* %0, align 4, !tbaa !17
  %1 = load i32, i32* %nNodes.addr, align 4, !tbaa !17
  %cacheSize = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 5
  %2 = load i32, i32* %cacheSize, align 4, !tbaa !25
  %add = add nsw i32 %1, %2
  %cacheCap = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 4
  %3 = load i32, i32* %cacheCap, align 8, !tbaa !24
  %cmp = icmp sle i32 %add, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #10
  store i32 0, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %i, align 4, !tbaa !17
  %6 = load i32, i32* %nNodes.addr, align 4, !tbaa !17
  %cmp2 = icmp slt i32 %5, %6
  br i1 %cmp2, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %7 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %7) #10
  br label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %nodes.addr, align 8, !tbaa !3
  %9 = load i32, i32* %i, align 4, !tbaa !17
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %8, i64 %idxprom
  %cache = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 3
  %10 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %cache, align 8, !tbaa !26
  %11 = load i32, i32* %i, align 4, !tbaa !17
  %cacheSize3 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 5
  %12 = load i32, i32* %cacheSize3, align 4, !tbaa !25
  %add4 = add nsw i32 %11, %12
  %idxprom5 = sext i32 %add4 to i64
  %arrayidx6 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %10, i64 %idxprom5
  %13 = bitcast %"struct.micropather::NodeCost"* %arrayidx6 to i8*
  %14 = bitcast %"struct.micropather::NodeCost"* %arrayidx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false), !tbaa.struct !34
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !tbaa !17
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.end:                                          ; preds = %for.cond.cleanup
  %cacheSize7 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 5
  %16 = load i32, i32* %cacheSize7, align 4, !tbaa !25
  %17 = load i32*, i32** %start.addr, align 8, !tbaa !3
  store i32 %16, i32* %17, align 4, !tbaa !17
  %18 = load i32, i32* %nNodes.addr, align 4, !tbaa !17
  %cacheSize8 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 5
  %19 = load i32, i32* %cacheSize8, align 4, !tbaa !25
  %add9 = add nsw i32 %19, %18
  store i32 %add9, i32* %cacheSize8, align 4, !tbaa !25
  store i1 true, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end, %for.end
  %20 = load i1, i1* %retval, align 1
  ret i1 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind ssp uwtable
define void @_ZN11micropather12PathNodePool8GetCacheEiiPNS_8NodeCostE(%"class.micropather::PathNodePool"* %this, i32 %start, i32 %nNodes, %"struct.micropather::NodeCost"* %nodes) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  %start.addr = alloca i32, align 4
  %nNodes.addr = alloca i32, align 4
  %nodes.addr = alloca %"struct.micropather::NodeCost"*, align 8
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  store i32 %start, i32* %start.addr, align 4, !tbaa !17
  store i32 %nNodes, i32* %nNodes.addr, align 4, !tbaa !17
  store %"struct.micropather::NodeCost"* %nodes, %"struct.micropather::NodeCost"** %nodes.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  %0 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %nodes.addr, align 8, !tbaa !3
  %1 = bitcast %"struct.micropather::NodeCost"* %0 to i8*
  %cache = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 3
  %2 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %cache, align 8, !tbaa !26
  %3 = load i32, i32* %start.addr, align 4, !tbaa !17
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %2, i64 %idxprom
  %4 = bitcast %"struct.micropather::NodeCost"* %arrayidx to i8*
  %5 = load i32, i32* %nNodes.addr, align 4, !tbaa !17
  %conv = sext i32 %5 to i64
  %mul = mul i64 16, %conv
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %4, i64 %mul, i32 8, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #1

; Function Attrs: ssp uwtable
define i32 @_ZN11micropather12PathNodePool4HashEPv(%"class.micropather::PathNodePool"* %this, i8* %voidval) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  %voidval.addr = alloca i8*, align 8
  %h = alloca i64, align 8
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  store i8* %voidval, i8** %voidval.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  %0 = bitcast i64* %h to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #10
  %1 = load i8*, i8** %voidval.addr, align 8, !tbaa !3
  %2 = ptrtoint i8* %1 to i64
  store i64 %2, i64* %h, align 8, !tbaa !36
  %3 = load i64, i64* %h, align 8, !tbaa !36
  %call = call i32 @_ZNK11micropather12PathNodePool8HashMaskEv(%"class.micropather::PathNodePool"* %this1)
  %conv = zext i32 %call to i64
  %rem = urem i64 %3, %conv
  %conv2 = trunc i64 %rem to i32
  %4 = bitcast i64* %h to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #10
  ret i32 %conv2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr i32 @_ZNK11micropather12PathNodePool8HashMaskEv(%"class.micropather::PathNodePool"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  %hashShift = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 10
  %0 = load i32, i32* %hashShift, align 4, !tbaa !27
  %shl = shl i32 1, %0
  %sub = sub nsw i32 %shl, 1
  ret i32 %sub
}

; Function Attrs: ssp uwtable
define %"class.micropather::PathNode"* @_ZN11micropather12PathNodePool5AllocEv(%"class.micropather::PathNodePool"* %this) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  %b = alloca %"struct.micropather::PathNodePool::Block"*, align 8
  %pathNode = alloca %"class.micropather::PathNode"*, align 8
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  %freeMemSentinel = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 6
  %next = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %freeMemSentinel, i32 0, i32 11
  %0 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %next, align 8, !tbaa !32
  %freeMemSentinel2 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 6
  %cmp = icmp eq %"class.micropather::PathNode"* %0, %freeMemSentinel2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = bitcast %"struct.micropather::PathNodePool::Block"** %b to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #10
  %call = call %"struct.micropather::PathNodePool::Block"* @_ZN11micropather12PathNodePool8NewBlockEv(%"class.micropather::PathNodePool"* %this1)
  store %"struct.micropather::PathNodePool::Block"* %call, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  %blocks = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 2
  %2 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %blocks, align 8, !tbaa !20
  %3 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  %nextBlock = getelementptr inbounds %"struct.micropather::PathNodePool::Block", %"struct.micropather::PathNodePool::Block"* %3, i32 0, i32 0
  store %"struct.micropather::PathNodePool::Block"* %2, %"struct.micropather::PathNodePool::Block"** %nextBlock, align 8, !tbaa !30
  %4 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  %blocks3 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 2
  store %"struct.micropather::PathNodePool::Block"* %4, %"struct.micropather::PathNodePool::Block"** %blocks3, align 8, !tbaa !20
  %5 = bitcast %"struct.micropather::PathNodePool::Block"** %b to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #10
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = bitcast %"class.micropather::PathNode"** %pathNode to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #10
  %freeMemSentinel4 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 6
  %next5 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %freeMemSentinel4, i32 0, i32 11
  %7 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %next5, align 8, !tbaa !32
  store %"class.micropather::PathNode"* %7, %"class.micropather::PathNode"** %pathNode, align 8, !tbaa !3
  %8 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pathNode, align 8, !tbaa !3
  call void @_ZN11micropather8PathNode6UnlinkEv(%"class.micropather::PathNode"* %8)
  %nAllocated = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 8
  %9 = load i32, i32* %nAllocated, align 4, !tbaa !22
  %inc = add i32 %9, 1
  store i32 %inc, i32* %nAllocated, align 4, !tbaa !22
  %nAvailable = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 9
  %10 = load i32, i32* %nAvailable, align 8, !tbaa !23
  %dec = add i32 %10, -1
  store i32 %dec, i32* %nAvailable, align 8, !tbaa !23
  %11 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pathNode, align 8, !tbaa !3
  %12 = bitcast %"class.micropather::PathNode"** %pathNode to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #10
  ret %"class.micropather::PathNode"* %11
}

; Function Attrs: nounwind ssp uwtable
define void @_ZN11micropather12PathNodePool11AddPathNodeEjPNS_8PathNodeE(%"class.micropather::PathNodePool"* %this, i32 %key, %"class.micropather::PathNode"* %root) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  %key.addr = alloca i32, align 4
  %root.addr = alloca %"class.micropather::PathNode"*, align 8
  %p = alloca %"class.micropather::PathNode"*, align 8
  %dir = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  store i32 %key, i32* %key.addr, align 4, !tbaa !17
  store %"class.micropather::PathNode"* %root, %"class.micropather::PathNode"** %root.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  %hashTable = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 0
  %0 = load %"class.micropather::PathNode"**, %"class.micropather::PathNode"*** %hashTable, align 8, !tbaa !28
  %1 = load i32, i32* %key.addr, align 4, !tbaa !17
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %0, i64 %idxprom
  %2 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %arrayidx, align 8, !tbaa !3
  %tobool = icmp ne %"class.micropather::PathNode"* %2, null
  br i1 %tobool, label %if.then, label %if.else16

if.then:                                          ; preds = %entry
  %3 = bitcast %"class.micropather::PathNode"** %p to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #10
  %hashTable2 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 0
  %4 = load %"class.micropather::PathNode"**, %"class.micropather::PathNode"*** %hashTable2, align 8, !tbaa !28
  %5 = load i32, i32* %key.addr, align 4, !tbaa !17
  %idxprom3 = zext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %4, i64 %idxprom3
  %6 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %arrayidx4, align 8, !tbaa !3
  store %"class.micropather::PathNode"* %6, %"class.micropather::PathNode"** %p, align 8, !tbaa !3
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont, %if.then
  br label %while.body

while.body:                                       ; preds = %while.cond
  %7 = bitcast i32* %dir to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #10
  %8 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root.addr, align 8, !tbaa !3
  %state = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %8, i32 0, i32 0
  %9 = load i8*, i8** %state, align 8, !tbaa !38
  %10 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %p, align 8, !tbaa !3
  %state5 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %10, i32 0, i32 0
  %11 = load i8*, i8** %state5, align 8, !tbaa !38
  %cmp = icmp ult i8* %9, %11
  %12 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 0, i32 1
  store i32 %cond, i32* %dir, align 4, !tbaa !17
  %13 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %p, align 8, !tbaa !3
  %child = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %13, i32 0, i32 10
  %14 = load i32, i32* %dir, align 4, !tbaa !17
  %idxprom6 = sext i32 %14 to i64
  %arrayidx7 = getelementptr inbounds [2 x %"class.micropather::PathNode"*], [2 x %"class.micropather::PathNode"*]* %child, i64 0, i64 %idxprom6
  %15 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %arrayidx7, align 8, !tbaa !3
  %tobool8 = icmp ne %"class.micropather::PathNode"* %15, null
  br i1 %tobool8, label %if.then9, label %if.else

if.then9:                                         ; preds = %while.body
  %16 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %p, align 8, !tbaa !3
  %child10 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %16, i32 0, i32 10
  %17 = load i32, i32* %dir, align 4, !tbaa !17
  %idxprom11 = sext i32 %17 to i64
  %arrayidx12 = getelementptr inbounds [2 x %"class.micropather::PathNode"*], [2 x %"class.micropather::PathNode"*]* %child10, i64 0, i64 %idxprom11
  %18 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %arrayidx12, align 8, !tbaa !3
  store %"class.micropather::PathNode"* %18, %"class.micropather::PathNode"** %p, align 8, !tbaa !3
  br label %if.end

if.else:                                          ; preds = %while.body
  %19 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root.addr, align 8, !tbaa !3
  %20 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %p, align 8, !tbaa !3
  %child13 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %20, i32 0, i32 10
  %21 = load i32, i32* %dir, align 4, !tbaa !17
  %idxprom14 = sext i32 %21 to i64
  %arrayidx15 = getelementptr inbounds [2 x %"class.micropather::PathNode"*], [2 x %"class.micropather::PathNode"*]* %child13, i64 0, i64 %idxprom14
  store %"class.micropather::PathNode"* %19, %"class.micropather::PathNode"** %arrayidx15, align 8, !tbaa !3
  store i32 3, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then9
  store i32 0, i32* %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.else
  %22 = bitcast i32* %dir to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %22) #10
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 3, label %while.end
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond

while.end:                                        ; preds = %cleanup
  %23 = bitcast %"class.micropather::PathNode"** %p to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #10
  br label %if.end20

if.else16:                                        ; preds = %entry
  %24 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root.addr, align 8, !tbaa !3
  %hashTable17 = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 0
  %25 = load %"class.micropather::PathNode"**, %"class.micropather::PathNode"*** %hashTable17, align 8, !tbaa !28
  %26 = load i32, i32* %key.addr, align 4, !tbaa !17
  %idxprom18 = zext i32 %26 to i64
  %arrayidx19 = getelementptr inbounds %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %25, i64 %idxprom18
  store %"class.micropather::PathNode"* %24, %"class.micropather::PathNode"** %arrayidx19, align 8, !tbaa !3
  br label %if.end20

if.end20:                                         ; preds = %if.else16, %while.end
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: ssp uwtable
define %"class.micropather::PathNode"* @_ZN11micropather12PathNodePool13FetchPathNodeEPv(%"class.micropather::PathNodePool"* %this, i8* %state) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  %state.addr = alloca i8*, align 8
  %key = alloca i32, align 4
  %root = alloca %"class.micropather::PathNode"*, align 8
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  store i8* %state, i8** %state.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  %0 = bitcast i32* %key to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #10
  %1 = load i8*, i8** %state.addr, align 8, !tbaa !3
  %call = call i32 @_ZN11micropather12PathNodePool4HashEPv(%"class.micropather::PathNodePool"* %this1, i8* %1)
  store i32 %call, i32* %key, align 4, !tbaa !17
  %2 = bitcast %"class.micropather::PathNode"** %root to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #10
  %hashTable = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 0
  %3 = load %"class.micropather::PathNode"**, %"class.micropather::PathNode"*** %hashTable, align 8, !tbaa !28
  %4 = load i32, i32* %key, align 4, !tbaa !17
  %idxprom = zext i32 %4 to i64
  %arrayidx = getelementptr inbounds %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %3, i64 %idxprom
  %5 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %arrayidx, align 8, !tbaa !3
  store %"class.micropather::PathNode"* %5, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  br label %while.cond

while.cond:                                       ; preds = %cond.end, %entry
  %6 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %tobool = icmp ne %"class.micropather::PathNode"* %6, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %7 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %state2 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %7, i32 0, i32 0
  %8 = load i8*, i8** %state2, align 8, !tbaa !38
  %9 = load i8*, i8** %state.addr, align 8, !tbaa !3
  %cmp = icmp eq i8* %8, %9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  br label %while.end

if.end:                                           ; preds = %while.body
  %10 = load i8*, i8** %state.addr, align 8, !tbaa !3
  %11 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %state3 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %11, i32 0, i32 0
  %12 = load i8*, i8** %state3, align 8, !tbaa !38
  %cmp4 = icmp ult i8* %10, %12
  br i1 %cmp4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %13 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %child = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %13, i32 0, i32 10
  %arrayidx5 = getelementptr inbounds [2 x %"class.micropather::PathNode"*], [2 x %"class.micropather::PathNode"*]* %child, i64 0, i64 0
  %14 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %arrayidx5, align 8, !tbaa !3
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %15 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %child6 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %15, i32 0, i32 10
  %arrayidx7 = getelementptr inbounds [2 x %"class.micropather::PathNode"*], [2 x %"class.micropather::PathNode"*]* %child6, i64 0, i64 1
  %16 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %arrayidx7, align 8, !tbaa !3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %"class.micropather::PathNode"* [ %14, %cond.true ], [ %16, %cond.false ]
  store %"class.micropather::PathNode"* %cond, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  br label %while.cond

while.end:                                        ; preds = %if.then, %while.cond
  %17 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %18 = bitcast %"class.micropather::PathNode"** %root to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #10
  %19 = bitcast i32* %key to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %19) #10
  ret %"class.micropather::PathNode"* %17
}

; Function Attrs: ssp uwtable
define %"class.micropather::PathNode"* @_ZN11micropather12PathNodePool11GetPathNodeEjPvffPNS_8PathNodeE(%"class.micropather::PathNodePool"* %this, i32 %frame, i8* %_state, float %_costFromStart, float %_estToGoal, %"class.micropather::PathNode"* %_parent) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  %frame.addr = alloca i32, align 4
  %_state.addr = alloca i8*, align 8
  %_costFromStart.addr = alloca float, align 4
  %_estToGoal.addr = alloca float, align 4
  %_parent.addr = alloca %"class.micropather::PathNode"*, align 8
  %key = alloca i32, align 4
  %root = alloca %"class.micropather::PathNode"*, align 8
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  store i32 %frame, i32* %frame.addr, align 4, !tbaa !17
  store i8* %_state, i8** %_state.addr, align 8, !tbaa !3
  store float %_costFromStart, float* %_costFromStart.addr, align 4, !tbaa !35
  store float %_estToGoal, float* %_estToGoal.addr, align 4, !tbaa !35
  store %"class.micropather::PathNode"* %_parent, %"class.micropather::PathNode"** %_parent.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  %0 = bitcast i32* %key to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #10
  %1 = load i8*, i8** %_state.addr, align 8, !tbaa !3
  %call = call i32 @_ZN11micropather12PathNodePool4HashEPv(%"class.micropather::PathNodePool"* %this1, i8* %1)
  store i32 %call, i32* %key, align 4, !tbaa !17
  %2 = bitcast %"class.micropather::PathNode"** %root to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #10
  %hashTable = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 0
  %3 = load %"class.micropather::PathNode"**, %"class.micropather::PathNode"*** %hashTable, align 8, !tbaa !28
  %4 = load i32, i32* %key, align 4, !tbaa !17
  %idxprom = zext i32 %4 to i64
  %arrayidx = getelementptr inbounds %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %3, i64 %idxprom
  %5 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %arrayidx, align 8, !tbaa !3
  store %"class.micropather::PathNode"* %5, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  br label %while.cond

while.cond:                                       ; preds = %cond.end, %entry
  %6 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %tobool = icmp ne %"class.micropather::PathNode"* %6, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %7 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %state = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %7, i32 0, i32 0
  %8 = load i8*, i8** %state, align 8, !tbaa !38
  %9 = load i8*, i8** %_state.addr, align 8, !tbaa !3
  %cmp = icmp eq i8* %8, %9
  br i1 %cmp, label %if.then, label %if.end5

if.then:                                          ; preds = %while.body
  %10 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %frame2 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %10, i32 0, i32 6
  %11 = load i32, i32* %frame2, align 8, !tbaa !39
  %12 = load i32, i32* %frame.addr, align 4, !tbaa !17
  %cmp3 = icmp eq i32 %11, %12
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then
  br label %while.end

if.end:                                           ; preds = %if.then
  %13 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %14 = load i32, i32* %frame.addr, align 4, !tbaa !17
  %15 = load i8*, i8** %_state.addr, align 8, !tbaa !3
  %16 = load float, float* %_costFromStart.addr, align 4, !tbaa !35
  %17 = load float, float* %_estToGoal.addr, align 4, !tbaa !35
  %18 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %_parent.addr, align 8, !tbaa !3
  call void @_ZN11micropather8PathNode4InitEjPvffPS0_(%"class.micropather::PathNode"* %13, i32 %14, i8* %15, float %16, float %17, %"class.micropather::PathNode"* %18)
  br label %while.end

if.end5:                                          ; preds = %while.body
  %19 = load i8*, i8** %_state.addr, align 8, !tbaa !3
  %20 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %state6 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %20, i32 0, i32 0
  %21 = load i8*, i8** %state6, align 8, !tbaa !38
  %cmp7 = icmp ult i8* %19, %21
  br i1 %cmp7, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end5
  %22 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %child = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %22, i32 0, i32 10
  %arrayidx8 = getelementptr inbounds [2 x %"class.micropather::PathNode"*], [2 x %"class.micropather::PathNode"*]* %child, i64 0, i64 0
  %23 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %arrayidx8, align 8, !tbaa !3
  br label %cond.end

cond.false:                                       ; preds = %if.end5
  %24 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %child9 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %24, i32 0, i32 10
  %arrayidx10 = getelementptr inbounds [2 x %"class.micropather::PathNode"*], [2 x %"class.micropather::PathNode"*]* %child9, i64 0, i64 1
  %25 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %arrayidx10, align 8, !tbaa !3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %"class.micropather::PathNode"* [ %23, %cond.true ], [ %25, %cond.false ]
  store %"class.micropather::PathNode"* %cond, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  br label %while.cond

while.end:                                        ; preds = %if.end, %if.then4, %while.cond
  %26 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %tobool11 = icmp ne %"class.micropather::PathNode"* %26, null
  br i1 %tobool11, label %if.end14, label %if.then12

if.then12:                                        ; preds = %while.end
  %call13 = call %"class.micropather::PathNode"* @_ZN11micropather12PathNodePool5AllocEv(%"class.micropather::PathNodePool"* %this1)
  store %"class.micropather::PathNode"* %call13, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %27 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  call void @_ZN11micropather8PathNode5ClearEv(%"class.micropather::PathNode"* %27)
  %28 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %29 = load i32, i32* %frame.addr, align 4, !tbaa !17
  %30 = load i8*, i8** %_state.addr, align 8, !tbaa !3
  %31 = load float, float* %_costFromStart.addr, align 4, !tbaa !35
  %32 = load float, float* %_estToGoal.addr, align 4, !tbaa !35
  %33 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %_parent.addr, align 8, !tbaa !3
  call void @_ZN11micropather8PathNode4InitEjPvffPS0_(%"class.micropather::PathNode"* %28, i32 %29, i8* %30, float %31, float %32, %"class.micropather::PathNode"* %33)
  %34 = load i32, i32* %key, align 4, !tbaa !17
  %35 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  call void @_ZN11micropather12PathNodePool11AddPathNodeEjPNS_8PathNodeE(%"class.micropather::PathNodePool"* %this1, i32 %34, %"class.micropather::PathNode"* %35)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %while.end
  %36 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %root, align 8, !tbaa !3
  %37 = bitcast %"class.micropather::PathNode"** %root to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %37) #10
  %38 = bitcast i32* %key to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %38) #10
  ret %"class.micropather::PathNode"* %36
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather8PathNode4InitEjPvffPS0_(%"class.micropather::PathNode"* %this, i32 %_frame, i8* %_state, float %_costFromStart, float %_estToGoal, %"class.micropather::PathNode"* %_parent) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNode"*, align 8
  %_frame.addr = alloca i32, align 4
  %_state.addr = alloca i8*, align 8
  %_costFromStart.addr = alloca float, align 4
  %_estToGoal.addr = alloca float, align 4
  %_parent.addr = alloca %"class.micropather::PathNode"*, align 8
  store %"class.micropather::PathNode"* %this, %"class.micropather::PathNode"** %this.addr, align 8, !tbaa !3
  store i32 %_frame, i32* %_frame.addr, align 4, !tbaa !17
  store i8* %_state, i8** %_state.addr, align 8, !tbaa !3
  store float %_costFromStart, float* %_costFromStart.addr, align 4, !tbaa !35
  store float %_estToGoal, float* %_estToGoal.addr, align 4, !tbaa !35
  store %"class.micropather::PathNode"* %_parent, %"class.micropather::PathNode"** %_parent.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %this.addr, align 8
  %0 = load i8*, i8** %_state.addr, align 8, !tbaa !3
  %state = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 0
  store i8* %0, i8** %state, align 8, !tbaa !38
  %1 = load float, float* %_costFromStart.addr, align 4, !tbaa !35
  %costFromStart = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 1
  store float %1, float* %costFromStart, align 8, !tbaa !40
  %2 = load float, float* %_estToGoal.addr, align 4, !tbaa !35
  %estToGoal = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 2
  store float %2, float* %estToGoal, align 4, !tbaa !41
  call void @_ZN11micropather8PathNode13CalcTotalCostEv(%"class.micropather::PathNode"* %this1)
  %3 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %_parent.addr, align 8, !tbaa !3
  %parent = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 5
  store %"class.micropather::PathNode"* %3, %"class.micropather::PathNode"** %parent, align 8, !tbaa !42
  %4 = load i32, i32* %_frame.addr, align 4, !tbaa !17
  %frame = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 6
  store i32 %4, i32* %frame, align 8, !tbaa !39
  %inOpen = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 13
  store i8 0, i8* %inOpen, align 8, !tbaa !15
  %inClosed = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 14
  store i8 0, i8* %inClosed, align 1, !tbaa !43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @_ZN11micropather8PathNode5ClearEv(%"class.micropather::PathNode"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNode"*, align 8
  store %"class.micropather::PathNode"* %this, %"class.micropather::PathNode"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %this.addr, align 8
  %0 = bitcast %"class.micropather::PathNode"* %this1 to i8*
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 88, i32 8, i1 false)
  %numAdjacent = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 7
  store i32 -1, i32* %numAdjacent, align 4, !tbaa !44
  %cacheIndex = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 8
  store i32 -1, i32* %cacheIndex, align 8, !tbaa !45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN11micropather8PathNode13CalcTotalCostEv(%"class.micropather::PathNode"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNode"*, align 8
  store %"class.micropather::PathNode"* %this, %"class.micropather::PathNode"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %this.addr, align 8
  %costFromStart = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 1
  %0 = load float, float* %costFromStart, align 8, !tbaa !40
  %cmp = fcmp olt float %0, 0x47EFFFFFE0000000
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %estToGoal = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 2
  %1 = load float, float* %estToGoal, align 4, !tbaa !41
  %cmp2 = fcmp olt float %1, 0x47EFFFFFE0000000
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %costFromStart3 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 1
  %2 = load float, float* %costFromStart3, align 8, !tbaa !40
  %estToGoal4 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 2
  %3 = load float, float* %estToGoal4, align 4, !tbaa !41
  %add = fadd float %2, %3
  %totalCost = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 3
  store float %add, float* %totalCost, align 8, !tbaa !14
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  %totalCost5 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %this1, i32 0, i32 3
  store float 0x47EFFFFFE0000000, float* %totalCost5, align 8, !tbaa !14
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather11MicroPatherC2EPNS_5GraphEjjb(%"class.micropather::MicroPather"* %this, %"class.micropather::Graph"* %_graph, i32 %allocate, i32 %typicalAdjacent, i1 zeroext %cache) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.micropather::MicroPather"*, align 8
  %_graph.addr = alloca %"class.micropather::Graph"*, align 8
  %allocate.addr = alloca i32, align 4
  %typicalAdjacent.addr = alloca i32, align 4
  %cache.addr = alloca i8, align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.micropather::MicroPather"* %this, %"class.micropather::MicroPather"** %this.addr, align 8, !tbaa !3
  store %"class.micropather::Graph"* %_graph, %"class.micropather::Graph"** %_graph.addr, align 8, !tbaa !3
  store i32 %allocate, i32* %allocate.addr, align 4, !tbaa !17
  store i32 %typicalAdjacent, i32* %typicalAdjacent.addr, align 4, !tbaa !17
  %frombool = zext i1 %cache to i8
  store i8 %frombool, i8* %cache.addr, align 1, !tbaa !46
  %this1 = load %"class.micropather::MicroPather"*, %"class.micropather::MicroPather"** %this.addr, align 8
  %pathNodePool = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 0
  %0 = load i32, i32* %allocate.addr, align 4, !tbaa !17
  %1 = load i32, i32* %typicalAdjacent.addr, align 4, !tbaa !17
  call void @_ZN11micropather12PathNodePoolC1Ejj(%"class.micropather::PathNodePool"* %pathNodePool, i32 %0, i32 %1)
  %stateCostVec = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 1
  invoke void @_ZN11micropather8MPVectorINS_9StateCostEEC1Ev(%"class.micropather::MPVector"* %stateCostVec)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %nodeCostVec = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  invoke void @_ZN11micropather8MPVectorINS_8NodeCostEEC1Ev(%"class.micropather::MPVector.0"* %nodeCostVec)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  %costVec = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 3
  invoke void @_ZN11micropather8MPVectorIfEC1Ev(%"class.micropather::MPVector.1"* %costVec)
          to label %invoke.cont5 unwind label %lpad4

invoke.cont5:                                     ; preds = %invoke.cont3
  %graph = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 4
  %2 = load %"class.micropather::Graph"*, %"class.micropather::Graph"** %_graph.addr, align 8, !tbaa !3
  store %"class.micropather::Graph"* %2, %"class.micropather::Graph"** %graph, align 8, !tbaa !47
  %frame = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 5
  store i32 0, i32* %frame, align 8, !tbaa !52
  %pathCache = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  store %"class.micropather::PathCache"* null, %"class.micropather::PathCache"** %pathCache, align 8, !tbaa !53
  %3 = load i8, i8* %cache.addr, align 1, !tbaa !46, !range !54
  %tobool = trunc i8 %3 to i1
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont5
  %call = invoke i8* @_Znwm(i64 24) #13
          to label %invoke.cont7 unwind label %lpad6

invoke.cont7:                                     ; preds = %if.then
  %4 = bitcast i8* %call to %"class.micropather::PathCache"*
  %5 = load i32, i32* %allocate.addr, align 4, !tbaa !17
  %mul = mul i32 %5, 4
  invoke void @_ZN11micropather9PathCacheC1Ei(%"class.micropather::PathCache"* %4, i32 %mul)
          to label %invoke.cont9 unwind label %lpad8

invoke.cont9:                                     ; preds = %invoke.cont7
  %pathCache10 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  store %"class.micropather::PathCache"* %4, %"class.micropather::PathCache"** %pathCache10, align 8, !tbaa !53
  br label %if.end

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  br label %ehcleanup16

lpad2:                                            ; preds = %invoke.cont
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %exn.slot, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %ehselector.slot, align 4
  br label %ehcleanup14

lpad4:                                            ; preds = %invoke.cont3
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  store i8* %13, i8** %exn.slot, align 8
  %14 = extractvalue { i8*, i32 } %12, 1
  store i32 %14, i32* %ehselector.slot, align 4
  br label %ehcleanup12

lpad6:                                            ; preds = %if.then
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %exn.slot, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad8:                                            ; preds = %invoke.cont7
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  store i8* %19, i8** %exn.slot, align 8
  %20 = extractvalue { i8*, i32 } %18, 1
  store i32 %20, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #14
  br label %ehcleanup

if.end:                                           ; preds = %invoke.cont9, %invoke.cont5
  ret void

ehcleanup:                                        ; preds = %lpad8, %lpad6
  invoke void @_ZN11micropather8MPVectorIfED1Ev(%"class.micropather::MPVector.1"* %costVec)
          to label %invoke.cont11 unwind label %terminate.lpad

invoke.cont11:                                    ; preds = %ehcleanup
  br label %ehcleanup12

ehcleanup12:                                      ; preds = %invoke.cont11, %lpad4
  invoke void @_ZN11micropather8MPVectorINS_8NodeCostEED1Ev(%"class.micropather::MPVector.0"* %nodeCostVec)
          to label %invoke.cont13 unwind label %terminate.lpad

invoke.cont13:                                    ; preds = %ehcleanup12
  br label %ehcleanup14

ehcleanup14:                                      ; preds = %invoke.cont13, %lpad2
  invoke void @_ZN11micropather8MPVectorINS_9StateCostEED1Ev(%"class.micropather::MPVector"* %stateCostVec)
          to label %invoke.cont15 unwind label %terminate.lpad

invoke.cont15:                                    ; preds = %ehcleanup14
  br label %ehcleanup16

ehcleanup16:                                      ; preds = %invoke.cont15, %lpad
  invoke void @_ZN11micropather12PathNodePoolD1Ev(%"class.micropather::PathNodePool"* %pathNodePool)
          to label %invoke.cont17 unwind label %terminate.lpad

invoke.cont17:                                    ; preds = %ehcleanup16
  br label %eh.resume

eh.resume:                                        ; preds = %invoke.cont17
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val18 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val18

terminate.lpad:                                   ; preds = %ehcleanup16, %ehcleanup14, %ehcleanup12, %ehcleanup
  %21 = landingpad { i8*, i32 }
          catch i8* null
  %22 = extractvalue { i8*, i32 } %21, 0
  call void @__clang_call_terminate(i8* %22) #15
  unreachable
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_9StateCostEEC1Ev(%"class.micropather::MPVector"* %this) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector"*, align 8
  store %"class.micropather::MPVector"* %this, %"class.micropather::MPVector"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector"*, %"class.micropather::MPVector"** %this.addr, align 8
  call void @_ZN11micropather8MPVectorINS_9StateCostEEC2Ev(%"class.micropather::MPVector"* %this1)
  ret void
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_8NodeCostEEC1Ev(%"class.micropather::MPVector.0"* %this) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.0"*, align 8
  store %"class.micropather::MPVector.0"* %this, %"class.micropather::MPVector.0"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %this.addr, align 8
  call void @_ZN11micropather8MPVectorINS_8NodeCostEEC2Ev(%"class.micropather::MPVector.0"* %this1)
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorIfEC1Ev(%"class.micropather::MPVector.1"* %this) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.1"*, align 8
  store %"class.micropather::MPVector.1"* %this, %"class.micropather::MPVector.1"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector.1"*, %"class.micropather::MPVector.1"** %this.addr, align 8
  call void @_ZN11micropather8MPVectorIfEC2Ev(%"class.micropather::MPVector.1"* %this1)
  ret void
}

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #6

; Function Attrs: ssp uwtable
define void @_ZN11micropather9PathCacheC1Ei(%"class.micropather::PathCache"* %this, i32 %_allocated) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathCache"*, align 8
  %_allocated.addr = alloca i32, align 4
  store %"class.micropather::PathCache"* %this, %"class.micropather::PathCache"** %this.addr, align 8, !tbaa !3
  store i32 %_allocated, i32* %_allocated.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %this.addr, align 8
  %0 = load i32, i32* %_allocated.addr, align 4, !tbaa !17
  call void @_ZN11micropather9PathCacheC2Ei(%"class.micropather::PathCache"* %this1, i32 %0)
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorIfED1Ev(%"class.micropather::MPVector.1"* %this) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.1"*, align 8
  store %"class.micropather::MPVector.1"* %this, %"class.micropather::MPVector.1"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector.1"*, %"class.micropather::MPVector.1"** %this.addr, align 8
  call void @_ZN11micropather8MPVectorIfED2Ev(%"class.micropather::MPVector.1"* %this1)
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #8 {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #10
  call void @_ZSt9terminatev() #15
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_8NodeCostEED1Ev(%"class.micropather::MPVector.0"* %this) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.0"*, align 8
  store %"class.micropather::MPVector.0"* %this, %"class.micropather::MPVector.0"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %this.addr, align 8
  call void @_ZN11micropather8MPVectorINS_8NodeCostEED2Ev(%"class.micropather::MPVector.0"* %this1)
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_9StateCostEED1Ev(%"class.micropather::MPVector"* %this) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector"*, align 8
  store %"class.micropather::MPVector"* %this, %"class.micropather::MPVector"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector"*, %"class.micropather::MPVector"** %this.addr, align 8
  call void @_ZN11micropather8MPVectorINS_9StateCostEED2Ev(%"class.micropather::MPVector"* %this1)
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather11MicroPatherC1EPNS_5GraphEjjb(%"class.micropather::MicroPather"* %this, %"class.micropather::Graph"* %_graph, i32 %allocate, i32 %typicalAdjacent, i1 zeroext %cache) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MicroPather"*, align 8
  %_graph.addr = alloca %"class.micropather::Graph"*, align 8
  %allocate.addr = alloca i32, align 4
  %typicalAdjacent.addr = alloca i32, align 4
  %cache.addr = alloca i8, align 1
  store %"class.micropather::MicroPather"* %this, %"class.micropather::MicroPather"** %this.addr, align 8, !tbaa !3
  store %"class.micropather::Graph"* %_graph, %"class.micropather::Graph"** %_graph.addr, align 8, !tbaa !3
  store i32 %allocate, i32* %allocate.addr, align 4, !tbaa !17
  store i32 %typicalAdjacent, i32* %typicalAdjacent.addr, align 4, !tbaa !17
  %frombool = zext i1 %cache to i8
  store i8 %frombool, i8* %cache.addr, align 1, !tbaa !46
  %this1 = load %"class.micropather::MicroPather"*, %"class.micropather::MicroPather"** %this.addr, align 8
  %0 = load %"class.micropather::Graph"*, %"class.micropather::Graph"** %_graph.addr, align 8, !tbaa !3
  %1 = load i32, i32* %allocate.addr, align 4, !tbaa !17
  %2 = load i32, i32* %typicalAdjacent.addr, align 4, !tbaa !17
  %3 = load i8, i8* %cache.addr, align 1, !tbaa !46, !range !54
  %tobool = trunc i8 %3 to i1
  call void @_ZN11micropather11MicroPatherC2EPNS_5GraphEjjb(%"class.micropather::MicroPather"* %this1, %"class.micropather::Graph"* %0, i32 %1, i32 %2, i1 zeroext %tobool)
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather11MicroPatherD2Ev(%"class.micropather::MicroPather"* %this) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.micropather::MicroPather"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.micropather::MicroPather"* %this, %"class.micropather::MicroPather"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MicroPather"*, %"class.micropather::MicroPather"** %this.addr, align 8
  %pathCache = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  %0 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %pathCache, align 8, !tbaa !53
  %isnull = icmp eq %"class.micropather::PathCache"* %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  invoke void @_ZN11micropather9PathCacheD1Ev(%"class.micropather::PathCache"* %0)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %delete.notnull
  %1 = bitcast %"class.micropather::PathCache"* %0 to i8*
  call void @_ZdlPv(i8* %1) #14
  br label %delete.end

delete.end:                                       ; preds = %invoke.cont, %entry
  %costVec = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 3
  invoke void @_ZN11micropather8MPVectorIfED1Ev(%"class.micropather::MPVector.1"* %costVec)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %delete.end
  %nodeCostVec = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  invoke void @_ZN11micropather8MPVectorINS_8NodeCostEED1Ev(%"class.micropather::MPVector.0"* %nodeCostVec)
          to label %invoke.cont7 unwind label %lpad6

invoke.cont7:                                     ; preds = %invoke.cont3
  %stateCostVec = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 1
  invoke void @_ZN11micropather8MPVectorINS_9StateCostEED1Ev(%"class.micropather::MPVector"* %stateCostVec)
          to label %invoke.cont11 unwind label %lpad10

invoke.cont11:                                    ; preds = %invoke.cont7
  %pathNodePool = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 0
  call void @_ZN11micropather12PathNodePoolD1Ev(%"class.micropather::PathNodePool"* %pathNodePool)
  ret void

lpad:                                             ; preds = %delete.notnull
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  %5 = bitcast %"class.micropather::PathCache"* %0 to i8*
  call void @_ZdlPv(i8* %5) #14
  %costVec4 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 3
  invoke void @_ZN11micropather8MPVectorIfED1Ev(%"class.micropather::MPVector.1"* %costVec4)
          to label %invoke.cont5 unwind label %terminate.lpad

lpad2:                                            ; preds = %delete.end
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  br label %ehcleanup

invoke.cont5:                                     ; preds = %lpad
  br label %ehcleanup

lpad6:                                            ; preds = %invoke.cont3
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %exn.slot, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %ehselector.slot, align 4
  br label %ehcleanup12

ehcleanup:                                        ; preds = %invoke.cont5, %lpad2
  %nodeCostVec8 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  invoke void @_ZN11micropather8MPVectorINS_8NodeCostEED1Ev(%"class.micropather::MPVector.0"* %nodeCostVec8)
          to label %invoke.cont9 unwind label %terminate.lpad

invoke.cont9:                                     ; preds = %ehcleanup
  br label %ehcleanup12

lpad10:                                           ; preds = %invoke.cont7
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  store i8* %13, i8** %exn.slot, align 8
  %14 = extractvalue { i8*, i32 } %12, 1
  store i32 %14, i32* %ehselector.slot, align 4
  br label %ehcleanup15

ehcleanup12:                                      ; preds = %invoke.cont9, %lpad6
  %stateCostVec13 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 1
  invoke void @_ZN11micropather8MPVectorINS_9StateCostEED1Ev(%"class.micropather::MPVector"* %stateCostVec13)
          to label %invoke.cont14 unwind label %terminate.lpad

invoke.cont14:                                    ; preds = %ehcleanup12
  br label %ehcleanup15

ehcleanup15:                                      ; preds = %invoke.cont14, %lpad10
  %pathNodePool16 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 0
  invoke void @_ZN11micropather12PathNodePoolD1Ev(%"class.micropather::PathNodePool"* %pathNodePool16)
          to label %invoke.cont17 unwind label %terminate.lpad

invoke.cont17:                                    ; preds = %ehcleanup15
  br label %eh.resume

eh.resume:                                        ; preds = %invoke.cont17
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val18 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val18

terminate.lpad:                                   ; preds = %ehcleanup15, %ehcleanup12, %ehcleanup, %lpad
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  call void @__clang_call_terminate(i8* %16) #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define void @_ZN11micropather9PathCacheD1Ev(%"class.micropather::PathCache"* %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathCache"*, align 8
  store %"class.micropather::PathCache"* %this, %"class.micropather::PathCache"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %this.addr, align 8
  call void @_ZN11micropather9PathCacheD2Ev(%"class.micropather::PathCache"* %this1)
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather11MicroPatherD1Ev(%"class.micropather::MicroPather"* %this) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MicroPather"*, align 8
  store %"class.micropather::MicroPather"* %this, %"class.micropather::MicroPather"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MicroPather"*, %"class.micropather::MicroPather"** %this.addr, align 8
  call void @_ZN11micropather11MicroPatherD2Ev(%"class.micropather::MicroPather"* %this1)
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather11MicroPather5ResetEv(%"class.micropather::MicroPather"* %this) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MicroPather"*, align 8
  store %"class.micropather::MicroPather"* %this, %"class.micropather::MicroPather"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MicroPather"*, %"class.micropather::MicroPather"** %this.addr, align 8
  %pathNodePool = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 0
  call void @_ZN11micropather12PathNodePool5ClearEv(%"class.micropather::PathNodePool"* %pathNodePool)
  %pathCache = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  %0 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %pathCache, align 8, !tbaa !53
  %tobool = icmp ne %"class.micropather::PathCache"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %pathCache2 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  %1 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %pathCache2, align 8, !tbaa !53
  call void @_ZN11micropather9PathCache5ResetEv(%"class.micropather::PathCache"* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %frame = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 5
  store i32 0, i32* %frame, align 8, !tbaa !52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @_ZN11micropather9PathCache5ResetEv(%"class.micropather::PathCache"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathCache"*, align 8
  store %"class.micropather::PathCache"* %this, %"class.micropather::PathCache"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %this.addr, align 8
  %nItems = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 4
  %0 = load i32, i32* %nItems, align 4, !tbaa !55
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %mem = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 2
  %1 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %mem, align 8, !tbaa !57
  %2 = bitcast %"struct.micropather::PathCache::Item"* %1 to i8*
  %allocated = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 3
  %3 = load i32, i32* %allocated, align 8, !tbaa !58
  %conv = sext i32 %3 to i64
  %mul = mul i64 32, %conv
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 %mul, i32 8, i1 false)
  %nItems2 = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 4
  store i32 0, i32* %nItems2, align 4, !tbaa !55
  %hit = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 0
  store i32 0, i32* %hit, align 8, !tbaa !59
  %miss = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 1
  store i32 0, i32* %miss, align 4, !tbaa !60
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather11MicroPather11GoalReachedEPNS_8PathNodeEPvS3_PNS_8MPVectorIS3_EE(%"class.micropather::MicroPather"* %this, %"class.micropather::PathNode"* %node, i8* %start, i8* %end, %"class.micropather::MPVector.2"* %_path) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MicroPather"*, align 8
  %node.addr = alloca %"class.micropather::PathNode"*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %_path.addr = alloca %"class.micropather::MPVector.2"*, align 8
  %path = alloca %"class.micropather::MPVector.2"*, align 8
  %count = alloca i32, align 4
  %it = alloca %"class.micropather::PathNode"*, align 8
  %pn0 = alloca %"class.micropather::PathNode"*, align 8
  %pn1 = alloca %"class.micropather::PathNode"*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store %"class.micropather::MicroPather"* %this, %"class.micropather::MicroPather"** %this.addr, align 8, !tbaa !3
  store %"class.micropather::PathNode"* %node, %"class.micropather::PathNode"** %node.addr, align 8, !tbaa !3
  store i8* %start, i8** %start.addr, align 8, !tbaa !3
  store i8* %end, i8** %end.addr, align 8, !tbaa !3
  store %"class.micropather::MPVector.2"* %_path, %"class.micropather::MPVector.2"** %_path.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MicroPather"*, %"class.micropather::MicroPather"** %this.addr, align 8
  %0 = bitcast %"class.micropather::MPVector.2"** %path to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #10
  %1 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %_path.addr, align 8, !tbaa !3
  store %"class.micropather::MPVector.2"* %1, %"class.micropather::MPVector.2"** %path, align 8, !tbaa !61
  %2 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path, align 8
  call void @_ZN11micropather8MPVectorIPvE5clearEv(%"class.micropather::MPVector.2"* %2)
  %3 = bitcast i32* %count to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #10
  store i32 1, i32* %count, align 4, !tbaa !17
  %4 = bitcast %"class.micropather::PathNode"** %it to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #10
  %5 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node.addr, align 8, !tbaa !3
  store %"class.micropather::PathNode"* %5, %"class.micropather::PathNode"** %it, align 8, !tbaa !3
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %6 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %it, align 8, !tbaa !3
  %parent = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %6, i32 0, i32 5
  %7 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %parent, align 8, !tbaa !42
  %tobool = icmp ne %"class.micropather::PathNode"* %7, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %count, align 4, !tbaa !17
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %count, align 4, !tbaa !17
  %9 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %it, align 8, !tbaa !3
  %parent2 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %9, i32 0, i32 5
  %10 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %parent2, align 8, !tbaa !42
  store %"class.micropather::PathNode"* %10, %"class.micropather::PathNode"** %it, align 8, !tbaa !3
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %11 = load i32, i32* %count, align 4, !tbaa !17
  %cmp = icmp slt i32 %11, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.end
  %12 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path, align 8
  call void @_ZN11micropather8MPVectorIPvE6resizeEj(%"class.micropather::MPVector.2"* %12, i32 2)
  %13 = load i8*, i8** %start.addr, align 8, !tbaa !3
  %14 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path, align 8
  %call = call dereferenceable(8) i8** @_ZN11micropather8MPVectorIPvEixEj(%"class.micropather::MPVector.2"* %14, i32 0)
  store i8* %13, i8** %call, align 8, !tbaa !3
  %15 = load i8*, i8** %end.addr, align 8, !tbaa !3
  %16 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path, align 8
  %call3 = call dereferenceable(8) i8** @_ZN11micropather8MPVectorIPvEixEj(%"class.micropather::MPVector.2"* %16, i32 1)
  store i8* %15, i8** %call3, align 8, !tbaa !3
  br label %if.end

if.else:                                          ; preds = %while.end
  %17 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path, align 8
  %18 = load i32, i32* %count, align 4, !tbaa !17
  call void @_ZN11micropather8MPVectorIPvE6resizeEj(%"class.micropather::MPVector.2"* %17, i32 %18)
  %19 = load i8*, i8** %start.addr, align 8, !tbaa !3
  %20 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path, align 8
  %call4 = call dereferenceable(8) i8** @_ZN11micropather8MPVectorIPvEixEj(%"class.micropather::MPVector.2"* %20, i32 0)
  store i8* %19, i8** %call4, align 8, !tbaa !3
  %21 = load i8*, i8** %end.addr, align 8, !tbaa !3
  %22 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path, align 8
  %23 = load i32, i32* %count, align 4, !tbaa !17
  %sub = sub nsw i32 %23, 1
  %call5 = call dereferenceable(8) i8** @_ZN11micropather8MPVectorIPvEixEj(%"class.micropather::MPVector.2"* %22, i32 %sub)
  store i8* %21, i8** %call5, align 8, !tbaa !3
  %24 = load i32, i32* %count, align 4, !tbaa !17
  %sub6 = sub nsw i32 %24, 2
  store i32 %sub6, i32* %count, align 4, !tbaa !17
  %25 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node.addr, align 8, !tbaa !3
  %parent7 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %25, i32 0, i32 5
  %26 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %parent7, align 8, !tbaa !42
  store %"class.micropather::PathNode"* %26, %"class.micropather::PathNode"** %it, align 8, !tbaa !3
  br label %while.cond8

while.cond8:                                      ; preds = %while.body11, %if.else
  %27 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %it, align 8, !tbaa !3
  %parent9 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %27, i32 0, i32 5
  %28 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %parent9, align 8, !tbaa !42
  %tobool10 = icmp ne %"class.micropather::PathNode"* %28, null
  br i1 %tobool10, label %while.body11, label %while.end14

while.body11:                                     ; preds = %while.cond8
  %29 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %it, align 8, !tbaa !3
  %state = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %29, i32 0, i32 0
  %30 = load i8*, i8** %state, align 8, !tbaa !38
  %31 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path, align 8
  %32 = load i32, i32* %count, align 4, !tbaa !17
  %call12 = call dereferenceable(8) i8** @_ZN11micropather8MPVectorIPvEixEj(%"class.micropather::MPVector.2"* %31, i32 %32)
  store i8* %30, i8** %call12, align 8, !tbaa !3
  %33 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %it, align 8, !tbaa !3
  %parent13 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %33, i32 0, i32 5
  %34 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %parent13, align 8, !tbaa !42
  store %"class.micropather::PathNode"* %34, %"class.micropather::PathNode"** %it, align 8, !tbaa !3
  %35 = load i32, i32* %count, align 4, !tbaa !17
  %dec = add nsw i32 %35, -1
  store i32 %dec, i32* %count, align 4, !tbaa !17
  br label %while.cond8

while.end14:                                      ; preds = %while.cond8
  br label %if.end

if.end:                                           ; preds = %while.end14, %if.then
  %pathCache = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  %36 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %pathCache, align 8, !tbaa !53
  %tobool15 = icmp ne %"class.micropather::PathCache"* %36, null
  br i1 %tobool15, label %if.then16, label %if.end48

if.then16:                                        ; preds = %if.end
  %costVec = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 3
  call void @_ZN11micropather8MPVectorIfE5clearEv(%"class.micropather::MPVector.1"* %costVec)
  %37 = bitcast %"class.micropather::PathNode"** %pn0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #10
  %pathNodePool = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 0
  %38 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path, align 8
  %call17 = call dereferenceable(8) i8** @_ZN11micropather8MPVectorIPvEixEj(%"class.micropather::MPVector.2"* %38, i32 0)
  %39 = load i8*, i8** %call17, align 8, !tbaa !3
  %call18 = call %"class.micropather::PathNode"* @_ZN11micropather12PathNodePool13FetchPathNodeEPv(%"class.micropather::PathNodePool"* %pathNodePool, i8* %39)
  store %"class.micropather::PathNode"* %call18, %"class.micropather::PathNode"** %pn0, align 8, !tbaa !3
  %40 = bitcast %"class.micropather::PathNode"** %pn1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #10
  store %"class.micropather::PathNode"* null, %"class.micropather::PathNode"** %pn1, align 8, !tbaa !3
  %41 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #10
  store i32 0, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.cond:                                         ; preds = %for.inc42, %if.then16
  %42 = load i32, i32* %i, align 4, !tbaa !17
  %43 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path, align 8
  %call19 = call i32 @_ZNK11micropather8MPVectorIPvE4sizeEv(%"class.micropather::MPVector.2"* %43)
  %sub20 = sub i32 %call19, 1
  %cmp21 = icmp ult i32 %42, %sub20
  br i1 %cmp21, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 6, i32* %cleanup.dest.slot, align 4
  %44 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %44) #10
  br label %for.end45

for.body:                                         ; preds = %for.cond
  %pathNodePool22 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 0
  %45 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path, align 8
  %46 = load i32, i32* %i, align 4, !tbaa !17
  %add = add i32 %46, 1
  %call23 = call dereferenceable(8) i8** @_ZN11micropather8MPVectorIPvEixEj(%"class.micropather::MPVector.2"* %45, i32 %add)
  %47 = load i8*, i8** %call23, align 8, !tbaa !3
  %call24 = call %"class.micropather::PathNode"* @_ZN11micropather12PathNodePool13FetchPathNodeEPv(%"class.micropather::PathNodePool"* %pathNodePool22, i8* %47)
  store %"class.micropather::PathNode"* %call24, %"class.micropather::PathNode"** %pn1, align 8, !tbaa !3
  %nodeCostVec = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  call void @_ZN11micropather8MPVectorINS_8NodeCostEE5clearEv(%"class.micropather::MPVector.0"* %nodeCostVec)
  %48 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pn0, align 8, !tbaa !3
  %nodeCostVec25 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  call void @_ZN11micropather11MicroPather16GetNodeNeighborsEPNS_8PathNodeEPNS_8MPVectorINS_8NodeCostEEE(%"class.micropather::MicroPather"* %this1, %"class.micropather::PathNode"* %48, %"class.micropather::MPVector.0"* %nodeCostVec25)
  %49 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #10
  store i32 0, i32* %j, align 4, !tbaa !17
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc, %for.body
  %50 = load i32, i32* %j, align 4, !tbaa !17
  %nodeCostVec27 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  %call28 = call i32 @_ZNK11micropather8MPVectorINS_8NodeCostEE4sizeEv(%"class.micropather::MPVector.0"* %nodeCostVec27)
  %cmp29 = icmp ult i32 %50, %call28
  br i1 %cmp29, label %for.body31, label %for.cond.cleanup30

for.cond.cleanup30:                               ; preds = %for.cond26
  store i32 9, i32* %cleanup.dest.slot, align 4
  br label %cleanup

for.body31:                                       ; preds = %for.cond26
  %nodeCostVec32 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  %51 = load i32, i32* %j, align 4, !tbaa !17
  %call33 = call dereferenceable(16) %"struct.micropather::NodeCost"* @_ZN11micropather8MPVectorINS_8NodeCostEEixEj(%"class.micropather::MPVector.0"* %nodeCostVec32, i32 %51)
  %node34 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %call33, i32 0, i32 0
  %52 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node34, align 8, !tbaa !62
  %53 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pn1, align 8, !tbaa !3
  %cmp35 = icmp eq %"class.micropather::PathNode"* %52, %53
  br i1 %cmp35, label %if.then36, label %if.end40

if.then36:                                        ; preds = %for.body31
  %costVec37 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 3
  %nodeCostVec38 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  %54 = load i32, i32* %j, align 4, !tbaa !17
  %call39 = call dereferenceable(16) %"struct.micropather::NodeCost"* @_ZN11micropather8MPVectorINS_8NodeCostEEixEj(%"class.micropather::MPVector.0"* %nodeCostVec38, i32 %54)
  %cost = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %call39, i32 0, i32 1
  call void @_ZN11micropather8MPVectorIfE9push_backERKf(%"class.micropather::MPVector.1"* %costVec37, float* dereferenceable(4) %cost)
  store i32 9, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end40:                                         ; preds = %for.body31
  br label %for.inc

for.inc:                                          ; preds = %if.end40
  %55 = load i32, i32* %j, align 4, !tbaa !17
  %inc41 = add i32 %55, 1
  store i32 %inc41, i32* %j, align 4, !tbaa !17
  br label %for.cond26

cleanup:                                          ; preds = %if.then36, %for.cond.cleanup30
  %56 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %56) #10
  br label %for.end

for.end:                                          ; preds = %cleanup
  %57 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pn1, align 8, !tbaa !3
  store %"class.micropather::PathNode"* %57, %"class.micropather::PathNode"** %pn0, align 8, !tbaa !3
  br label %for.inc42

for.inc42:                                        ; preds = %for.end
  %58 = load i32, i32* %i, align 4, !tbaa !17
  %inc43 = add i32 %58, 1
  store i32 %inc43, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.end45:                                        ; preds = %for.cond.cleanup
  %pathCache46 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  %59 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %pathCache46, align 8, !tbaa !53
  %60 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path, align 8
  %costVec47 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 3
  call void @_ZN11micropather9PathCache3AddERKNS_8MPVectorIPvEERKNS1_IfEE(%"class.micropather::PathCache"* %59, %"class.micropather::MPVector.2"* dereferenceable(16) %60, %"class.micropather::MPVector.1"* dereferenceable(16) %costVec47)
  %61 = bitcast %"class.micropather::PathNode"** %pn1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #10
  %62 = bitcast %"class.micropather::PathNode"** %pn0 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #10
  br label %if.end48

if.end48:                                         ; preds = %for.end45, %if.end
  %63 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %63) #10
  store i32 0, i32* %k, align 4, !tbaa !17
  br label %for.cond49

for.cond49:                                       ; preds = %for.inc54, %if.end48
  %64 = load i32, i32* %k, align 4, !tbaa !17
  %65 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path, align 8
  %call50 = call i32 @_ZNK11micropather8MPVectorIPvE4sizeEv(%"class.micropather::MPVector.2"* %65)
  %cmp51 = icmp ult i32 %64, %call50
  br i1 %cmp51, label %for.body53, label %for.cond.cleanup52

for.cond.cleanup52:                               ; preds = %for.cond49
  store i32 12, i32* %cleanup.dest.slot, align 4
  %66 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #10
  br label %for.end57

for.body53:                                       ; preds = %for.cond49
  br label %for.inc54

for.inc54:                                        ; preds = %for.body53
  %67 = load i32, i32* %k, align 4, !tbaa !17
  %inc55 = add i32 %67, 1
  store i32 %inc55, i32* %k, align 4, !tbaa !17
  br label %for.cond49

for.end57:                                        ; preds = %for.cond.cleanup52
  %68 = bitcast %"class.micropather::PathNode"** %it to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %68) #10
  %69 = bitcast i32* %count to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %69) #10
  %70 = bitcast %"class.micropather::MPVector.2"** %path to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %70) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorIPvE5clearEv(%"class.micropather::MPVector.2"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.2"*, align 8
  store %"class.micropather::MPVector.2"* %this, %"class.micropather::MPVector.2"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %this.addr, align 8
  %m_size = getelementptr inbounds %"class.micropather::MPVector.2", %"class.micropather::MPVector.2"* %this1, i32 0, i32 1
  store i32 0, i32* %m_size, align 4, !tbaa !64
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorIPvE6resizeEj(%"class.micropather::MPVector.2"* %this, i32 %s) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.2"*, align 8
  %s.addr = alloca i32, align 4
  store %"class.micropather::MPVector.2"* %this, %"class.micropather::MPVector.2"** %this.addr, align 8, !tbaa !3
  store i32 %s, i32* %s.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %this.addr, align 8
  %0 = load i32, i32* %s.addr, align 4, !tbaa !17
  call void @_ZN11micropather8MPVectorIPvE8capacityEj(%"class.micropather::MPVector.2"* %this1, i32 %0)
  %1 = load i32, i32* %s.addr, align 4, !tbaa !17
  %m_size = getelementptr inbounds %"class.micropather::MPVector.2", %"class.micropather::MPVector.2"* %this1, i32 0, i32 1
  store i32 %1, i32* %m_size, align 4, !tbaa !64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr dereferenceable(8) i8** @_ZN11micropather8MPVectorIPvEixEj(%"class.micropather::MPVector.2"* %this, i32 %i) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.2"*, align 8
  %i.addr = alloca i32, align 4
  store %"class.micropather::MPVector.2"* %this, %"class.micropather::MPVector.2"** %this.addr, align 8, !tbaa !3
  store i32 %i, i32* %i.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %this.addr, align 8
  %m_buf = getelementptr inbounds %"class.micropather::MPVector.2", %"class.micropather::MPVector.2"* %this1, i32 0, i32 2
  %0 = load i8**, i8*** %m_buf, align 8, !tbaa !66
  %1 = load i32, i32* %i.addr, align 4, !tbaa !17
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %idxprom
  ret i8** %arrayidx
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorIfE5clearEv(%"class.micropather::MPVector.1"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.1"*, align 8
  store %"class.micropather::MPVector.1"* %this, %"class.micropather::MPVector.1"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector.1"*, %"class.micropather::MPVector.1"** %this.addr, align 8
  %m_size = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 1
  store i32 0, i32* %m_size, align 4, !tbaa !67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr i32 @_ZNK11micropather8MPVectorIPvE4sizeEv(%"class.micropather::MPVector.2"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.2"*, align 8
  store %"class.micropather::MPVector.2"* %this, %"class.micropather::MPVector.2"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %this.addr, align 8
  %m_size = getelementptr inbounds %"class.micropather::MPVector.2", %"class.micropather::MPVector.2"* %this1, i32 0, i32 1
  %0 = load i32, i32* %m_size, align 4, !tbaa !64
  ret i32 %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_8NodeCostEE5clearEv(%"class.micropather::MPVector.0"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.0"*, align 8
  store %"class.micropather::MPVector.0"* %this, %"class.micropather::MPVector.0"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %this.addr, align 8
  %m_size = getelementptr inbounds %"class.micropather::MPVector.0", %"class.micropather::MPVector.0"* %this1, i32 0, i32 1
  store i32 0, i32* %m_size, align 4, !tbaa !68
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather11MicroPather16GetNodeNeighborsEPNS_8PathNodeEPNS_8MPVectorINS_8NodeCostEEE(%"class.micropather::MicroPather"* %this, %"class.micropather::PathNode"* %node, %"class.micropather::MPVector.0"* %pNodeCost) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MicroPather"*, align 8
  %node.addr = alloca %"class.micropather::PathNode"*, align 8
  %pNodeCost.addr = alloca %"class.micropather::MPVector.0"*, align 8
  %stateCostVecSize = alloca i32, align 4
  %stateCostVecPtr = alloca %"struct.micropather::StateCost"*, align 8
  %pNodeCostPtr = alloca %"struct.micropather::NodeCost"*, align 8
  %i = alloca i32, align 4
  %state18 = alloca i8*, align 8
  %start = alloca i32, align 4
  %pNodeCostPtr39 = alloca %"struct.micropather::NodeCost"*, align 8
  %i44 = alloca i32, align 4
  %pNode = alloca %"class.micropather::PathNode"*, align 8
  store %"class.micropather::MicroPather"* %this, %"class.micropather::MicroPather"** %this.addr, align 8, !tbaa !3
  store %"class.micropather::PathNode"* %node, %"class.micropather::PathNode"** %node.addr, align 8, !tbaa !3
  store %"class.micropather::MPVector.0"* %pNodeCost, %"class.micropather::MPVector.0"** %pNodeCost.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MicroPather"*, %"class.micropather::MicroPather"** %this.addr, align 8
  %0 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node.addr, align 8, !tbaa !3
  %numAdjacent = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %0, i32 0, i32 7
  %1 = load i32, i32* %numAdjacent, align 4, !tbaa !44
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %pNodeCost.addr, align 8, !tbaa !3
  call void @_ZN11micropather8MPVectorINS_8NodeCostEE6resizeEj(%"class.micropather::MPVector.0"* %2, i32 0)
  br label %if.end64

if.else:                                          ; preds = %entry
  %3 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node.addr, align 8, !tbaa !3
  %cacheIndex = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %3, i32 0, i32 8
  %4 = load i32, i32* %cacheIndex, align 8, !tbaa !45
  %cmp2 = icmp slt i32 %4, 0
  br i1 %cmp2, label %if.then3, label %if.else37

if.then3:                                         ; preds = %if.else
  %stateCostVec = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 1
  call void @_ZN11micropather8MPVectorINS_9StateCostEE6resizeEj(%"class.micropather::MPVector"* %stateCostVec, i32 0)
  %graph = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 4
  %5 = load %"class.micropather::Graph"*, %"class.micropather::Graph"** %graph, align 8, !tbaa !47
  %6 = bitcast %"class.micropather::Graph"* %5 to void (%"class.micropather::Graph"*, i8*, %"class.micropather::MPVector"*)***
  %vtable = load void (%"class.micropather::Graph"*, i8*, %"class.micropather::MPVector"*)**, void (%"class.micropather::Graph"*, i8*, %"class.micropather::MPVector"*)*** %6, align 8, !tbaa !69
  %vfn = getelementptr inbounds void (%"class.micropather::Graph"*, i8*, %"class.micropather::MPVector"*)*, void (%"class.micropather::Graph"*, i8*, %"class.micropather::MPVector"*)** %vtable, i64 3
  %7 = load void (%"class.micropather::Graph"*, i8*, %"class.micropather::MPVector"*)*, void (%"class.micropather::Graph"*, i8*, %"class.micropather::MPVector"*)** %vfn, align 8
  %8 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node.addr, align 8, !tbaa !3
  %state = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %8, i32 0, i32 0
  %9 = load i8*, i8** %state, align 8, !tbaa !38
  %stateCostVec4 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 1
  call void %7(%"class.micropather::Graph"* %5, i8* %9, %"class.micropather::MPVector"* %stateCostVec4)
  %10 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %pNodeCost.addr, align 8, !tbaa !3
  %stateCostVec5 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 1
  %call = call i32 @_ZNK11micropather8MPVectorINS_9StateCostEE4sizeEv(%"class.micropather::MPVector"* %stateCostVec5)
  call void @_ZN11micropather8MPVectorINS_8NodeCostEE6resizeEj(%"class.micropather::MPVector.0"* %10, i32 %call)
  %stateCostVec6 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 1
  %call7 = call i32 @_ZNK11micropather8MPVectorINS_9StateCostEE4sizeEv(%"class.micropather::MPVector"* %stateCostVec6)
  %11 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node.addr, align 8, !tbaa !3
  %numAdjacent8 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %11, i32 0, i32 7
  store i32 %call7, i32* %numAdjacent8, align 4, !tbaa !44
  %12 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node.addr, align 8, !tbaa !3
  %numAdjacent9 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %12, i32 0, i32 7
  %13 = load i32, i32* %numAdjacent9, align 4, !tbaa !44
  %cmp10 = icmp sgt i32 %13, 0
  br i1 %cmp10, label %if.then11, label %if.end36

if.then11:                                        ; preds = %if.then3
  %14 = bitcast i32* %stateCostVecSize to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #10
  %stateCostVec12 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 1
  %call13 = call i32 @_ZNK11micropather8MPVectorINS_9StateCostEE4sizeEv(%"class.micropather::MPVector"* %stateCostVec12)
  store i32 %call13, i32* %stateCostVecSize, align 4, !tbaa !17
  %15 = bitcast %"struct.micropather::StateCost"** %stateCostVecPtr to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #10
  %stateCostVec14 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 1
  %call15 = call dereferenceable(16) %"struct.micropather::StateCost"* @_ZN11micropather8MPVectorINS_9StateCostEEixEj(%"class.micropather::MPVector"* %stateCostVec14, i32 0)
  store %"struct.micropather::StateCost"* %call15, %"struct.micropather::StateCost"** %stateCostVecPtr, align 8, !tbaa !3
  %16 = bitcast %"struct.micropather::NodeCost"** %pNodeCostPtr to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #10
  %17 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %pNodeCost.addr, align 8, !tbaa !3
  %call16 = call dereferenceable(16) %"struct.micropather::NodeCost"* @_ZN11micropather8MPVectorINS_8NodeCostEEixEj(%"class.micropather::MPVector.0"* %17, i32 0)
  store %"struct.micropather::NodeCost"* %call16, %"struct.micropather::NodeCost"** %pNodeCostPtr, align 8, !tbaa !3
  %18 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %18) #10
  store i32 0, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then11
  %19 = load i32, i32* %i, align 4, !tbaa !17
  %20 = load i32, i32* %stateCostVecSize, align 4, !tbaa !17
  %cmp17 = icmp ult i32 %19, %20
  br i1 %cmp17, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %21 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %21) #10
  br label %for.end

for.body:                                         ; preds = %for.cond
  %22 = bitcast i8** %state18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #10
  %23 = load %"struct.micropather::StateCost"*, %"struct.micropather::StateCost"** %stateCostVecPtr, align 8, !tbaa !3
  %24 = load i32, i32* %i, align 4, !tbaa !17
  %idxprom = zext i32 %24 to i64
  %arrayidx = getelementptr inbounds %"struct.micropather::StateCost", %"struct.micropather::StateCost"* %23, i64 %idxprom
  %state19 = getelementptr inbounds %"struct.micropather::StateCost", %"struct.micropather::StateCost"* %arrayidx, i32 0, i32 0
  %25 = load i8*, i8** %state19, align 8, !tbaa !71
  store i8* %25, i8** %state18, align 8, !tbaa !3
  %26 = load %"struct.micropather::StateCost"*, %"struct.micropather::StateCost"** %stateCostVecPtr, align 8, !tbaa !3
  %27 = load i32, i32* %i, align 4, !tbaa !17
  %idxprom20 = zext i32 %27 to i64
  %arrayidx21 = getelementptr inbounds %"struct.micropather::StateCost", %"struct.micropather::StateCost"* %26, i64 %idxprom20
  %cost = getelementptr inbounds %"struct.micropather::StateCost", %"struct.micropather::StateCost"* %arrayidx21, i32 0, i32 1
  %28 = load float, float* %cost, align 8, !tbaa !73
  %29 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %pNodeCostPtr, align 8, !tbaa !3
  %30 = load i32, i32* %i, align 4, !tbaa !17
  %idxprom22 = zext i32 %30 to i64
  %arrayidx23 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %29, i64 %idxprom22
  %cost24 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %arrayidx23, i32 0, i32 1
  store float %28, float* %cost24, align 8, !tbaa !74
  %pathNodePool = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 0
  %frame = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 5
  %31 = load i32, i32* %frame, align 8, !tbaa !52
  %32 = load i8*, i8** %state18, align 8, !tbaa !3
  %call25 = call %"class.micropather::PathNode"* @_ZN11micropather12PathNodePool11GetPathNodeEjPvffPNS_8PathNodeE(%"class.micropather::PathNodePool"* %pathNodePool, i32 %31, i8* %32, float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000, %"class.micropather::PathNode"* null)
  %33 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %pNodeCostPtr, align 8, !tbaa !3
  %34 = load i32, i32* %i, align 4, !tbaa !17
  %idxprom26 = zext i32 %34 to i64
  %arrayidx27 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %33, i64 %idxprom26
  %node28 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %arrayidx27, i32 0, i32 0
  store %"class.micropather::PathNode"* %call25, %"class.micropather::PathNode"** %node28, align 8, !tbaa !62
  %35 = bitcast i8** %state18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #10
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %36 = load i32, i32* %i, align 4, !tbaa !17
  %inc = add i32 %36, 1
  store i32 %inc, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.end:                                          ; preds = %for.cond.cleanup
  %37 = bitcast i32* %start to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #10
  store i32 0, i32* %start, align 4, !tbaa !17
  %38 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %pNodeCost.addr, align 8, !tbaa !3
  %call29 = call i32 @_ZNK11micropather8MPVectorINS_8NodeCostEE4sizeEv(%"class.micropather::MPVector.0"* %38)
  %cmp30 = icmp ugt i32 %call29, 0
  br i1 %cmp30, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.end
  %pathNodePool31 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 0
  %39 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %pNodeCostPtr, align 8, !tbaa !3
  %40 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %pNodeCost.addr, align 8, !tbaa !3
  %call32 = call i32 @_ZNK11micropather8MPVectorINS_8NodeCostEE4sizeEv(%"class.micropather::MPVector.0"* %40)
  %call33 = call zeroext i1 @_ZN11micropather12PathNodePool9PushCacheEPKNS_8NodeCostEiPi(%"class.micropather::PathNodePool"* %pathNodePool31, %"struct.micropather::NodeCost"* %39, i32 %call32, i32* %start)
  br i1 %call33, label %if.then34, label %if.end

if.then34:                                        ; preds = %land.lhs.true
  %41 = load i32, i32* %start, align 4, !tbaa !17
  %42 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node.addr, align 8, !tbaa !3
  %cacheIndex35 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %42, i32 0, i32 8
  store i32 %41, i32* %cacheIndex35, align 8, !tbaa !45
  br label %if.end

if.end:                                           ; preds = %if.then34, %land.lhs.true, %for.end
  %43 = bitcast i32* %start to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %43) #10
  %44 = bitcast %"struct.micropather::NodeCost"** %pNodeCostPtr to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #10
  %45 = bitcast %"struct.micropather::StateCost"** %stateCostVecPtr to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #10
  %46 = bitcast i32* %stateCostVecSize to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %46) #10
  br label %if.end36

if.end36:                                         ; preds = %if.end, %if.then3
  br label %if.end63

if.else37:                                        ; preds = %if.else
  %47 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %pNodeCost.addr, align 8, !tbaa !3
  %48 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node.addr, align 8, !tbaa !3
  %numAdjacent38 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %48, i32 0, i32 7
  %49 = load i32, i32* %numAdjacent38, align 4, !tbaa !44
  call void @_ZN11micropather8MPVectorINS_8NodeCostEE6resizeEj(%"class.micropather::MPVector.0"* %47, i32 %49)
  %50 = bitcast %"struct.micropather::NodeCost"** %pNodeCostPtr39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #10
  %51 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %pNodeCost.addr, align 8, !tbaa !3
  %call40 = call dereferenceable(16) %"struct.micropather::NodeCost"* @_ZN11micropather8MPVectorINS_8NodeCostEEixEj(%"class.micropather::MPVector.0"* %51, i32 0)
  store %"struct.micropather::NodeCost"* %call40, %"struct.micropather::NodeCost"** %pNodeCostPtr39, align 8, !tbaa !3
  %pathNodePool41 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 0
  %52 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node.addr, align 8, !tbaa !3
  %cacheIndex42 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %52, i32 0, i32 8
  %53 = load i32, i32* %cacheIndex42, align 8, !tbaa !45
  %54 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node.addr, align 8, !tbaa !3
  %numAdjacent43 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %54, i32 0, i32 7
  %55 = load i32, i32* %numAdjacent43, align 4, !tbaa !44
  %56 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %pNodeCostPtr39, align 8, !tbaa !3
  call void @_ZN11micropather12PathNodePool8GetCacheEiiPNS_8NodeCostE(%"class.micropather::PathNodePool"* %pathNodePool41, i32 %53, i32 %55, %"struct.micropather::NodeCost"* %56)
  %57 = bitcast i32* %i44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #10
  store i32 0, i32* %i44, align 4, !tbaa !17
  br label %for.cond45

for.cond45:                                       ; preds = %for.inc60, %if.else37
  %58 = load i32, i32* %i44, align 4, !tbaa !17
  %59 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node.addr, align 8, !tbaa !3
  %numAdjacent46 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %59, i32 0, i32 7
  %60 = load i32, i32* %numAdjacent46, align 4, !tbaa !44
  %cmp47 = icmp slt i32 %58, %60
  br i1 %cmp47, label %for.body49, label %for.cond.cleanup48

for.cond.cleanup48:                               ; preds = %for.cond45
  %61 = bitcast i32* %i44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #10
  br label %for.end62

for.body49:                                       ; preds = %for.cond45
  %62 = bitcast %"class.micropather::PathNode"** %pNode to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %62) #10
  %63 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %pNodeCostPtr39, align 8, !tbaa !3
  %64 = load i32, i32* %i44, align 4, !tbaa !17
  %idxprom50 = sext i32 %64 to i64
  %arrayidx51 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %63, i64 %idxprom50
  %node52 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %arrayidx51, i32 0, i32 0
  %65 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node52, align 8, !tbaa !62
  store %"class.micropather::PathNode"* %65, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  %66 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  %frame53 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %66, i32 0, i32 6
  %67 = load i32, i32* %frame53, align 8, !tbaa !39
  %frame54 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 5
  %68 = load i32, i32* %frame54, align 8, !tbaa !52
  %cmp55 = icmp ne i32 %67, %68
  br i1 %cmp55, label %if.then56, label %if.end59

if.then56:                                        ; preds = %for.body49
  %69 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  %frame57 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 5
  %70 = load i32, i32* %frame57, align 8, !tbaa !52
  %71 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  %state58 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %71, i32 0, i32 0
  %72 = load i8*, i8** %state58, align 8, !tbaa !38
  call void @_ZN11micropather8PathNode4InitEjPvffPS0_(%"class.micropather::PathNode"* %69, i32 %70, i8* %72, float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000, %"class.micropather::PathNode"* null)
  br label %if.end59

if.end59:                                         ; preds = %if.then56, %for.body49
  %73 = bitcast %"class.micropather::PathNode"** %pNode to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %73) #10
  br label %for.inc60

for.inc60:                                        ; preds = %if.end59
  %74 = load i32, i32* %i44, align 4, !tbaa !17
  %inc61 = add nsw i32 %74, 1
  store i32 %inc61, i32* %i44, align 4, !tbaa !17
  br label %for.cond45

for.end62:                                        ; preds = %for.cond.cleanup48
  %75 = bitcast %"struct.micropather::NodeCost"** %pNodeCostPtr39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #10
  br label %if.end63

if.end63:                                         ; preds = %for.end62, %if.end36
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr i32 @_ZNK11micropather8MPVectorINS_8NodeCostEE4sizeEv(%"class.micropather::MPVector.0"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.0"*, align 8
  store %"class.micropather::MPVector.0"* %this, %"class.micropather::MPVector.0"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %this.addr, align 8
  %m_size = getelementptr inbounds %"class.micropather::MPVector.0", %"class.micropather::MPVector.0"* %this1, i32 0, i32 1
  %0 = load i32, i32* %m_size, align 4, !tbaa !68
  ret i32 %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr dereferenceable(16) %"struct.micropather::NodeCost"* @_ZN11micropather8MPVectorINS_8NodeCostEEixEj(%"class.micropather::MPVector.0"* %this, i32 %i) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.0"*, align 8
  %i.addr = alloca i32, align 4
  store %"class.micropather::MPVector.0"* %this, %"class.micropather::MPVector.0"** %this.addr, align 8, !tbaa !3
  store i32 %i, i32* %i.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %this.addr, align 8
  %m_buf = getelementptr inbounds %"class.micropather::MPVector.0", %"class.micropather::MPVector.0"* %this1, i32 0, i32 2
  %0 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %m_buf, align 8, !tbaa !75
  %1 = load i32, i32* %i.addr, align 4, !tbaa !17
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %0, i64 %idxprom
  ret %"struct.micropather::NodeCost"* %arrayidx
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorIfE9push_backERKf(%"class.micropather::MPVector.1"* %this, float* dereferenceable(4) %t) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.1"*, align 8
  %t.addr = alloca float*, align 8
  store %"class.micropather::MPVector.1"* %this, %"class.micropather::MPVector.1"** %this.addr, align 8, !tbaa !3
  store float* %t, float** %t.addr, align 8, !tbaa !61
  %this1 = load %"class.micropather::MPVector.1"*, %"class.micropather::MPVector.1"** %this.addr, align 8
  %m_size = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 1
  %0 = load i32, i32* %m_size, align 4, !tbaa !67
  %add = add i32 %0, 1
  call void @_ZN11micropather8MPVectorIfE8capacityEj(%"class.micropather::MPVector.1"* %this1, i32 %add)
  %1 = load float*, float** %t.addr, align 8
  %2 = load float, float* %1, align 4, !tbaa !35
  %m_buf = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 2
  %3 = load float*, float** %m_buf, align 8, !tbaa !76
  %m_size2 = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 1
  %4 = load i32, i32* %m_size2, align 4, !tbaa !67
  %inc = add i32 %4, 1
  store i32 %inc, i32* %m_size2, align 4, !tbaa !67
  %idxprom = zext i32 %4 to i64
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom
  store float %2, float* %arrayidx, align 4, !tbaa !35
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather9PathCache3AddERKNS_8MPVectorIPvEERKNS1_IfEE(%"class.micropather::PathCache"* %this, %"class.micropather::MPVector.2"* dereferenceable(16) %path, %"class.micropather::MPVector.1"* dereferenceable(16) %cost) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathCache"*, align 8
  %path.addr = alloca %"class.micropather::MPVector.2"*, align 8
  %cost.addr = alloca %"class.micropather::MPVector.1"*, align 8
  %i = alloca i32, align 4
  %end = alloca i8*, align 8
  %item = alloca %"struct.micropather::PathCache::Item", align 8
  store %"class.micropather::PathCache"* %this, %"class.micropather::PathCache"** %this.addr, align 8, !tbaa !3
  store %"class.micropather::MPVector.2"* %path, %"class.micropather::MPVector.2"** %path.addr, align 8, !tbaa !61
  store %"class.micropather::MPVector.1"* %cost, %"class.micropather::MPVector.1"** %cost.addr, align 8, !tbaa !61
  %this1 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %this.addr, align 8
  %nItems = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 4
  %0 = load i32, i32* %nItems, align 4, !tbaa !55
  %1 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path.addr, align 8
  %call = call i32 @_ZNK11micropather8MPVectorIPvE4sizeEv(%"class.micropather::MPVector.2"* %1)
  %add = add nsw i32 %0, %call
  %allocated = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 3
  %2 = load i32, i32* %allocated, align 8, !tbaa !58
  %mul = mul nsw i32 %2, 3
  %div = sdiv i32 %mul, 4
  %cmp = icmp sgt i32 %add, %div
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end

if.end:                                           ; preds = %entry
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #10
  store i32 0, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !tbaa !17
  %5 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path.addr, align 8
  %call2 = call i32 @_ZNK11micropather8MPVectorIPvE4sizeEv(%"class.micropather::MPVector.2"* %5)
  %sub = sub i32 %call2, 1
  %cmp3 = icmp ult i32 %4, %sub
  br i1 %cmp3, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %6 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %6) #10
  br label %for.end

for.body:                                         ; preds = %for.cond
  %7 = bitcast i8** %end to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  %8 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path.addr, align 8
  %9 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path.addr, align 8
  %call4 = call i32 @_ZNK11micropather8MPVectorIPvE4sizeEv(%"class.micropather::MPVector.2"* %9)
  %sub5 = sub i32 %call4, 1
  %call6 = call dereferenceable(8) i8** @_ZNK11micropather8MPVectorIPvEixEj(%"class.micropather::MPVector.2"* %8, i32 %sub5)
  %10 = load i8*, i8** %call6, align 8, !tbaa !3
  store i8* %10, i8** %end, align 8, !tbaa !3
  %11 = bitcast %"struct.micropather::PathCache::Item"* %item to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %11) #10
  %start = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %item, i32 0, i32 0
  %12 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path.addr, align 8
  %13 = load i32, i32* %i, align 4, !tbaa !17
  %call7 = call dereferenceable(8) i8** @_ZNK11micropather8MPVectorIPvEixEj(%"class.micropather::MPVector.2"* %12, i32 %13)
  %14 = load i8*, i8** %call7, align 8, !tbaa !3
  store i8* %14, i8** %start, align 8, !tbaa !77
  %end8 = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %item, i32 0, i32 1
  %15 = load i8*, i8** %end, align 8, !tbaa !3
  store i8* %15, i8** %end8, align 8, !tbaa !79
  %next = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %item, i32 0, i32 2
  %16 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path.addr, align 8
  %17 = load i32, i32* %i, align 4, !tbaa !17
  %add9 = add i32 %17, 1
  %call10 = call dereferenceable(8) i8** @_ZNK11micropather8MPVectorIPvEixEj(%"class.micropather::MPVector.2"* %16, i32 %add9)
  %18 = load i8*, i8** %call10, align 8, !tbaa !3
  store i8* %18, i8** %next, align 8, !tbaa !80
  %cost11 = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %item, i32 0, i32 3
  %19 = load %"class.micropather::MPVector.1"*, %"class.micropather::MPVector.1"** %cost.addr, align 8
  %20 = load i32, i32* %i, align 4, !tbaa !17
  %call12 = call dereferenceable(4) float* @_ZNK11micropather8MPVectorIfEixEj(%"class.micropather::MPVector.1"* %19, i32 %20)
  %21 = load float, float* %call12, align 4, !tbaa !35
  store float %21, float* %cost11, align 8, !tbaa !81
  call void @_ZN11micropather9PathCache7AddItemERKNS0_4ItemE(%"class.micropather::PathCache"* %this1, %"struct.micropather::PathCache::Item"* dereferenceable(32) %item)
  %22 = bitcast %"struct.micropather::PathCache::Item"* %item to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %22) #10
  %23 = bitcast i8** %end to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #10
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !tbaa !17
  %inc = add i32 %24, 1
  store i32 %inc, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond.cleanup
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_8NodeCostEE6resizeEj(%"class.micropather::MPVector.0"* %this, i32 %s) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.0"*, align 8
  %s.addr = alloca i32, align 4
  store %"class.micropather::MPVector.0"* %this, %"class.micropather::MPVector.0"** %this.addr, align 8, !tbaa !3
  store i32 %s, i32* %s.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %this.addr, align 8
  %0 = load i32, i32* %s.addr, align 4, !tbaa !17
  call void @_ZN11micropather8MPVectorINS_8NodeCostEE8capacityEj(%"class.micropather::MPVector.0"* %this1, i32 %0)
  %1 = load i32, i32* %s.addr, align 4, !tbaa !17
  %m_size = getelementptr inbounds %"class.micropather::MPVector.0", %"class.micropather::MPVector.0"* %this1, i32 0, i32 1
  store i32 %1, i32* %m_size, align 4, !tbaa !68
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_9StateCostEE6resizeEj(%"class.micropather::MPVector"* %this, i32 %s) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector"*, align 8
  %s.addr = alloca i32, align 4
  store %"class.micropather::MPVector"* %this, %"class.micropather::MPVector"** %this.addr, align 8, !tbaa !3
  store i32 %s, i32* %s.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::MPVector"*, %"class.micropather::MPVector"** %this.addr, align 8
  %0 = load i32, i32* %s.addr, align 4, !tbaa !17
  call void @_ZN11micropather8MPVectorINS_9StateCostEE8capacityEj(%"class.micropather::MPVector"* %this1, i32 %0)
  %1 = load i32, i32* %s.addr, align 4, !tbaa !17
  %m_size = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 1
  store i32 %1, i32* %m_size, align 4, !tbaa !82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr i32 @_ZNK11micropather8MPVectorINS_9StateCostEE4sizeEv(%"class.micropather::MPVector"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector"*, align 8
  store %"class.micropather::MPVector"* %this, %"class.micropather::MPVector"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector"*, %"class.micropather::MPVector"** %this.addr, align 8
  %m_size = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 1
  %0 = load i32, i32* %m_size, align 4, !tbaa !82
  ret i32 %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr dereferenceable(16) %"struct.micropather::StateCost"* @_ZN11micropather8MPVectorINS_9StateCostEEixEj(%"class.micropather::MPVector"* %this, i32 %i) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector"*, align 8
  %i.addr = alloca i32, align 4
  store %"class.micropather::MPVector"* %this, %"class.micropather::MPVector"** %this.addr, align 8, !tbaa !3
  store i32 %i, i32* %i.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::MPVector"*, %"class.micropather::MPVector"** %this.addr, align 8
  %m_buf = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 2
  %0 = load %"struct.micropather::StateCost"*, %"struct.micropather::StateCost"** %m_buf, align 8, !tbaa !83
  %1 = load i32, i32* %i.addr, align 4, !tbaa !17
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds %"struct.micropather::StateCost", %"struct.micropather::StateCost"* %0, i64 %idxprom
  ret %"struct.micropather::StateCost"* %arrayidx
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather11MicroPather12StatesInPoolEPNS_8MPVectorIPvEE(%"class.micropather::MicroPather"* %this, %"class.micropather::MPVector.2"* %stateVec) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MicroPather"*, align 8
  %stateVec.addr = alloca %"class.micropather::MPVector.2"*, align 8
  store %"class.micropather::MicroPather"* %this, %"class.micropather::MicroPather"** %this.addr, align 8, !tbaa !3
  store %"class.micropather::MPVector.2"* %stateVec, %"class.micropather::MPVector.2"** %stateVec.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MicroPather"*, %"class.micropather::MicroPather"** %this.addr, align 8
  %0 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %stateVec.addr, align 8, !tbaa !3
  call void @_ZN11micropather8MPVectorIPvE5clearEv(%"class.micropather::MPVector.2"* %0)
  %pathNodePool = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 0
  %frame = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 5
  %1 = load i32, i32* %frame, align 8, !tbaa !52
  %2 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %stateVec.addr, align 8, !tbaa !3
  call void @_ZN11micropather12PathNodePool9AllStatesEjPNS_8MPVectorIPvEE(%"class.micropather::PathNodePool"* %pathNodePool, i32 %1, %"class.micropather::MPVector.2"* %2)
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather12PathNodePool9AllStatesEjPNS_8MPVectorIPvEE(%"class.micropather::PathNodePool"* %this, i32 %frame, %"class.micropather::MPVector.2"* %stateVec) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathNodePool"*, align 8
  %frame.addr = alloca i32, align 4
  %stateVec.addr = alloca %"class.micropather::MPVector.2"*, align 8
  %b = alloca %"struct.micropather::PathNodePool::Block"*, align 8
  %cleanup.dest.slot = alloca i32
  %i = alloca i32, align 4
  store %"class.micropather::PathNodePool"* %this, %"class.micropather::PathNodePool"** %this.addr, align 8, !tbaa !3
  store i32 %frame, i32* %frame.addr, align 4, !tbaa !17
  store %"class.micropather::MPVector.2"* %stateVec, %"class.micropather::MPVector.2"** %stateVec.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathNodePool"*, %"class.micropather::PathNodePool"** %this.addr, align 8
  %0 = bitcast %"struct.micropather::PathNodePool::Block"** %b to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #10
  %blocks = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 2
  %1 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %blocks, align 8, !tbaa !20
  store %"struct.micropather::PathNodePool::Block"* %1, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %2 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  %tobool = icmp ne %"struct.micropather::PathNodePool::Block"* %2, null
  br i1 %tobool, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot, align 4
  %3 = bitcast %"struct.micropather::PathNodePool::Block"** %b to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #10
  br label %for.end11

for.body:                                         ; preds = %for.cond
  %4 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #10
  store i32 0, i32* %i, align 4, !tbaa !17
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %i, align 4, !tbaa !17
  %allocate = getelementptr inbounds %"class.micropather::PathNodePool", %"class.micropather::PathNodePool"* %this1, i32 0, i32 7
  %6 = load i32, i32* %allocate, align 8, !tbaa !21
  %cmp = icmp ult i32 %5, %6
  br i1 %cmp, label %for.body4, label %for.cond.cleanup3

for.cond.cleanup3:                                ; preds = %for.cond2
  store i32 5, i32* %cleanup.dest.slot, align 4
  %7 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %7) #10
  br label %for.end

for.body4:                                        ; preds = %for.cond2
  %8 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  %pathNode = getelementptr inbounds %"struct.micropather::PathNodePool::Block", %"struct.micropather::PathNodePool::Block"* %8, i32 0, i32 1
  %9 = load i32, i32* %i, align 4, !tbaa !17
  %idxprom = zext i32 %9 to i64
  %arrayidx = getelementptr inbounds [1 x %"class.micropather::PathNode"], [1 x %"class.micropather::PathNode"]* %pathNode, i64 0, i64 %idxprom
  %frame5 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %arrayidx, i32 0, i32 6
  %10 = load i32, i32* %frame5, align 8, !tbaa !39
  %11 = load i32, i32* %frame.addr, align 4, !tbaa !17
  %cmp6 = icmp eq i32 %10, %11
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %for.body4
  %12 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %stateVec.addr, align 8, !tbaa !3
  %13 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  %pathNode7 = getelementptr inbounds %"struct.micropather::PathNodePool::Block", %"struct.micropather::PathNodePool::Block"* %13, i32 0, i32 1
  %14 = load i32, i32* %i, align 4, !tbaa !17
  %idxprom8 = zext i32 %14 to i64
  %arrayidx9 = getelementptr inbounds [1 x %"class.micropather::PathNode"], [1 x %"class.micropather::PathNode"]* %pathNode7, i64 0, i64 %idxprom8
  %state = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %arrayidx9, i32 0, i32 0
  call void @_ZN11micropather8MPVectorIPvE9push_backERKS1_(%"class.micropather::MPVector.2"* %12, i8** dereferenceable(8) %state)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body4
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %i, align 4, !tbaa !17
  %inc = add i32 %15, 1
  store i32 %inc, i32* %i, align 4, !tbaa !17
  br label %for.cond2

for.end:                                          ; preds = %for.cond.cleanup3
  br label %for.inc10

for.inc10:                                        ; preds = %for.end
  %16 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  %nextBlock = getelementptr inbounds %"struct.micropather::PathNodePool::Block", %"struct.micropather::PathNodePool::Block"* %16, i32 0, i32 0
  %17 = load %"struct.micropather::PathNodePool::Block"*, %"struct.micropather::PathNodePool::Block"** %nextBlock, align 8, !tbaa !30
  store %"struct.micropather::PathNodePool::Block"* %17, %"struct.micropather::PathNodePool::Block"** %b, align 8, !tbaa !3
  br label %for.cond

for.end11:                                        ; preds = %for.cond.cleanup
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorIPvE9push_backERKS1_(%"class.micropather::MPVector.2"* %this, i8** dereferenceable(8) %t) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.2"*, align 8
  %t.addr = alloca i8**, align 8
  store %"class.micropather::MPVector.2"* %this, %"class.micropather::MPVector.2"** %this.addr, align 8, !tbaa !3
  store i8** %t, i8*** %t.addr, align 8, !tbaa !61
  %this1 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %this.addr, align 8
  %m_size = getelementptr inbounds %"class.micropather::MPVector.2", %"class.micropather::MPVector.2"* %this1, i32 0, i32 1
  %0 = load i32, i32* %m_size, align 4, !tbaa !64
  %add = add i32 %0, 1
  call void @_ZN11micropather8MPVectorIPvE8capacityEj(%"class.micropather::MPVector.2"* %this1, i32 %add)
  %1 = load i8**, i8*** %t.addr, align 8
  %2 = load i8*, i8** %1, align 8, !tbaa !3
  %m_buf = getelementptr inbounds %"class.micropather::MPVector.2", %"class.micropather::MPVector.2"* %this1, i32 0, i32 2
  %3 = load i8**, i8*** %m_buf, align 8, !tbaa !66
  %m_size2 = getelementptr inbounds %"class.micropather::MPVector.2", %"class.micropather::MPVector.2"* %this1, i32 0, i32 1
  %4 = load i32, i32* %m_size2, align 4, !tbaa !64
  %inc = add i32 %4, 1
  store i32 %inc, i32* %m_size2, align 4, !tbaa !64
  %idxprom = zext i32 %4 to i64
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %idxprom
  store i8* %2, i8** %arrayidx, align 8, !tbaa !3
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather9PathCacheC2Ei(%"class.micropather::PathCache"* %this, i32 %_allocated) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathCache"*, align 8
  %_allocated.addr = alloca i32, align 4
  store %"class.micropather::PathCache"* %this, %"class.micropather::PathCache"** %this.addr, align 8, !tbaa !3
  store i32 %_allocated, i32* %_allocated.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %this.addr, align 8
  %0 = load i32, i32* %_allocated.addr, align 4, !tbaa !17
  %1 = sext i32 %0 to i64
  %2 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1, i64 32)
  %3 = extractvalue { i64, i1 } %2, 1
  %4 = extractvalue { i64, i1 } %2, 0
  %5 = select i1 %3, i64 -1, i64 %4
  %call = call i8* @_Znam(i64 %5) #13
  %6 = bitcast i8* %call to %"struct.micropather::PathCache::Item"*
  %mem = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 2
  store %"struct.micropather::PathCache::Item"* %6, %"struct.micropather::PathCache::Item"** %mem, align 8, !tbaa !57
  %mem2 = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 2
  %7 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %mem2, align 8, !tbaa !57
  %8 = bitcast %"struct.micropather::PathCache::Item"* %7 to i8*
  %9 = load i32, i32* %_allocated.addr, align 4, !tbaa !17
  %conv = sext i32 %9 to i64
  %mul = mul i64 32, %conv
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 %mul, i32 8, i1 false)
  %10 = load i32, i32* %_allocated.addr, align 4, !tbaa !17
  %allocated = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 3
  store i32 %10, i32* %allocated, align 8, !tbaa !58
  %nItems = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 4
  store i32 0, i32* %nItems, align 4, !tbaa !55
  %hit = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 0
  store i32 0, i32* %hit, align 8, !tbaa !59
  %miss = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 1
  store i32 0, i32* %miss, align 4, !tbaa !60
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; Function Attrs: nobuiltin
declare noalias i8* @_Znam(i64) #6

; Function Attrs: nounwind ssp uwtable
define void @_ZN11micropather9PathCacheD2Ev(%"class.micropather::PathCache"* %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathCache"*, align 8
  store %"class.micropather::PathCache"* %this, %"class.micropather::PathCache"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %this.addr, align 8
  %mem = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 2
  %0 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %mem, align 8, !tbaa !57
  %isnull = icmp eq %"struct.micropather::PathCache::Item"* %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = bitcast %"struct.micropather::PathCache::Item"* %0 to i8*
  call void @_ZdaPv(i8* %1) #14
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr dereferenceable(8) i8** @_ZNK11micropather8MPVectorIPvEixEj(%"class.micropather::MPVector.2"* %this, i32 %i) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.2"*, align 8
  %i.addr = alloca i32, align 4
  store %"class.micropather::MPVector.2"* %this, %"class.micropather::MPVector.2"** %this.addr, align 8, !tbaa !3
  store i32 %i, i32* %i.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %this.addr, align 8
  %m_buf = getelementptr inbounds %"class.micropather::MPVector.2", %"class.micropather::MPVector.2"* %this1, i32 0, i32 2
  %0 = load i8**, i8*** %m_buf, align 8, !tbaa !66
  %1 = load i32, i32* %i.addr, align 4, !tbaa !17
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %idxprom
  ret i8** %arrayidx
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr dereferenceable(4) float* @_ZNK11micropather8MPVectorIfEixEj(%"class.micropather::MPVector.1"* %this, i32 %i) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.1"*, align 8
  %i.addr = alloca i32, align 4
  store %"class.micropather::MPVector.1"* %this, %"class.micropather::MPVector.1"** %this.addr, align 8, !tbaa !3
  store i32 %i, i32* %i.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::MPVector.1"*, %"class.micropather::MPVector.1"** %this.addr, align 8
  %m_buf = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 2
  %0 = load float*, float** %m_buf, align 8, !tbaa !76
  %1 = load i32, i32* %i.addr, align 4, !tbaa !17
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds float, float* %0, i64 %idxprom
  ret float* %arrayidx
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather9PathCache7AddItemERKNS0_4ItemE(%"class.micropather::PathCache"* %this, %"struct.micropather::PathCache::Item"* dereferenceable(32) %item) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathCache"*, align 8
  %item.addr = alloca %"struct.micropather::PathCache::Item"*, align 8
  %index = alloca i32, align 4
  store %"class.micropather::PathCache"* %this, %"class.micropather::PathCache"** %this.addr, align 8, !tbaa !3
  store %"struct.micropather::PathCache::Item"* %item, %"struct.micropather::PathCache::Item"** %item.addr, align 8, !tbaa !61
  %this1 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %this.addr, align 8
  %0 = bitcast i32* %index to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #10
  %1 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %item.addr, align 8
  %call = call i32 @_ZNK11micropather9PathCache4Item4HashEv(%"struct.micropather::PathCache::Item"* %1)
  %allocated = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 3
  %2 = load i32, i32* %allocated, align 8, !tbaa !58
  %rem = urem i32 %call, %2
  store i32 %rem, i32* %index, align 4, !tbaa !17
  br label %while.cond

while.cond:                                       ; preds = %if.end15, %entry
  br label %while.body

while.body:                                       ; preds = %while.cond
  %mem = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 2
  %3 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %mem, align 8, !tbaa !57
  %4 = load i32, i32* %index, align 4, !tbaa !17
  %idxprom = zext i32 %4 to i64
  %arrayidx = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %3, i64 %idxprom
  %call2 = call zeroext i1 @_ZNK11micropather9PathCache4Item5EmptyEv(%"struct.micropather::PathCache::Item"* %arrayidx)
  br i1 %call2, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %5 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %item.addr, align 8
  %mem3 = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 2
  %6 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %mem3, align 8, !tbaa !57
  %7 = load i32, i32* %index, align 4, !tbaa !17
  %idxprom4 = zext i32 %7 to i64
  %arrayidx5 = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %6, i64 %idxprom4
  %8 = bitcast %"struct.micropather::PathCache::Item"* %arrayidx5 to i8*
  %9 = bitcast %"struct.micropather::PathCache::Item"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 32, i32 8, i1 false), !tbaa.struct !84
  %nItems = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 4
  %10 = load i32, i32* %nItems, align 4, !tbaa !55
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %nItems, align 4, !tbaa !55
  br label %while.end

if.else:                                          ; preds = %while.body
  %mem6 = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 2
  %11 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %mem6, align 8, !tbaa !57
  %12 = load i32, i32* %index, align 4, !tbaa !17
  %idxprom7 = zext i32 %12 to i64
  %arrayidx8 = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %11, i64 %idxprom7
  %13 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %item.addr, align 8
  %call9 = call zeroext i1 @_ZNK11micropather9PathCache4Item8KeyEqualERKS1_(%"struct.micropather::PathCache::Item"* %arrayidx8, %"struct.micropather::PathCache::Item"* dereferenceable(32) %13)
  br i1 %call9, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.else
  br label %while.end

if.end:                                           ; preds = %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end
  %14 = load i32, i32* %index, align 4, !tbaa !17
  %inc12 = add i32 %14, 1
  store i32 %inc12, i32* %index, align 4, !tbaa !17
  %15 = load i32, i32* %index, align 4, !tbaa !17
  %allocated13 = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 3
  %16 = load i32, i32* %allocated13, align 8, !tbaa !58
  %cmp = icmp eq i32 %15, %16
  br i1 %cmp, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end11
  store i32 0, i32* %index, align 4, !tbaa !17
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.end11
  br label %while.cond

while.end:                                        ; preds = %if.then10, %if.then
  %17 = bitcast i32* %index to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %17) #10
  ret void
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather9PathCache13AddNoSolutionEPvPS1_i(%"class.micropather::PathCache"* %this, i8* %end, i8** %states, i32 %count) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathCache"*, align 8
  %end.addr = alloca i8*, align 8
  %states.addr = alloca i8**, align 8
  %count.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %item = alloca %"struct.micropather::PathCache::Item", align 8
  store %"class.micropather::PathCache"* %this, %"class.micropather::PathCache"** %this.addr, align 8, !tbaa !3
  store i8* %end, i8** %end.addr, align 8, !tbaa !3
  store i8** %states, i8*** %states.addr, align 8, !tbaa !3
  store i32 %count, i32* %count.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %this.addr, align 8
  %0 = load i32, i32* %count.addr, align 4, !tbaa !17
  %nItems = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 4
  %1 = load i32, i32* %nItems, align 4, !tbaa !55
  %add = add nsw i32 %0, %1
  %allocated = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 3
  %2 = load i32, i32* %allocated, align 8, !tbaa !58
  %mul = mul nsw i32 %2, 3
  %div = sdiv i32 %mul, 4
  %cmp = icmp sgt i32 %add, %div
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end

if.end:                                           ; preds = %entry
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #10
  store i32 0, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !tbaa !17
  %5 = load i32, i32* %count.addr, align 4, !tbaa !17
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %6 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %6) #10
  br label %for.end

for.body:                                         ; preds = %for.cond
  %7 = bitcast %"struct.micropather::PathCache::Item"* %item to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %7) #10
  %start = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %item, i32 0, i32 0
  %8 = load i8**, i8*** %states.addr, align 8, !tbaa !3
  %9 = load i32, i32* %i, align 4, !tbaa !17
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds i8*, i8** %8, i64 %idxprom
  %10 = load i8*, i8** %arrayidx, align 8, !tbaa !3
  store i8* %10, i8** %start, align 8, !tbaa !77
  %end3 = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %item, i32 0, i32 1
  %11 = load i8*, i8** %end.addr, align 8, !tbaa !3
  store i8* %11, i8** %end3, align 8, !tbaa !79
  %next = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %item, i32 0, i32 2
  store i8* null, i8** %next, align 8, !tbaa !80
  %cost = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %item, i32 0, i32 3
  store float 0x47EFFFFFE0000000, float* %cost, align 8, !tbaa !81
  call void @_ZN11micropather9PathCache7AddItemERKNS0_4ItemE(%"class.micropather::PathCache"* %this1, %"struct.micropather::PathCache::Item"* dereferenceable(32) %item)
  %12 = bitcast %"struct.micropather::PathCache::Item"* %item to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %12) #10
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !17
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond.cleanup
  ret void
}

; Function Attrs: ssp uwtable
define i32 @_ZN11micropather9PathCache5SolveEPvS1_PNS_8MPVectorIS1_EEPf(%"class.micropather::PathCache"* %this, i8* %start, i8* %end, %"class.micropather::MPVector.2"* %path, float* %totalCost) #0 align 2 {
entry:
  %retval = alloca i32, align 4
  %this.addr = alloca %"class.micropather::PathCache"*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %path.addr = alloca %"class.micropather::MPVector.2"*, align 8
  %totalCost.addr = alloca float*, align 8
  %item = alloca %"struct.micropather::PathCache::Item"*, align 8
  %cleanup.dest.slot = alloca i32
  store %"class.micropather::PathCache"* %this, %"class.micropather::PathCache"** %this.addr, align 8, !tbaa !3
  store i8* %start, i8** %start.addr, align 8, !tbaa !3
  store i8* %end, i8** %end.addr, align 8, !tbaa !3
  store %"class.micropather::MPVector.2"* %path, %"class.micropather::MPVector.2"** %path.addr, align 8, !tbaa !3
  store float* %totalCost, float** %totalCost.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %this.addr, align 8
  %0 = bitcast %"struct.micropather::PathCache::Item"** %item to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #10
  %1 = load i8*, i8** %start.addr, align 8, !tbaa !3
  %2 = load i8*, i8** %end.addr, align 8, !tbaa !3
  %call = call %"struct.micropather::PathCache::Item"* @_ZN11micropather9PathCache4FindEPvS1_(%"class.micropather::PathCache"* %this1, i8* %1, i8* %2)
  store %"struct.micropather::PathCache::Item"* %call, %"struct.micropather::PathCache::Item"** %item, align 8, !tbaa !3
  %3 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %item, align 8, !tbaa !3
  %tobool = icmp ne %"struct.micropather::PathCache::Item"* %3, null
  br i1 %tobool, label %if.then, label %if.end9

if.then:                                          ; preds = %entry
  %4 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %item, align 8, !tbaa !3
  %cost = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %4, i32 0, i32 3
  %5 = load float, float* %cost, align 8, !tbaa !81
  %cmp = fcmp oeq float %5, 0x47EFFFFFE0000000
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %hit = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 0
  %6 = load i32, i32* %hit, align 8, !tbaa !59
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %hit, align 8, !tbaa !59
  store i32 1, i32* %retval, align 4
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  %7 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path.addr, align 8, !tbaa !3
  call void @_ZN11micropather8MPVectorIPvE5clearEv(%"class.micropather::MPVector.2"* %7)
  %8 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path.addr, align 8, !tbaa !3
  call void @_ZN11micropather8MPVectorIPvE9push_backERKS1_(%"class.micropather::MPVector.2"* %8, i8** dereferenceable(8) %start.addr)
  %9 = load float*, float** %totalCost.addr, align 8, !tbaa !3
  store float 0.000000e+00, float* %9, align 4, !tbaa !35
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i8*, i8** %start.addr, align 8, !tbaa !3
  %11 = load i8*, i8** %end.addr, align 8, !tbaa !3
  %cmp3 = icmp ne i8* %10, %11
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %item, align 8, !tbaa !3
  %cost4 = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %12, i32 0, i32 3
  %13 = load float, float* %cost4, align 8, !tbaa !81
  %14 = load float*, float** %totalCost.addr, align 8, !tbaa !3
  %15 = load float, float* %14, align 4, !tbaa !35
  %add = fadd float %15, %13
  store float %add, float* %14, align 4, !tbaa !35
  %16 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path.addr, align 8, !tbaa !3
  %17 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %item, align 8, !tbaa !3
  %next = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %17, i32 0, i32 2
  call void @_ZN11micropather8MPVectorIPvE9push_backERKS1_(%"class.micropather::MPVector.2"* %16, i8** dereferenceable(8) %next)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %18 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %item, align 8, !tbaa !3
  %next5 = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %18, i32 0, i32 2
  %19 = load i8*, i8** %next5, align 8, !tbaa !80
  store i8* %19, i8** %start.addr, align 8, !tbaa !3
  %20 = load i8*, i8** %start.addr, align 8, !tbaa !3
  %21 = load i8*, i8** %end.addr, align 8, !tbaa !3
  %call6 = call %"struct.micropather::PathCache::Item"* @_ZN11micropather9PathCache4FindEPvS1_(%"class.micropather::PathCache"* %this1, i8* %20, i8* %21)
  store %"struct.micropather::PathCache::Item"* %call6, %"struct.micropather::PathCache::Item"** %item, align 8, !tbaa !3
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %hit7 = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 0
  %22 = load i32, i32* %hit7, align 8, !tbaa !59
  %inc8 = add nsw i32 %22, 1
  store i32 %inc8, i32* %hit7, align 8, !tbaa !59
  store i32 0, i32* %retval, align 4
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end9:                                          ; preds = %entry
  %miss = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 1
  %23 = load i32, i32* %miss, align 4, !tbaa !60
  %inc10 = add nsw i32 %23, 1
  store i32 %inc10, i32* %miss, align 4, !tbaa !60
  store i32 3, i32* %retval, align 4
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %for.end, %if.then2
  %24 = bitcast %"struct.micropather::PathCache::Item"** %item to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24) #10
  %25 = load i32, i32* %retval, align 4
  ret i32 %25
}

; Function Attrs: ssp uwtable
define %"struct.micropather::PathCache::Item"* @_ZN11micropather9PathCache4FindEPvS1_(%"class.micropather::PathCache"* %this, i8* %start, i8* %end) #0 align 2 {
entry:
  %retval = alloca %"struct.micropather::PathCache::Item"*, align 8
  %this.addr = alloca %"class.micropather::PathCache"*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %fake = alloca %"struct.micropather::PathCache::Item", align 8
  %index = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %"class.micropather::PathCache"* %this, %"class.micropather::PathCache"** %this.addr, align 8, !tbaa !3
  store i8* %start, i8** %start.addr, align 8, !tbaa !3
  store i8* %end, i8** %end.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %this.addr, align 8
  %0 = bitcast %"struct.micropather::PathCache::Item"* %fake to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %0) #10
  %start2 = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %fake, i32 0, i32 0
  %1 = load i8*, i8** %start.addr, align 8, !tbaa !3
  store i8* %1, i8** %start2, align 8, !tbaa !77
  %end3 = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %fake, i32 0, i32 1
  %2 = load i8*, i8** %end.addr, align 8, !tbaa !3
  store i8* %2, i8** %end3, align 8, !tbaa !79
  %next = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %fake, i32 0, i32 2
  store i8* null, i8** %next, align 8, !tbaa !80
  %cost = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %fake, i32 0, i32 3
  store float 0.000000e+00, float* %cost, align 8, !tbaa !81
  %3 = bitcast i32* %index to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #10
  %call = call i32 @_ZNK11micropather9PathCache4Item4HashEv(%"struct.micropather::PathCache::Item"* %fake)
  %allocated = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 3
  %4 = load i32, i32* %allocated, align 8, !tbaa !58
  %rem = urem i32 %call, %4
  store i32 %rem, i32* %index, align 4, !tbaa !17
  br label %while.cond

while.cond:                                       ; preds = %if.end14, %entry
  br label %while.body

while.body:                                       ; preds = %while.cond
  %mem = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 2
  %5 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %mem, align 8, !tbaa !57
  %6 = load i32, i32* %index, align 4, !tbaa !17
  %idxprom = zext i32 %6 to i64
  %arrayidx = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %5, i64 %idxprom
  %call4 = call zeroext i1 @_ZNK11micropather9PathCache4Item5EmptyEv(%"struct.micropather::PathCache::Item"* %arrayidx)
  br i1 %call4, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  store %"struct.micropather::PathCache::Item"* null, %"struct.micropather::PathCache::Item"** %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %while.body
  %mem5 = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 2
  %7 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %mem5, align 8, !tbaa !57
  %8 = load i32, i32* %index, align 4, !tbaa !17
  %idxprom6 = zext i32 %8 to i64
  %arrayidx7 = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %7, i64 %idxprom6
  %call8 = call zeroext i1 @_ZNK11micropather9PathCache4Item8KeyEqualERKS1_(%"struct.micropather::PathCache::Item"* %arrayidx7, %"struct.micropather::PathCache::Item"* dereferenceable(32) %fake)
  br i1 %call8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end
  %mem10 = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 2
  %9 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %mem10, align 8, !tbaa !57
  %10 = load i32, i32* %index, align 4, !tbaa !17
  %idx.ext = zext i32 %10 to i64
  %add.ptr = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %9, i64 %idx.ext
  store %"struct.micropather::PathCache::Item"* %add.ptr, %"struct.micropather::PathCache::Item"** %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end11:                                         ; preds = %if.end
  %11 = load i32, i32* %index, align 4, !tbaa !17
  %inc = add i32 %11, 1
  store i32 %inc, i32* %index, align 4, !tbaa !17
  %12 = load i32, i32* %index, align 4, !tbaa !17
  %allocated12 = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 3
  %13 = load i32, i32* %allocated12, align 8, !tbaa !58
  %cmp = icmp eq i32 %12, %13
  br i1 %cmp, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end11
  store i32 0, i32* %index, align 4, !tbaa !17
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end11
  br label %while.cond

cleanup:                                          ; preds = %if.then9, %if.then
  %14 = bitcast i32* %index to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %14) #10
  %15 = bitcast %"struct.micropather::PathCache::Item"* %fake to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %15) #10
  %16 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %retval, align 8
  ret %"struct.micropather::PathCache::Item"* %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr i32 @_ZNK11micropather9PathCache4Item4HashEv(%"struct.micropather::PathCache::Item"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"struct.micropather::PathCache::Item"*, align 8
  %p = alloca i8*, align 8
  %h = alloca i32, align 4
  %i = alloca i32, align 4
  store %"struct.micropather::PathCache::Item"* %this, %"struct.micropather::PathCache::Item"** %this.addr, align 8, !tbaa !3
  %this1 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %this.addr, align 8
  %0 = bitcast i8** %p to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #10
  %start = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %this1, i32 0, i32 0
  %1 = bitcast i8** %start to i8*
  store i8* %1, i8** %p, align 8, !tbaa !3
  %2 = bitcast i32* %h to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #10
  store i32 -2128831035, i32* %h, align 4, !tbaa !17
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #10
  store i32 0, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !tbaa !17
  %conv = zext i32 %4 to i64
  %cmp = icmp ult i64 %conv, 16
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %5) #10
  br label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %p, align 8, !tbaa !3
  %7 = load i8, i8* %6, align 1, !tbaa !61
  %conv2 = zext i8 %7 to i32
  %8 = load i32, i32* %h, align 4, !tbaa !17
  %xor = xor i32 %8, %conv2
  store i32 %xor, i32* %h, align 4, !tbaa !17
  %9 = load i32, i32* %h, align 4, !tbaa !17
  %mul = mul i32 %9, 16777619
  store i32 %mul, i32* %h, align 4, !tbaa !17
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !tbaa !17
  %inc = add i32 %10, 1
  store i32 %inc, i32* %i, align 4, !tbaa !17
  %11 = load i8*, i8** %p, align 8, !tbaa !3
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr, i8** %p, align 8, !tbaa !3
  br label %for.cond

for.end:                                          ; preds = %for.cond.cleanup
  %12 = load i32, i32* %h, align 4, !tbaa !17
  %13 = bitcast i32* %h to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %13) #10
  %14 = bitcast i8** %p to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %14) #10
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr zeroext i1 @_ZNK11micropather9PathCache4Item5EmptyEv(%"struct.micropather::PathCache::Item"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"struct.micropather::PathCache::Item"*, align 8
  store %"struct.micropather::PathCache::Item"* %this, %"struct.micropather::PathCache::Item"** %this.addr, align 8, !tbaa !3
  %this1 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %this.addr, align 8
  %start = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %this1, i32 0, i32 0
  %0 = load i8*, i8** %start, align 8, !tbaa !77
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %end = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %this1, i32 0, i32 1
  %1 = load i8*, i8** %end, align 8, !tbaa !79
  %cmp2 = icmp eq i8* %1, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp2, %land.rhs ]
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr zeroext i1 @_ZNK11micropather9PathCache4Item8KeyEqualERKS1_(%"struct.micropather::PathCache::Item"* %this, %"struct.micropather::PathCache::Item"* dereferenceable(32) %item) #2 align 2 {
entry:
  %this.addr = alloca %"struct.micropather::PathCache::Item"*, align 8
  %item.addr = alloca %"struct.micropather::PathCache::Item"*, align 8
  store %"struct.micropather::PathCache::Item"* %this, %"struct.micropather::PathCache::Item"** %this.addr, align 8, !tbaa !3
  store %"struct.micropather::PathCache::Item"* %item, %"struct.micropather::PathCache::Item"** %item.addr, align 8, !tbaa !61
  %this1 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %this.addr, align 8
  %start = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %this1, i32 0, i32 0
  %0 = load i8*, i8** %start, align 8, !tbaa !77
  %1 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %item.addr, align 8
  %start2 = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %1, i32 0, i32 0
  %2 = load i8*, i8** %start2, align 8, !tbaa !77
  %cmp = icmp eq i8* %0, %2
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %end = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %this1, i32 0, i32 1
  %3 = load i8*, i8** %end, align 8, !tbaa !79
  %4 = load %"struct.micropather::PathCache::Item"*, %"struct.micropather::PathCache::Item"** %item.addr, align 8
  %end3 = getelementptr inbounds %"struct.micropather::PathCache::Item", %"struct.micropather::PathCache::Item"* %4, i32 0, i32 1
  %5 = load i8*, i8** %end3, align 8, !tbaa !79
  %cmp4 = icmp eq i8* %3, %5
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp4, %land.rhs ]
  ret i1 %6
}

; Function Attrs: ssp uwtable
define void @_ZN11micropather11MicroPather12GetCacheDataEPNS_9CacheDataE(%"class.micropather::MicroPather"* %this, %"struct.micropather::CacheData"* %data) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MicroPather"*, align 8
  %data.addr = alloca %"struct.micropather::CacheData"*, align 8
  store %"class.micropather::MicroPather"* %this, %"class.micropather::MicroPather"** %this.addr, align 8, !tbaa !3
  store %"struct.micropather::CacheData"* %data, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MicroPather"*, %"class.micropather::MicroPather"** %this.addr, align 8
  %0 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %1 = bitcast %"struct.micropather::CacheData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 24, i32 4, i1 false)
  %pathCache = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  %2 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %pathCache, align 8, !tbaa !53
  %tobool = icmp ne %"class.micropather::PathCache"* %2, null
  br i1 %tobool, label %if.then, label %if.end26

if.then:                                          ; preds = %entry
  %pathCache2 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  %3 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %pathCache2, align 8, !tbaa !53
  %call = call i32 @_ZNK11micropather9PathCache14AllocatedBytesEv(%"class.micropather::PathCache"* %3)
  %4 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %nBytesAllocated = getelementptr inbounds %"struct.micropather::CacheData", %"struct.micropather::CacheData"* %4, i32 0, i32 0
  store i32 %call, i32* %nBytesAllocated, align 4, !tbaa !85
  %pathCache3 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  %5 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %pathCache3, align 8, !tbaa !53
  %call4 = call i32 @_ZNK11micropather9PathCache9UsedBytesEv(%"class.micropather::PathCache"* %5)
  %6 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %nBytesUsed = getelementptr inbounds %"struct.micropather::CacheData", %"struct.micropather::CacheData"* %6, i32 0, i32 1
  store i32 %call4, i32* %nBytesUsed, align 4, !tbaa !87
  %7 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %nBytesUsed5 = getelementptr inbounds %"struct.micropather::CacheData", %"struct.micropather::CacheData"* %7, i32 0, i32 1
  %8 = load i32, i32* %nBytesUsed5, align 4, !tbaa !87
  %conv = sitofp i32 %8 to double
  %9 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %nBytesAllocated6 = getelementptr inbounds %"struct.micropather::CacheData", %"struct.micropather::CacheData"* %9, i32 0, i32 0
  %10 = load i32, i32* %nBytesAllocated6, align 4, !tbaa !85
  %conv7 = sitofp i32 %10 to double
  %div = fdiv double %conv, %conv7
  %conv8 = fptrunc double %div to float
  %11 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %memoryFraction = getelementptr inbounds %"struct.micropather::CacheData", %"struct.micropather::CacheData"* %11, i32 0, i32 2
  store float %conv8, float* %memoryFraction, align 4, !tbaa !88
  %pathCache9 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  %12 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %pathCache9, align 8, !tbaa !53
  %hit = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %12, i32 0, i32 0
  %13 = load i32, i32* %hit, align 8, !tbaa !59
  %14 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %hit10 = getelementptr inbounds %"struct.micropather::CacheData", %"struct.micropather::CacheData"* %14, i32 0, i32 3
  store i32 %13, i32* %hit10, align 4, !tbaa !89
  %pathCache11 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  %15 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %pathCache11, align 8, !tbaa !53
  %miss = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %15, i32 0, i32 1
  %16 = load i32, i32* %miss, align 4, !tbaa !60
  %17 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %miss12 = getelementptr inbounds %"struct.micropather::CacheData", %"struct.micropather::CacheData"* %17, i32 0, i32 4
  store i32 %16, i32* %miss12, align 4, !tbaa !90
  %18 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %hit13 = getelementptr inbounds %"struct.micropather::CacheData", %"struct.micropather::CacheData"* %18, i32 0, i32 3
  %19 = load i32, i32* %hit13, align 4, !tbaa !89
  %20 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %miss14 = getelementptr inbounds %"struct.micropather::CacheData", %"struct.micropather::CacheData"* %20, i32 0, i32 4
  %21 = load i32, i32* %miss14, align 4, !tbaa !90
  %add = add nsw i32 %19, %21
  %tobool15 = icmp ne i32 %add, 0
  br i1 %tobool15, label %if.then16, label %if.else

if.then16:                                        ; preds = %if.then
  %22 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %hit17 = getelementptr inbounds %"struct.micropather::CacheData", %"struct.micropather::CacheData"* %22, i32 0, i32 3
  %23 = load i32, i32* %hit17, align 4, !tbaa !89
  %conv18 = sitofp i32 %23 to double
  %24 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %hit19 = getelementptr inbounds %"struct.micropather::CacheData", %"struct.micropather::CacheData"* %24, i32 0, i32 3
  %25 = load i32, i32* %hit19, align 4, !tbaa !89
  %26 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %miss20 = getelementptr inbounds %"struct.micropather::CacheData", %"struct.micropather::CacheData"* %26, i32 0, i32 4
  %27 = load i32, i32* %miss20, align 4, !tbaa !90
  %add21 = add nsw i32 %25, %27
  %conv22 = sitofp i32 %add21 to double
  %div23 = fdiv double %conv18, %conv22
  %conv24 = fptrunc double %div23 to float
  %28 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %hitFraction = getelementptr inbounds %"struct.micropather::CacheData", %"struct.micropather::CacheData"* %28, i32 0, i32 5
  store float %conv24, float* %hitFraction, align 4, !tbaa !91
  br label %if.end

if.else:                                          ; preds = %if.then
  %29 = load %"struct.micropather::CacheData"*, %"struct.micropather::CacheData"** %data.addr, align 8, !tbaa !3
  %hitFraction25 = getelementptr inbounds %"struct.micropather::CacheData", %"struct.micropather::CacheData"* %29, i32 0, i32 5
  store float 0.000000e+00, float* %hitFraction25, align 4, !tbaa !91
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then16
  br label %if.end26

if.end26:                                         ; preds = %if.end, %entry
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr i32 @_ZNK11micropather9PathCache14AllocatedBytesEv(%"class.micropather::PathCache"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathCache"*, align 8
  store %"class.micropather::PathCache"* %this, %"class.micropather::PathCache"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %this.addr, align 8
  %allocated = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 3
  %0 = load i32, i32* %allocated, align 8, !tbaa !58
  %conv = sext i32 %0 to i64
  %mul = mul i64 %conv, 32
  %conv2 = trunc i64 %mul to i32
  ret i32 %conv2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr i32 @_ZNK11micropather9PathCache9UsedBytesEv(%"class.micropather::PathCache"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::PathCache"*, align 8
  store %"class.micropather::PathCache"* %this, %"class.micropather::PathCache"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %this.addr, align 8
  %nItems = getelementptr inbounds %"class.micropather::PathCache", %"class.micropather::PathCache"* %this1, i32 0, i32 4
  %0 = load i32, i32* %nItems, align 4, !tbaa !55
  %conv = sext i32 %0 to i64
  %mul = mul i64 %conv, 32
  %conv2 = trunc i64 %mul to i32
  ret i32 %conv2
}

; Function Attrs: ssp uwtable
define i32 @_ZN11micropather11MicroPather5SolveEPvS1_PNS_8MPVectorIS1_EEPf(%"class.micropather::MicroPather"* %this, i8* %startNode, i8* %endNode, %"class.micropather::MPVector.2"* %path, float* %cost) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %retval = alloca i32, align 4
  %this.addr = alloca %"class.micropather::MicroPather"*, align 8
  %startNode.addr = alloca i8*, align 8
  %endNode.addr = alloca i8*, align 8
  %path.addr = alloca %"class.micropather::MPVector.2"*, align 8
  %cost.addr = alloca float*, align 8
  %cacheResult = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %open = alloca %class.OpenQueue, align 8
  %closed = alloca %class.ClosedSet, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %newPathNode = alloca %"class.micropather::PathNode"*, align 8
  %node = alloca %"class.micropather::PathNode"*, align 8
  %i = alloca i32, align 4
  %child = alloca %"class.micropather::PathNode"*, align 8
  %newCost = alloca float, align 4
  %inOpen = alloca %"class.micropather::PathNode"*, align 8
  %inClosed = alloca %"class.micropather::PathNode"*, align 8
  %inEither = alloca %"class.micropather::PathNode"*, align 8
  store %"class.micropather::MicroPather"* %this, %"class.micropather::MicroPather"** %this.addr, align 8, !tbaa !3
  store i8* %startNode, i8** %startNode.addr, align 8, !tbaa !3
  store i8* %endNode, i8** %endNode.addr, align 8, !tbaa !3
  store %"class.micropather::MPVector.2"* %path, %"class.micropather::MPVector.2"** %path.addr, align 8, !tbaa !3
  store float* %cost, float** %cost.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MicroPather"*, %"class.micropather::MicroPather"** %this.addr, align 8
  %0 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path.addr, align 8, !tbaa !3
  call void @_ZN11micropather8MPVectorIPvE5clearEv(%"class.micropather::MPVector.2"* %0)
  %1 = load float*, float** %cost.addr, align 8, !tbaa !3
  store float 0.000000e+00, float* %1, align 4, !tbaa !35
  %2 = load i8*, i8** %startNode.addr, align 8, !tbaa !3
  %3 = load i8*, i8** %endNode.addr, align 8, !tbaa !3
  %cmp = icmp eq i8* %2, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %pathCache = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  %4 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %pathCache, align 8, !tbaa !53
  %tobool = icmp ne %"class.micropather::PathCache"* %4, null
  br i1 %tobool, label %if.then2, label %if.end8

if.then2:                                         ; preds = %if.end
  %5 = bitcast i32* %cacheResult to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #10
  %pathCache3 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  %6 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %pathCache3, align 8, !tbaa !53
  %7 = load i8*, i8** %startNode.addr, align 8, !tbaa !3
  %8 = load i8*, i8** %endNode.addr, align 8, !tbaa !3
  %9 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path.addr, align 8, !tbaa !3
  %10 = load float*, float** %cost.addr, align 8, !tbaa !3
  %call = call i32 @_ZN11micropather9PathCache5SolveEPvS1_PNS_8MPVectorIS1_EEPf(%"class.micropather::PathCache"* %6, i8* %7, i8* %8, %"class.micropather::MPVector.2"* %9, float* %10)
  store i32 %call, i32* %cacheResult, align 4, !tbaa !17
  %11 = load i32, i32* %cacheResult, align 4, !tbaa !17
  %cmp4 = icmp eq i32 %11, 0
  br i1 %cmp4, label %if.then6, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then2
  %12 = load i32, i32* %cacheResult, align 4, !tbaa !17
  %cmp5 = icmp eq i32 %12, 1
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %lor.lhs.false, %if.then2
  %13 = load i32, i32* %cacheResult, align 4, !tbaa !17
  store i32 %13, i32* %retval, align 4
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end7:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then6
  %14 = bitcast i32* %cacheResult to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %14) #10
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end8

if.end8:                                          ; preds = %cleanup.cont, %if.end
  %frame = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 5
  %15 = load i32, i32* %frame, align 8, !tbaa !52
  %inc = add i32 %15, 1
  store i32 %inc, i32* %frame, align 8, !tbaa !52
  %16 = bitcast %class.OpenQueue* %open to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* %16) #10
  %graph = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 4
  %17 = load %"class.micropather::Graph"*, %"class.micropather::Graph"** %graph, align 8, !tbaa !47
  call void @_ZN9OpenQueueC1EPN11micropather5GraphE(%class.OpenQueue* %open, %"class.micropather::Graph"* %17)
  %18 = bitcast %class.ClosedSet* %closed to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #10
  %graph9 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 4
  %19 = load %"class.micropather::Graph"*, %"class.micropather::Graph"** %graph9, align 8, !tbaa !47
  invoke void @_ZN9ClosedSetC1EPN11micropather5GraphE(%class.ClosedSet* %closed, %"class.micropather::Graph"* %19)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.end8
  %20 = bitcast %"class.micropather::PathNode"** %newPathNode to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #10
  %pathNodePool = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 0
  %frame10 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 5
  %21 = load i32, i32* %frame10, align 8, !tbaa !52
  %22 = load i8*, i8** %startNode.addr, align 8, !tbaa !3
  %graph11 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 4
  %23 = load %"class.micropather::Graph"*, %"class.micropather::Graph"** %graph11, align 8, !tbaa !47
  %24 = bitcast %"class.micropather::Graph"* %23 to float (%"class.micropather::Graph"*, i8*, i8*)***
  %vtable = load float (%"class.micropather::Graph"*, i8*, i8*)**, float (%"class.micropather::Graph"*, i8*, i8*)*** %24, align 8, !tbaa !69
  %vfn = getelementptr inbounds float (%"class.micropather::Graph"*, i8*, i8*)*, float (%"class.micropather::Graph"*, i8*, i8*)** %vtable, i64 2
  %25 = load float (%"class.micropather::Graph"*, i8*, i8*)*, float (%"class.micropather::Graph"*, i8*, i8*)** %vfn, align 8
  %26 = load i8*, i8** %startNode.addr, align 8, !tbaa !3
  %27 = load i8*, i8** %endNode.addr, align 8, !tbaa !3
  %call14 = invoke float %25(%"class.micropather::Graph"* %23, i8* %26, i8* %27)
          to label %invoke.cont13 unwind label %lpad12

invoke.cont13:                                    ; preds = %invoke.cont
  %call16 = invoke %"class.micropather::PathNode"* @_ZN11micropather12PathNodePool11GetPathNodeEjPvffPNS_8PathNodeE(%"class.micropather::PathNodePool"* %pathNodePool, i32 %21, i8* %22, float 0.000000e+00, float %call14, %"class.micropather::PathNode"* null)
          to label %invoke.cont15 unwind label %lpad12

invoke.cont15:                                    ; preds = %invoke.cont13
  store %"class.micropather::PathNode"* %call16, %"class.micropather::PathNode"** %newPathNode, align 8, !tbaa !3
  %28 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %newPathNode, align 8, !tbaa !3
  invoke void @_ZN9OpenQueue4PushEPN11micropather8PathNodeE(%class.OpenQueue* %open, %"class.micropather::PathNode"* %28)
          to label %invoke.cont17 unwind label %lpad12

invoke.cont17:                                    ; preds = %invoke.cont15
  %stateCostVec = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 1
  invoke void @_ZN11micropather8MPVectorINS_9StateCostEE6resizeEj(%"class.micropather::MPVector"* %stateCostVec, i32 0)
          to label %invoke.cont18 unwind label %lpad12

invoke.cont18:                                    ; preds = %invoke.cont17
  %nodeCostVec = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  invoke void @_ZN11micropather8MPVectorINS_8NodeCostEE6resizeEj(%"class.micropather::MPVector.0"* %nodeCostVec, i32 0)
          to label %invoke.cont19 unwind label %lpad12

invoke.cont19:                                    ; preds = %invoke.cont18
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont98, %invoke.cont19
  %call21 = invoke zeroext i1 @_ZN9OpenQueue5EmptyEv(%class.OpenQueue* %open)
          to label %invoke.cont20 unwind label %lpad12

invoke.cont20:                                    ; preds = %while.cond
  %lnot = xor i1 %call21, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %invoke.cont20
  %29 = bitcast %"class.micropather::PathNode"** %node to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #10
  %call24 = invoke %"class.micropather::PathNode"* @_ZN9OpenQueue3PopEv(%class.OpenQueue* %open)
          to label %invoke.cont23 unwind label %lpad22

invoke.cont23:                                    ; preds = %while.body
  store %"class.micropather::PathNode"* %call24, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %30 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %state = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %30, i32 0, i32 0
  %31 = load i8*, i8** %state, align 8, !tbaa !38
  %32 = load i8*, i8** %endNode.addr, align 8, !tbaa !3
  %cmp25 = icmp eq i8* %31, %32
  br i1 %cmp25, label %if.then26, label %if.else

if.then26:                                        ; preds = %invoke.cont23
  %33 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %34 = load i8*, i8** %startNode.addr, align 8, !tbaa !3
  %35 = load i8*, i8** %endNode.addr, align 8, !tbaa !3
  %36 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %path.addr, align 8, !tbaa !3
  invoke void @_ZN11micropather11MicroPather11GoalReachedEPNS_8PathNodeEPvS3_PNS_8MPVectorIS3_EE(%"class.micropather::MicroPather"* %this1, %"class.micropather::PathNode"* %33, i8* %34, i8* %35, %"class.micropather::MPVector.2"* %36)
          to label %invoke.cont27 unwind label %lpad22

invoke.cont27:                                    ; preds = %if.then26
  %37 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %costFromStart = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %37, i32 0, i32 1
  %38 = load float, float* %costFromStart, align 8, !tbaa !40
  %39 = load float*, float** %cost.addr, align 8, !tbaa !3
  store float %38, float* %39, align 4, !tbaa !35
  store i32 0, i32* %retval, align 4
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup96

lpad:                                             ; preds = %cleanup106, %if.end8
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %exn.slot, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %ehselector.slot, align 4
  br label %ehcleanup113

lpad12:                                           ; preds = %if.then102, %while.cond, %invoke.cont18, %invoke.cont17, %invoke.cont15, %invoke.cont13, %invoke.cont
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %exn.slot, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %ehselector.slot, align 4
  br label %ehcleanup107

lpad22:                                           ; preds = %invoke.cont28, %if.else, %if.then26, %while.body
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %exn.slot, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %ehselector.slot, align 4
  br label %ehcleanup99

if.else:                                          ; preds = %invoke.cont23
  %49 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  invoke void @_ZN9ClosedSet3AddEPN11micropather8PathNodeE(%class.ClosedSet* %closed, %"class.micropather::PathNode"* %49)
          to label %invoke.cont28 unwind label %lpad22

invoke.cont28:                                    ; preds = %if.else
  %50 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %nodeCostVec29 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  invoke void @_ZN11micropather11MicroPather16GetNodeNeighborsEPNS_8PathNodeEPNS_8MPVectorINS_8NodeCostEEE(%"class.micropather::MicroPather"* %this1, %"class.micropather::PathNode"* %50, %"class.micropather::MPVector.0"* %nodeCostVec29)
          to label %invoke.cont30 unwind label %lpad22

invoke.cont30:                                    ; preds = %invoke.cont28
  %51 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #10
  store i32 0, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %invoke.cont30
  %52 = load i32, i32* %i, align 4, !tbaa !17
  %53 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %numAdjacent = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %53, i32 0, i32 7
  %54 = load i32, i32* %numAdjacent, align 4, !tbaa !44
  %cmp31 = icmp slt i32 %52, %54
  br i1 %cmp31, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 4, i32* %cleanup.dest.slot, align 4
  %55 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %55) #10
  br label %for.end

for.body:                                         ; preds = %for.cond
  %nodeCostVec32 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  %56 = load i32, i32* %i, align 4, !tbaa !17
  %call35 = invoke dereferenceable(16) %"struct.micropather::NodeCost"* @_ZN11micropather8MPVectorINS_8NodeCostEEixEj(%"class.micropather::MPVector.0"* %nodeCostVec32, i32 %56)
          to label %invoke.cont34 unwind label %lpad33

invoke.cont34:                                    ; preds = %for.body
  %cost36 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %call35, i32 0, i32 1
  %57 = load float, float* %cost36, align 8, !tbaa !74
  %cmp37 = fcmp oeq float %57, 0x47EFFFFFE0000000
  br i1 %cmp37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %invoke.cont34
  br label %for.inc

lpad33:                                           ; preds = %for.body
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %exn.slot, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %ehselector.slot, align 4
  br label %ehcleanup94

if.end39:                                         ; preds = %invoke.cont34
  %61 = bitcast %"class.micropather::PathNode"** %child to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #10
  %nodeCostVec40 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  %62 = load i32, i32* %i, align 4, !tbaa !17
  %call43 = invoke dereferenceable(16) %"struct.micropather::NodeCost"* @_ZN11micropather8MPVectorINS_8NodeCostEEixEj(%"class.micropather::MPVector.0"* %nodeCostVec40, i32 %62)
          to label %invoke.cont42 unwind label %lpad41

invoke.cont42:                                    ; preds = %if.end39
  %node44 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %call43, i32 0, i32 0
  %63 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node44, align 8, !tbaa !62
  store %"class.micropather::PathNode"* %63, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %64 = bitcast float* %newCost to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %64) #10
  %65 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %costFromStart45 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %65, i32 0, i32 1
  %66 = load float, float* %costFromStart45, align 8, !tbaa !40
  %nodeCostVec46 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  %67 = load i32, i32* %i, align 4, !tbaa !17
  %call49 = invoke dereferenceable(16) %"struct.micropather::NodeCost"* @_ZN11micropather8MPVectorINS_8NodeCostEEixEj(%"class.micropather::MPVector.0"* %nodeCostVec46, i32 %67)
          to label %invoke.cont48 unwind label %lpad47

invoke.cont48:                                    ; preds = %invoke.cont42
  %cost50 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %call49, i32 0, i32 1
  %68 = load float, float* %cost50, align 8, !tbaa !74
  %add = fadd float %66, %68
  store float %add, float* %newCost, align 4, !tbaa !35
  %69 = bitcast %"class.micropather::PathNode"** %inOpen to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %69) #10
  %70 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %inOpen51 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %70, i32 0, i32 13
  %71 = load i8, i8* %inOpen51, align 8, !tbaa !15, !range !54
  %tobool52 = trunc i8 %71 to i1
  br i1 %tobool52, label %cond.true, label %cond.false

cond.true:                                        ; preds = %invoke.cont48
  %72 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  br label %cond.end

cond.false:                                       ; preds = %invoke.cont48
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %"class.micropather::PathNode"* [ %72, %cond.true ], [ null, %cond.false ]
  store %"class.micropather::PathNode"* %cond, %"class.micropather::PathNode"** %inOpen, align 8, !tbaa !3
  %73 = bitcast %"class.micropather::PathNode"** %inClosed to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %73) #10
  %74 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %inClosed53 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %74, i32 0, i32 14
  %75 = load i8, i8* %inClosed53, align 1, !tbaa !43, !range !54
  %tobool54 = trunc i8 %75 to i1
  br i1 %tobool54, label %cond.true55, label %cond.false56

cond.true55:                                      ; preds = %cond.end
  %76 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  br label %cond.end57

cond.false56:                                     ; preds = %cond.end
  br label %cond.end57

cond.end57:                                       ; preds = %cond.false56, %cond.true55
  %cond58 = phi %"class.micropather::PathNode"* [ %76, %cond.true55 ], [ null, %cond.false56 ]
  store %"class.micropather::PathNode"* %cond58, %"class.micropather::PathNode"** %inClosed, align 8, !tbaa !3
  %77 = bitcast %"class.micropather::PathNode"** %inEither to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %77) #10
  %78 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %inOpen, align 8, !tbaa !3
  %79 = ptrtoint %"class.micropather::PathNode"* %78 to i64
  %80 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %inClosed, align 8, !tbaa !3
  %81 = ptrtoint %"class.micropather::PathNode"* %80 to i64
  %or = or i64 %79, %81
  %82 = inttoptr i64 %or to %"class.micropather::PathNode"*
  store %"class.micropather::PathNode"* %82, %"class.micropather::PathNode"** %inEither, align 8, !tbaa !3
  %83 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %inEither, align 8, !tbaa !3
  %tobool59 = icmp ne %"class.micropather::PathNode"* %83, null
  br i1 %tobool59, label %if.then60, label %if.else78

if.then60:                                        ; preds = %cond.end57
  %84 = load float, float* %newCost, align 4, !tbaa !35
  %85 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %costFromStart61 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %85, i32 0, i32 1
  %86 = load float, float* %costFromStart61, align 8, !tbaa !40
  %cmp62 = fcmp olt float %84, %86
  br i1 %cmp62, label %if.then63, label %if.end77

if.then63:                                        ; preds = %if.then60
  %87 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %88 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %parent = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %88, i32 0, i32 5
  store %"class.micropather::PathNode"* %87, %"class.micropather::PathNode"** %parent, align 8, !tbaa !42
  %89 = load float, float* %newCost, align 4, !tbaa !35
  %90 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %costFromStart64 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %90, i32 0, i32 1
  store float %89, float* %costFromStart64, align 8, !tbaa !40
  %graph65 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 4
  %91 = load %"class.micropather::Graph"*, %"class.micropather::Graph"** %graph65, align 8, !tbaa !47
  %92 = bitcast %"class.micropather::Graph"* %91 to float (%"class.micropather::Graph"*, i8*, i8*)***
  %vtable66 = load float (%"class.micropather::Graph"*, i8*, i8*)**, float (%"class.micropather::Graph"*, i8*, i8*)*** %92, align 8, !tbaa !69
  %vfn67 = getelementptr inbounds float (%"class.micropather::Graph"*, i8*, i8*)*, float (%"class.micropather::Graph"*, i8*, i8*)** %vtable66, i64 2
  %93 = load float (%"class.micropather::Graph"*, i8*, i8*)*, float (%"class.micropather::Graph"*, i8*, i8*)** %vfn67, align 8
  %94 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %state68 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %94, i32 0, i32 0
  %95 = load i8*, i8** %state68, align 8, !tbaa !38
  %96 = load i8*, i8** %endNode.addr, align 8, !tbaa !3
  %call71 = invoke float %93(%"class.micropather::Graph"* %91, i8* %95, i8* %96)
          to label %invoke.cont70 unwind label %lpad69

invoke.cont70:                                    ; preds = %if.then63
  %97 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %estToGoal = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %97, i32 0, i32 2
  store float %call71, float* %estToGoal, align 4, !tbaa !41
  %98 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  invoke void @_ZN11micropather8PathNode13CalcTotalCostEv(%"class.micropather::PathNode"* %98)
          to label %invoke.cont72 unwind label %lpad69

invoke.cont72:                                    ; preds = %invoke.cont70
  %99 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %inOpen, align 8, !tbaa !3
  %tobool73 = icmp ne %"class.micropather::PathNode"* %99, null
  br i1 %tobool73, label %if.then74, label %if.end76

if.then74:                                        ; preds = %invoke.cont72
  %100 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  invoke void @_ZN9OpenQueue6UpdateEPN11micropather8PathNodeE(%class.OpenQueue* %open, %"class.micropather::PathNode"* %100)
          to label %invoke.cont75 unwind label %lpad69

invoke.cont75:                                    ; preds = %if.then74
  br label %if.end76

lpad41:                                           ; preds = %if.end39
  %101 = landingpad { i8*, i32 }
          cleanup
  %102 = extractvalue { i8*, i32 } %101, 0
  store i8* %102, i8** %exn.slot, align 8
  %103 = extractvalue { i8*, i32 } %101, 1
  store i32 %103, i32* %ehselector.slot, align 4
  br label %ehcleanup91

lpad47:                                           ; preds = %invoke.cont42
  %104 = landingpad { i8*, i32 }
          cleanup
  %105 = extractvalue { i8*, i32 } %104, 0
  store i8* %105, i8** %exn.slot, align 8
  %106 = extractvalue { i8*, i32 } %104, 1
  store i32 %106, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad69:                                           ; preds = %invoke.cont88, %invoke.cont85, %if.else78, %if.then74, %invoke.cont70, %if.then63
  %107 = landingpad { i8*, i32 }
          cleanup
  %108 = extractvalue { i8*, i32 } %107, 0
  store i8* %108, i8** %exn.slot, align 8
  %109 = extractvalue { i8*, i32 } %107, 1
  store i32 %109, i32* %ehselector.slot, align 4
  %110 = bitcast %"class.micropather::PathNode"** %inEither to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %110) #10
  %111 = bitcast %"class.micropather::PathNode"** %inClosed to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %111) #10
  %112 = bitcast %"class.micropather::PathNode"** %inOpen to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %112) #10
  br label %ehcleanup

if.end76:                                         ; preds = %invoke.cont75, %invoke.cont72
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then60
  br label %if.end90

if.else78:                                        ; preds = %cond.end57
  %113 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %114 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %parent79 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %114, i32 0, i32 5
  store %"class.micropather::PathNode"* %113, %"class.micropather::PathNode"** %parent79, align 8, !tbaa !42
  %115 = load float, float* %newCost, align 4, !tbaa !35
  %116 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %costFromStart80 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %116, i32 0, i32 1
  store float %115, float* %costFromStart80, align 8, !tbaa !40
  %graph81 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 4
  %117 = load %"class.micropather::Graph"*, %"class.micropather::Graph"** %graph81, align 8, !tbaa !47
  %118 = bitcast %"class.micropather::Graph"* %117 to float (%"class.micropather::Graph"*, i8*, i8*)***
  %vtable82 = load float (%"class.micropather::Graph"*, i8*, i8*)**, float (%"class.micropather::Graph"*, i8*, i8*)*** %118, align 8, !tbaa !69
  %vfn83 = getelementptr inbounds float (%"class.micropather::Graph"*, i8*, i8*)*, float (%"class.micropather::Graph"*, i8*, i8*)** %vtable82, i64 2
  %119 = load float (%"class.micropather::Graph"*, i8*, i8*)*, float (%"class.micropather::Graph"*, i8*, i8*)** %vfn83, align 8
  %120 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %state84 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %120, i32 0, i32 0
  %121 = load i8*, i8** %state84, align 8, !tbaa !38
  %122 = load i8*, i8** %endNode.addr, align 8, !tbaa !3
  %call86 = invoke float %119(%"class.micropather::Graph"* %117, i8* %121, i8* %122)
          to label %invoke.cont85 unwind label %lpad69

invoke.cont85:                                    ; preds = %if.else78
  %123 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %estToGoal87 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %123, i32 0, i32 2
  store float %call86, float* %estToGoal87, align 4, !tbaa !41
  %124 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  invoke void @_ZN11micropather8PathNode13CalcTotalCostEv(%"class.micropather::PathNode"* %124)
          to label %invoke.cont88 unwind label %lpad69

invoke.cont88:                                    ; preds = %invoke.cont85
  %125 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  invoke void @_ZN9OpenQueue4PushEPN11micropather8PathNodeE(%class.OpenQueue* %open, %"class.micropather::PathNode"* %125)
          to label %invoke.cont89 unwind label %lpad69

invoke.cont89:                                    ; preds = %invoke.cont88
  br label %if.end90

if.end90:                                         ; preds = %invoke.cont89, %if.end77
  %126 = bitcast %"class.micropather::PathNode"** %inEither to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #10
  %127 = bitcast %"class.micropather::PathNode"** %inClosed to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127) #10
  %128 = bitcast %"class.micropather::PathNode"** %inOpen to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %128) #10
  %129 = bitcast float* %newCost to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %129) #10
  %130 = bitcast %"class.micropather::PathNode"** %child to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %130) #10
  br label %for.inc

for.inc:                                          ; preds = %if.end90, %if.then38
  %131 = load i32, i32* %i, align 4, !tbaa !17
  %inc92 = add nsw i32 %131, 1
  store i32 %inc92, i32* %i, align 4, !tbaa !17
  br label %for.cond

ehcleanup:                                        ; preds = %lpad69, %lpad47
  %132 = bitcast float* %newCost to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %132) #10
  br label %ehcleanup91

ehcleanup91:                                      ; preds = %ehcleanup, %lpad41
  %133 = bitcast %"class.micropather::PathNode"** %child to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %133) #10
  br label %ehcleanup94

ehcleanup94:                                      ; preds = %ehcleanup91, %lpad33
  %134 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %134) #10
  br label %ehcleanup99

for.end:                                          ; preds = %for.cond.cleanup
  br label %if.end95

if.end95:                                         ; preds = %for.end
  store i32 0, i32* %cleanup.dest.slot, align 4
  br label %cleanup96

cleanup96:                                        ; preds = %if.end95, %invoke.cont27
  %135 = bitcast %"class.micropather::PathNode"** %node to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %135) #10
  %cleanup.dest97 = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest97, label %cleanup106 [
    i32 0, label %cleanup.cont98
  ]

cleanup.cont98:                                   ; preds = %cleanup96
  br label %while.cond

ehcleanup99:                                      ; preds = %ehcleanup94, %lpad22
  %136 = bitcast %"class.micropather::PathNode"** %node to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %136) #10
  br label %ehcleanup107

while.end:                                        ; preds = %invoke.cont20
  %pathCache100 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  %137 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %pathCache100, align 8, !tbaa !53
  %tobool101 = icmp ne %"class.micropather::PathCache"* %137, null
  br i1 %tobool101, label %if.then102, label %if.end105

if.then102:                                       ; preds = %while.end
  %pathCache103 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 6
  %138 = load %"class.micropather::PathCache"*, %"class.micropather::PathCache"** %pathCache103, align 8, !tbaa !53
  %139 = load i8*, i8** %endNode.addr, align 8, !tbaa !3
  invoke void @_ZN11micropather9PathCache13AddNoSolutionEPvPS1_i(%"class.micropather::PathCache"* %138, i8* %139, i8** %startNode.addr, i32 1)
          to label %invoke.cont104 unwind label %lpad12

invoke.cont104:                                   ; preds = %if.then102
  br label %if.end105

if.end105:                                        ; preds = %invoke.cont104, %while.end
  store i32 1, i32* %retval, align 4
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup106

cleanup106:                                       ; preds = %if.end105, %cleanup96
  %140 = bitcast %"class.micropather::PathNode"** %newPathNode to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %140) #10
  invoke void @_ZN9ClosedSetD1Ev(%class.ClosedSet* %closed)
          to label %invoke.cont109 unwind label %lpad

ehcleanup107:                                     ; preds = %ehcleanup99, %lpad12
  %141 = bitcast %"class.micropather::PathNode"** %newPathNode to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %141) #10
  invoke void @_ZN9ClosedSetD1Ev(%class.ClosedSet* %closed)
          to label %invoke.cont111 unwind label %terminate.lpad

invoke.cont109:                                   ; preds = %cleanup106
  %142 = bitcast %class.ClosedSet* %closed to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %142) #10
  call void @_ZN9OpenQueueD1Ev(%class.OpenQueue* %open)
  %143 = bitcast %class.OpenQueue* %open to i8*
  call void @llvm.lifetime.end.p0i8(i64 112, i8* %143) #10
  br label %return

invoke.cont111:                                   ; preds = %ehcleanup107
  br label %ehcleanup113

ehcleanup113:                                     ; preds = %invoke.cont111, %lpad
  %144 = bitcast %class.ClosedSet* %closed to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %144) #10
  invoke void @_ZN9OpenQueueD1Ev(%class.OpenQueue* %open)
          to label %invoke.cont116 unwind label %terminate.lpad

invoke.cont116:                                   ; preds = %ehcleanup113
  %145 = bitcast %class.OpenQueue* %open to i8*
  call void @llvm.lifetime.end.p0i8(i64 112, i8* %145) #10
  br label %eh.resume

return:                                           ; preds = %invoke.cont109, %cleanup, %if.then
  %146 = load i32, i32* %retval, align 4
  ret i32 %146

eh.resume:                                        ; preds = %invoke.cont116
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val119 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val119

terminate.lpad:                                   ; preds = %ehcleanup113, %ehcleanup107
  %147 = landingpad { i8*, i32 }
          catch i8* null
  %148 = extractvalue { i8*, i32 } %147, 0
  call void @__clang_call_terminate(i8* %148) #15
  unreachable

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN9OpenQueueC1EPN11micropather5GraphE(%class.OpenQueue* %this, %"class.micropather::Graph"* %_graph) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %class.OpenQueue*, align 8
  %_graph.addr = alloca %"class.micropather::Graph"*, align 8
  store %class.OpenQueue* %this, %class.OpenQueue** %this.addr, align 8, !tbaa !3
  store %"class.micropather::Graph"* %_graph, %"class.micropather::Graph"** %_graph.addr, align 8, !tbaa !3
  %this1 = load %class.OpenQueue*, %class.OpenQueue** %this.addr, align 8
  %0 = load %"class.micropather::Graph"*, %"class.micropather::Graph"** %_graph.addr, align 8, !tbaa !3
  call void @_ZN9OpenQueueC2EPN11micropather5GraphE(%class.OpenQueue* %this1, %"class.micropather::Graph"* %0)
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN9ClosedSetC1EPN11micropather5GraphE(%class.ClosedSet* %this, %"class.micropather::Graph"* %_graph) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %class.ClosedSet*, align 8
  %_graph.addr = alloca %"class.micropather::Graph"*, align 8
  store %class.ClosedSet* %this, %class.ClosedSet** %this.addr, align 8, !tbaa !3
  store %"class.micropather::Graph"* %_graph, %"class.micropather::Graph"** %_graph.addr, align 8, !tbaa !3
  %this1 = load %class.ClosedSet*, %class.ClosedSet** %this.addr, align 8
  %0 = load %"class.micropather::Graph"*, %"class.micropather::Graph"** %_graph.addr, align 8, !tbaa !3
  call void @_ZN9ClosedSetC2EPN11micropather5GraphE(%class.ClosedSet* %this1, %"class.micropather::Graph"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr zeroext i1 @_ZN9OpenQueue5EmptyEv(%class.OpenQueue* %this) #2 align 2 {
entry:
  %this.addr = alloca %class.OpenQueue*, align 8
  store %class.OpenQueue* %this, %class.OpenQueue** %this.addr, align 8, !tbaa !3
  %this1 = load %class.OpenQueue*, %class.OpenQueue** %this.addr, align 8
  %sentinel = getelementptr inbounds %class.OpenQueue, %class.OpenQueue* %this1, i32 0, i32 0
  %0 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %sentinel, align 8, !tbaa !7
  %next = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %0, i32 0, i32 11
  %1 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %next, align 8, !tbaa !9
  %sentinel2 = getelementptr inbounds %class.OpenQueue, %class.OpenQueue* %this1, i32 0, i32 0
  %2 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %sentinel2, align 8, !tbaa !7
  %cmp = icmp eq %"class.micropather::PathNode"* %1, %2
  ret i1 %cmp
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN9ClosedSet3AddEPN11micropather8PathNodeE(%class.ClosedSet* %this, %"class.micropather::PathNode"* %pNode) #2 align 2 {
entry:
  %this.addr = alloca %class.ClosedSet*, align 8
  %pNode.addr = alloca %"class.micropather::PathNode"*, align 8
  store %class.ClosedSet* %this, %class.ClosedSet** %this.addr, align 8, !tbaa !3
  store %"class.micropather::PathNode"* %pNode, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  %this1 = load %class.ClosedSet*, %class.ClosedSet** %this.addr, align 8
  %0 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode.addr, align 8, !tbaa !3
  %inClosed = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %0, i32 0, i32 14
  store i8 1, i8* %inClosed, align 1, !tbaa !43
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN9ClosedSetD1Ev(%class.ClosedSet* %this) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %class.ClosedSet*, align 8
  store %class.ClosedSet* %this, %class.ClosedSet** %this.addr, align 8, !tbaa !3
  %this1 = load %class.ClosedSet*, %class.ClosedSet** %this.addr, align 8
  call void @_ZN9ClosedSetD2Ev(%class.ClosedSet* %this1)
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN9OpenQueueD1Ev(%class.OpenQueue* %this) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %class.OpenQueue*, align 8
  store %class.OpenQueue* %this, %class.OpenQueue** %this.addr, align 8, !tbaa !3
  %this1 = load %class.OpenQueue*, %class.OpenQueue** %this.addr, align 8
  call void @_ZN9OpenQueueD2Ev(%class.OpenQueue* %this1)
  ret void
}

; Function Attrs: ssp uwtable
define i32 @_ZN11micropather11MicroPather18SolveForNearStatesEPvPNS_8MPVectorINS_9StateCostEEEf(%"class.micropather::MicroPather"* %this, i8* %startState, %"class.micropather::MPVector"* %near, float %maxCost) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.micropather::MicroPather"*, align 8
  %startState.addr = alloca i8*, align 8
  %near.addr = alloca %"class.micropather::MPVector"*, align 8
  %maxCost.addr = alloca float, align 4
  %open = alloca %class.OpenQueue, align 8
  %closed = alloca %class.ClosedSet, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %closedSentinel = alloca %"class.micropather::PathNode", align 8
  %newPathNode = alloca %"class.micropather::PathNode"*, align 8
  %node = alloca %"class.micropather::PathNode"*, align 8
  %cleanup.dest.slot = alloca i32
  %i = alloca i32, align 4
  %newCost = alloca float, align 4
  %inOpen = alloca %"class.micropather::PathNode"*, align 8
  %inClosed = alloca %"class.micropather::PathNode"*, align 8
  %inEither = alloca %"class.micropather::PathNode"*, align 8
  %child = alloca %"class.micropather::PathNode"*, align 8
  %pNode = alloca %"class.micropather::PathNode"*, align 8
  %sc = alloca %"struct.micropather::StateCost", align 8
  store %"class.micropather::MicroPather"* %this, %"class.micropather::MicroPather"** %this.addr, align 8, !tbaa !3
  store i8* %startState, i8** %startState.addr, align 8, !tbaa !3
  store %"class.micropather::MPVector"* %near, %"class.micropather::MPVector"** %near.addr, align 8, !tbaa !3
  store float %maxCost, float* %maxCost.addr, align 4, !tbaa !35
  %this1 = load %"class.micropather::MicroPather"*, %"class.micropather::MicroPather"** %this.addr, align 8
  %frame = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 5
  %0 = load i32, i32* %frame, align 8, !tbaa !52
  %inc = add i32 %0, 1
  store i32 %inc, i32* %frame, align 8, !tbaa !52
  %1 = bitcast %class.OpenQueue* %open to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* %1) #10
  %graph = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 4
  %2 = load %"class.micropather::Graph"*, %"class.micropather::Graph"** %graph, align 8, !tbaa !47
  call void @_ZN9OpenQueueC1EPN11micropather5GraphE(%class.OpenQueue* %open, %"class.micropather::Graph"* %2)
  %3 = bitcast %class.ClosedSet* %closed to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #10
  %graph2 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 4
  %4 = load %"class.micropather::Graph"*, %"class.micropather::Graph"** %graph2, align 8, !tbaa !47
  invoke void @_ZN9ClosedSetC1EPN11micropather5GraphE(%class.ClosedSet* %closed, %"class.micropather::Graph"* %4)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %nodeCostVec = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  invoke void @_ZN11micropather8MPVectorINS_8NodeCostEE6resizeEj(%"class.micropather::MPVector.0"* %nodeCostVec, i32 0)
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %invoke.cont
  %stateCostVec = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 1
  invoke void @_ZN11micropather8MPVectorINS_9StateCostEE6resizeEj(%"class.micropather::MPVector"* %stateCostVec, i32 0)
          to label %invoke.cont5 unwind label %lpad3

invoke.cont5:                                     ; preds = %invoke.cont4
  %5 = bitcast %"class.micropather::PathNode"* %closedSentinel to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* %5) #10
  invoke void @_ZN11micropather8PathNode5ClearEv(%"class.micropather::PathNode"* %closedSentinel)
          to label %invoke.cont7 unwind label %lpad6

invoke.cont7:                                     ; preds = %invoke.cont5
  %frame8 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 5
  %6 = load i32, i32* %frame8, align 8, !tbaa !52
  invoke void @_ZN11micropather8PathNode4InitEjPvffPS0_(%"class.micropather::PathNode"* %closedSentinel, i32 %6, i8* null, float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000, %"class.micropather::PathNode"* null)
          to label %invoke.cont9 unwind label %lpad6

invoke.cont9:                                     ; preds = %invoke.cont7
  %prev = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %closedSentinel, i32 0, i32 12
  store %"class.micropather::PathNode"* %closedSentinel, %"class.micropather::PathNode"** %prev, align 8, !tbaa !16
  %next = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %closedSentinel, i32 0, i32 11
  store %"class.micropather::PathNode"* %closedSentinel, %"class.micropather::PathNode"** %next, align 8, !tbaa !9
  %7 = bitcast %"class.micropather::PathNode"** %newPathNode to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  %pathNodePool = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 0
  %frame10 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 5
  %8 = load i32, i32* %frame10, align 8, !tbaa !52
  %9 = load i8*, i8** %startState.addr, align 8, !tbaa !3
  %call = invoke %"class.micropather::PathNode"* @_ZN11micropather12PathNodePool11GetPathNodeEjPvffPNS_8PathNodeE(%"class.micropather::PathNodePool"* %pathNodePool, i32 %8, i8* %9, float 0.000000e+00, float 0.000000e+00, %"class.micropather::PathNode"* null)
          to label %invoke.cont12 unwind label %lpad11

invoke.cont12:                                    ; preds = %invoke.cont9
  store %"class.micropather::PathNode"* %call, %"class.micropather::PathNode"** %newPathNode, align 8, !tbaa !3
  %10 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %newPathNode, align 8, !tbaa !3
  invoke void @_ZN9OpenQueue4PushEPN11micropather8PathNodeE(%class.OpenQueue* %open, %"class.micropather::PathNode"* %10)
          to label %invoke.cont13 unwind label %lpad11

invoke.cont13:                                    ; preds = %invoke.cont12
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont89, %cleanup87, %invoke.cont13
  %call15 = invoke zeroext i1 @_ZN9OpenQueue5EmptyEv(%class.OpenQueue* %open)
          to label %invoke.cont14 unwind label %lpad11

invoke.cont14:                                    ; preds = %while.cond
  %lnot = xor i1 %call15, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %invoke.cont14
  %11 = bitcast %"class.micropather::PathNode"** %node to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  %call18 = invoke %"class.micropather::PathNode"* @_ZN9OpenQueue3PopEv(%class.OpenQueue* %open)
          to label %invoke.cont17 unwind label %lpad16

invoke.cont17:                                    ; preds = %while.body
  store %"class.micropather::PathNode"* %call18, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %12 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  invoke void @_ZN9ClosedSet3AddEPN11micropather8PathNodeE(%class.ClosedSet* %closed, %"class.micropather::PathNode"* %12)
          to label %invoke.cont19 unwind label %lpad16

invoke.cont19:                                    ; preds = %invoke.cont17
  %13 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  invoke void @_ZN11micropather8PathNode9AddBeforeEPS0_(%"class.micropather::PathNode"* %closedSentinel, %"class.micropather::PathNode"* %13)
          to label %invoke.cont20 unwind label %lpad16

invoke.cont20:                                    ; preds = %invoke.cont19
  %14 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %totalCost = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %14, i32 0, i32 3
  %15 = load float, float* %totalCost, align 8, !tbaa !14
  %16 = load float, float* %maxCost.addr, align 4, !tbaa !35
  %cmp = fcmp ogt float %15, %16
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont20
  store i32 2, i32* %cleanup.dest.slot, align 4
  br label %cleanup87

lpad:                                             ; preds = %for.end111, %entry
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %exn.slot, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %ehselector.slot, align 4
  br label %ehcleanup121

lpad3:                                            ; preds = %invoke.cont4, %invoke.cont
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %exn.slot, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %ehselector.slot, align 4
  br label %ehcleanup118

lpad6:                                            ; preds = %invoke.cont7, %invoke.cont5
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %exn.slot, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %ehselector.slot, align 4
  br label %ehcleanup115

lpad11:                                           ; preds = %while.end, %while.cond, %invoke.cont12, %invoke.cont9
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %exn.slot, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %ehselector.slot, align 4
  br label %ehcleanup113

lpad16:                                           ; preds = %if.end, %invoke.cont19, %invoke.cont17, %while.body
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %exn.slot, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %ehselector.slot, align 4
  br label %ehcleanup90

if.end:                                           ; preds = %invoke.cont20
  %32 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %nodeCostVec21 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  invoke void @_ZN11micropather11MicroPather16GetNodeNeighborsEPNS_8PathNodeEPNS_8MPVectorINS_8NodeCostEEE(%"class.micropather::MicroPather"* %this1, %"class.micropather::PathNode"* %32, %"class.micropather::MPVector.0"* %nodeCostVec21)
          to label %invoke.cont22 unwind label %lpad16

invoke.cont22:                                    ; preds = %if.end
  %33 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #10
  store i32 0, i32* %i, align 4, !tbaa !17
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %invoke.cont22
  %34 = load i32, i32* %i, align 4, !tbaa !17
  %35 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %numAdjacent = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %35, i32 0, i32 7
  %36 = load i32, i32* %numAdjacent, align 4, !tbaa !44
  %cmp23 = icmp slt i32 %34, %36
  br i1 %cmp23, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 4, i32* %cleanup.dest.slot, align 4
  %37 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %37) #10
  br label %for.end

for.body:                                         ; preds = %for.cond
  %38 = bitcast float* %newCost to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #10
  %39 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %costFromStart = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %39, i32 0, i32 1
  %40 = load float, float* %costFromStart, align 8, !tbaa !40
  %nodeCostVec24 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  %41 = load i32, i32* %i, align 4, !tbaa !17
  %call27 = invoke dereferenceable(16) %"struct.micropather::NodeCost"* @_ZN11micropather8MPVectorINS_8NodeCostEEixEj(%"class.micropather::MPVector.0"* %nodeCostVec24, i32 %41)
          to label %invoke.cont26 unwind label %lpad25

invoke.cont26:                                    ; preds = %for.body
  %cost = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %call27, i32 0, i32 1
  %42 = load float, float* %cost, align 8, !tbaa !74
  %add = fadd float %40, %42
  store float %add, float* %newCost, align 4, !tbaa !35
  %43 = bitcast %"class.micropather::PathNode"** %inOpen to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #10
  %nodeCostVec28 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  %44 = load i32, i32* %i, align 4, !tbaa !17
  %call31 = invoke dereferenceable(16) %"struct.micropather::NodeCost"* @_ZN11micropather8MPVectorINS_8NodeCostEEixEj(%"class.micropather::MPVector.0"* %nodeCostVec28, i32 %44)
          to label %invoke.cont30 unwind label %lpad29

invoke.cont30:                                    ; preds = %invoke.cont26
  %node32 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %call31, i32 0, i32 0
  %45 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node32, align 8, !tbaa !62
  %inOpen33 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %45, i32 0, i32 13
  %46 = load i8, i8* %inOpen33, align 8, !tbaa !15, !range !54
  %tobool = trunc i8 %46 to i1
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %invoke.cont30
  %nodeCostVec34 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  %47 = load i32, i32* %i, align 4, !tbaa !17
  %call36 = invoke dereferenceable(16) %"struct.micropather::NodeCost"* @_ZN11micropather8MPVectorINS_8NodeCostEEixEj(%"class.micropather::MPVector.0"* %nodeCostVec34, i32 %47)
          to label %invoke.cont35 unwind label %lpad29

invoke.cont35:                                    ; preds = %cond.true
  %node37 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %call36, i32 0, i32 0
  %48 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node37, align 8, !tbaa !62
  br label %cond.end

cond.false:                                       ; preds = %invoke.cont30
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %invoke.cont35
  %cond = phi %"class.micropather::PathNode"* [ %48, %invoke.cont35 ], [ null, %cond.false ]
  store %"class.micropather::PathNode"* %cond, %"class.micropather::PathNode"** %inOpen, align 8, !tbaa !3
  %49 = bitcast %"class.micropather::PathNode"** %inClosed to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #10
  %nodeCostVec38 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  %50 = load i32, i32* %i, align 4, !tbaa !17
  %call41 = invoke dereferenceable(16) %"struct.micropather::NodeCost"* @_ZN11micropather8MPVectorINS_8NodeCostEEixEj(%"class.micropather::MPVector.0"* %nodeCostVec38, i32 %50)
          to label %invoke.cont40 unwind label %lpad39

invoke.cont40:                                    ; preds = %cond.end
  %node42 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %call41, i32 0, i32 0
  %51 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node42, align 8, !tbaa !62
  %inClosed43 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %51, i32 0, i32 14
  %52 = load i8, i8* %inClosed43, align 1, !tbaa !43, !range !54
  %tobool44 = trunc i8 %52 to i1
  br i1 %tobool44, label %cond.true45, label %cond.false50

cond.true45:                                      ; preds = %invoke.cont40
  %nodeCostVec46 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  %53 = load i32, i32* %i, align 4, !tbaa !17
  %call48 = invoke dereferenceable(16) %"struct.micropather::NodeCost"* @_ZN11micropather8MPVectorINS_8NodeCostEEixEj(%"class.micropather::MPVector.0"* %nodeCostVec46, i32 %53)
          to label %invoke.cont47 unwind label %lpad39

invoke.cont47:                                    ; preds = %cond.true45
  %node49 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %call48, i32 0, i32 0
  %54 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node49, align 8, !tbaa !62
  br label %cond.end51

cond.false50:                                     ; preds = %invoke.cont40
  br label %cond.end51

cond.end51:                                       ; preds = %cond.false50, %invoke.cont47
  %cond52 = phi %"class.micropather::PathNode"* [ %54, %invoke.cont47 ], [ null, %cond.false50 ]
  store %"class.micropather::PathNode"* %cond52, %"class.micropather::PathNode"** %inClosed, align 8, !tbaa !3
  %55 = bitcast %"class.micropather::PathNode"** %inEither to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #10
  %56 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %inOpen, align 8, !tbaa !3
  %tobool53 = icmp ne %"class.micropather::PathNode"* %56, null
  br i1 %tobool53, label %cond.true54, label %cond.false55

cond.true54:                                      ; preds = %cond.end51
  %57 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %inOpen, align 8, !tbaa !3
  br label %cond.end56

cond.false55:                                     ; preds = %cond.end51
  %58 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %inClosed, align 8, !tbaa !3
  br label %cond.end56

cond.end56:                                       ; preds = %cond.false55, %cond.true54
  %cond57 = phi %"class.micropather::PathNode"* [ %57, %cond.true54 ], [ %58, %cond.false55 ]
  store %"class.micropather::PathNode"* %cond57, %"class.micropather::PathNode"** %inEither, align 8, !tbaa !3
  %59 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %inEither, align 8, !tbaa !3
  %tobool58 = icmp ne %"class.micropather::PathNode"* %59, null
  br i1 %tobool58, label %land.lhs.true, label %if.end62

land.lhs.true:                                    ; preds = %cond.end56
  %60 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %inEither, align 8, !tbaa !3
  %costFromStart59 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %60, i32 0, i32 1
  %61 = load float, float* %costFromStart59, align 8, !tbaa !40
  %62 = load float, float* %newCost, align 4, !tbaa !35
  %cmp60 = fcmp ole float %61, %62
  br i1 %cmp60, label %if.then61, label %if.end62

if.then61:                                        ; preds = %land.lhs.true
  store i32 6, i32* %cleanup.dest.slot, align 4
  br label %cleanup

lpad25:                                           ; preds = %for.body
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %exn.slot, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %ehselector.slot, align 4
  br label %ehcleanup83

lpad29:                                           ; preds = %cond.true, %invoke.cont26
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %exn.slot, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %ehselector.slot, align 4
  br label %ehcleanup81

lpad39:                                           ; preds = %cond.true45, %cond.end
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %exn.slot, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %ehselector.slot, align 4
  br label %ehcleanup

if.end62:                                         ; preds = %land.lhs.true, %cond.end56
  %72 = bitcast %"class.micropather::PathNode"** %child to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %72) #10
  %nodeCostVec63 = getelementptr inbounds %"class.micropather::MicroPather", %"class.micropather::MicroPather"* %this1, i32 0, i32 2
  %73 = load i32, i32* %i, align 4, !tbaa !17
  %call66 = invoke dereferenceable(16) %"struct.micropather::NodeCost"* @_ZN11micropather8MPVectorINS_8NodeCostEEixEj(%"class.micropather::MPVector.0"* %nodeCostVec63, i32 %73)
          to label %invoke.cont65 unwind label %lpad64

invoke.cont65:                                    ; preds = %if.end62
  %node67 = getelementptr inbounds %"struct.micropather::NodeCost", %"struct.micropather::NodeCost"* %call66, i32 0, i32 0
  %74 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node67, align 8, !tbaa !62
  store %"class.micropather::PathNode"* %74, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %75 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %node, align 8, !tbaa !3
  %76 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %parent = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %76, i32 0, i32 5
  store %"class.micropather::PathNode"* %75, %"class.micropather::PathNode"** %parent, align 8, !tbaa !42
  %77 = load float, float* %newCost, align 4, !tbaa !35
  %78 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %costFromStart68 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %78, i32 0, i32 1
  store float %77, float* %costFromStart68, align 8, !tbaa !40
  %79 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %estToGoal = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %79, i32 0, i32 2
  store float 0.000000e+00, float* %estToGoal, align 4, !tbaa !41
  %80 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %costFromStart69 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %80, i32 0, i32 1
  %81 = load float, float* %costFromStart69, align 8, !tbaa !40
  %82 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  %totalCost70 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %82, i32 0, i32 3
  store float %81, float* %totalCost70, align 8, !tbaa !14
  %83 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %inOpen, align 8, !tbaa !3
  %tobool71 = icmp ne %"class.micropather::PathNode"* %83, null
  br i1 %tobool71, label %if.then72, label %if.else

if.then72:                                        ; preds = %invoke.cont65
  %84 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %inOpen, align 8, !tbaa !3
  invoke void @_ZN9OpenQueue6UpdateEPN11micropather8PathNodeE(%class.OpenQueue* %open, %"class.micropather::PathNode"* %84)
          to label %invoke.cont73 unwind label %lpad64

invoke.cont73:                                    ; preds = %if.then72
  br label %if.end78

lpad64:                                           ; preds = %if.then75, %if.then72, %if.end62
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %exn.slot, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %ehselector.slot, align 4
  %88 = bitcast %"class.micropather::PathNode"** %child to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #10
  %89 = bitcast %"class.micropather::PathNode"** %inEither to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #10
  br label %ehcleanup

if.else:                                          ; preds = %invoke.cont65
  %90 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %inClosed, align 8, !tbaa !3
  %tobool74 = icmp ne %"class.micropather::PathNode"* %90, null
  br i1 %tobool74, label %if.end77, label %if.then75

if.then75:                                        ; preds = %if.else
  %91 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %child, align 8, !tbaa !3
  invoke void @_ZN9OpenQueue4PushEPN11micropather8PathNodeE(%class.OpenQueue* %open, %"class.micropather::PathNode"* %91)
          to label %invoke.cont76 unwind label %lpad64

invoke.cont76:                                    ; preds = %if.then75
  br label %if.end77

if.end77:                                         ; preds = %invoke.cont76, %if.else
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %invoke.cont73
  %92 = bitcast %"class.micropather::PathNode"** %child to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %92) #10
  store i32 0, i32* %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end78, %if.then61
  %93 = bitcast %"class.micropather::PathNode"** %inEither to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %93) #10
  %94 = bitcast %"class.micropather::PathNode"** %inClosed to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94) #10
  %95 = bitcast %"class.micropather::PathNode"** %inOpen to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95) #10
  %96 = bitcast float* %newCost to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %96) #10
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 6, label %for.inc
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont, %cleanup
  %97 = load i32, i32* %i, align 4, !tbaa !17
  %inc84 = add nsw i32 %97, 1
  store i32 %inc84, i32* %i, align 4, !tbaa !17
  br label %for.cond

ehcleanup:                                        ; preds = %lpad64, %lpad39
  %98 = bitcast %"class.micropather::PathNode"** %inClosed to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #10
  br label %ehcleanup81

ehcleanup81:                                      ; preds = %ehcleanup, %lpad29
  %99 = bitcast %"class.micropather::PathNode"** %inOpen to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #10
  br label %ehcleanup83

ehcleanup83:                                      ; preds = %ehcleanup81, %lpad25
  %100 = bitcast float* %newCost to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %100) #10
  %101 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %101) #10
  br label %ehcleanup90

for.end:                                          ; preds = %for.cond.cleanup
  store i32 0, i32* %cleanup.dest.slot, align 4
  br label %cleanup87

cleanup87:                                        ; preds = %for.end, %if.then
  %102 = bitcast %"class.micropather::PathNode"** %node to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #10
  %cleanup.dest88 = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest88, label %unreachable [
    i32 0, label %cleanup.cont89
    i32 2, label %while.cond
  ]

cleanup.cont89:                                   ; preds = %cleanup87
  br label %while.cond

ehcleanup90:                                      ; preds = %ehcleanup83, %lpad16
  %103 = bitcast %"class.micropather::PathNode"** %node to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #10
  br label %ehcleanup113

while.end:                                        ; preds = %invoke.cont14
  %104 = load %"class.micropather::MPVector"*, %"class.micropather::MPVector"** %near.addr, align 8, !tbaa !3
  invoke void @_ZN11micropather8MPVectorINS_9StateCostEE5clearEv(%"class.micropather::MPVector"* %104)
          to label %invoke.cont91 unwind label %lpad11

invoke.cont91:                                    ; preds = %while.end
  %105 = bitcast %"class.micropather::PathNode"** %pNode to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %105) #10
  %next92 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %closedSentinel, i32 0, i32 11
  %106 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %next92, align 8, !tbaa !9
  store %"class.micropather::PathNode"* %106, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc107, %invoke.cont91
  %107 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  %cmp94 = icmp ne %"class.micropather::PathNode"* %107, %closedSentinel
  br i1 %cmp94, label %for.body96, label %for.cond.cleanup95

for.cond.cleanup95:                               ; preds = %for.cond93
  store i32 7, i32* %cleanup.dest.slot, align 4
  %108 = bitcast %"class.micropather::PathNode"** %pNode to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %108) #10
  br label %for.end111

for.body96:                                       ; preds = %for.cond93
  %109 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  %totalCost97 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %109, i32 0, i32 3
  %110 = load float, float* %totalCost97, align 8, !tbaa !14
  %111 = load float, float* %maxCost.addr, align 4, !tbaa !35
  %cmp98 = fcmp ole float %110, %111
  br i1 %cmp98, label %if.then99, label %if.end106

if.then99:                                        ; preds = %for.body96
  %112 = bitcast %"struct.micropather::StateCost"* %sc to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %112) #10
  %113 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  %totalCost100 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %113, i32 0, i32 3
  %114 = load float, float* %totalCost100, align 8, !tbaa !14
  %cost101 = getelementptr inbounds %"struct.micropather::StateCost", %"struct.micropather::StateCost"* %sc, i32 0, i32 1
  store float %114, float* %cost101, align 8, !tbaa !73
  %115 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  %state = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %115, i32 0, i32 0
  %116 = load i8*, i8** %state, align 8, !tbaa !38
  %state102 = getelementptr inbounds %"struct.micropather::StateCost", %"struct.micropather::StateCost"* %sc, i32 0, i32 0
  store i8* %116, i8** %state102, align 8, !tbaa !71
  %117 = load %"class.micropather::MPVector"*, %"class.micropather::MPVector"** %near.addr, align 8, !tbaa !3
  invoke void @_ZN11micropather8MPVectorINS_9StateCostEE9push_backERKS1_(%"class.micropather::MPVector"* %117, %"struct.micropather::StateCost"* dereferenceable(16) %sc)
          to label %invoke.cont104 unwind label %lpad103

invoke.cont104:                                   ; preds = %if.then99
  %118 = bitcast %"struct.micropather::StateCost"* %sc to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %118) #10
  br label %if.end106

lpad103:                                          ; preds = %if.then99
  %119 = landingpad { i8*, i32 }
          cleanup
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %exn.slot, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %ehselector.slot, align 4
  %122 = bitcast %"struct.micropather::StateCost"* %sc to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %122) #10
  %123 = bitcast %"class.micropather::PathNode"** %pNode to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #10
  br label %ehcleanup113

if.end106:                                        ; preds = %invoke.cont104, %for.body96
  br label %for.inc107

for.inc107:                                       ; preds = %if.end106
  %124 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  %next108 = getelementptr inbounds %"class.micropather::PathNode", %"class.micropather::PathNode"* %124, i32 0, i32 11
  %125 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %next108, align 8, !tbaa !9
  store %"class.micropather::PathNode"* %125, %"class.micropather::PathNode"** %pNode, align 8, !tbaa !3
  br label %for.cond93

for.end111:                                       ; preds = %for.cond.cleanup95
  store i32 1, i32* %cleanup.dest.slot, align 4
  %126 = bitcast %"class.micropather::PathNode"** %newPathNode to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #10
  %127 = bitcast %"class.micropather::PathNode"* %closedSentinel to i8*
  call void @llvm.lifetime.end.p0i8(i64 88, i8* %127) #10
  invoke void @_ZN9ClosedSetD1Ev(%class.ClosedSet* %closed)
          to label %invoke.cont117 unwind label %lpad

ehcleanup113:                                     ; preds = %lpad103, %ehcleanup90, %lpad11
  %128 = bitcast %"class.micropather::PathNode"** %newPathNode to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %128) #10
  br label %ehcleanup115

ehcleanup115:                                     ; preds = %ehcleanup113, %lpad6
  %129 = bitcast %"class.micropather::PathNode"* %closedSentinel to i8*
  call void @llvm.lifetime.end.p0i8(i64 88, i8* %129) #10
  br label %ehcleanup118

invoke.cont117:                                   ; preds = %for.end111
  %130 = bitcast %class.ClosedSet* %closed to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %130) #10
  call void @_ZN9OpenQueueD1Ev(%class.OpenQueue* %open)
  %131 = bitcast %class.OpenQueue* %open to i8*
  call void @llvm.lifetime.end.p0i8(i64 112, i8* %131) #10
  ret i32 0

ehcleanup118:                                     ; preds = %ehcleanup115, %lpad3
  invoke void @_ZN9ClosedSetD1Ev(%class.ClosedSet* %closed)
          to label %invoke.cont119 unwind label %terminate.lpad

invoke.cont119:                                   ; preds = %ehcleanup118
  br label %ehcleanup121

ehcleanup121:                                     ; preds = %invoke.cont119, %lpad
  %132 = bitcast %class.ClosedSet* %closed to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %132) #10
  invoke void @_ZN9OpenQueueD1Ev(%class.OpenQueue* %open)
          to label %invoke.cont124 unwind label %terminate.lpad

invoke.cont124:                                   ; preds = %ehcleanup121
  %133 = bitcast %class.OpenQueue* %open to i8*
  call void @llvm.lifetime.end.p0i8(i64 112, i8* %133) #10
  br label %eh.resume

eh.resume:                                        ; preds = %invoke.cont124
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val127 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val127

terminate.lpad:                                   ; preds = %ehcleanup121, %ehcleanup118
  %134 = landingpad { i8*, i32 }
          catch i8* null
  %135 = extractvalue { i8*, i32 } %134, 0
  call void @__clang_call_terminate(i8* %135) #15
  unreachable

unreachable:                                      ; preds = %cleanup87, %cleanup
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_9StateCostEE5clearEv(%"class.micropather::MPVector"* %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector"*, align 8
  store %"class.micropather::MPVector"* %this, %"class.micropather::MPVector"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector"*, %"class.micropather::MPVector"** %this.addr, align 8
  %m_size = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 1
  store i32 0, i32* %m_size, align 4, !tbaa !82
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_9StateCostEE9push_backERKS1_(%"class.micropather::MPVector"* %this, %"struct.micropather::StateCost"* dereferenceable(16) %t) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector"*, align 8
  %t.addr = alloca %"struct.micropather::StateCost"*, align 8
  store %"class.micropather::MPVector"* %this, %"class.micropather::MPVector"** %this.addr, align 8, !tbaa !3
  store %"struct.micropather::StateCost"* %t, %"struct.micropather::StateCost"** %t.addr, align 8, !tbaa !61
  %this1 = load %"class.micropather::MPVector"*, %"class.micropather::MPVector"** %this.addr, align 8
  %m_size = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 1
  %0 = load i32, i32* %m_size, align 4, !tbaa !82
  %add = add i32 %0, 1
  call void @_ZN11micropather8MPVectorINS_9StateCostEE8capacityEj(%"class.micropather::MPVector"* %this1, i32 %add)
  %1 = load %"struct.micropather::StateCost"*, %"struct.micropather::StateCost"** %t.addr, align 8
  %m_buf = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 2
  %2 = load %"struct.micropather::StateCost"*, %"struct.micropather::StateCost"** %m_buf, align 8, !tbaa !83
  %m_size2 = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 1
  %3 = load i32, i32* %m_size2, align 4, !tbaa !82
  %inc = add i32 %3, 1
  store i32 %inc, i32* %m_size2, align 4, !tbaa !82
  %idxprom = zext i32 %3 to i64
  %arrayidx = getelementptr inbounds %"struct.micropather::StateCost", %"struct.micropather::StateCost"* %2, i64 %idxprom
  %4 = bitcast %"struct.micropather::StateCost"* %arrayidx to i8*
  %5 = bitcast %"struct.micropather::StateCost"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 16, i32 8, i1 false), !tbaa.struct !34
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN9OpenQueueC2EPN11micropather5GraphE(%class.OpenQueue* %this, %"class.micropather::Graph"* %_graph) unnamed_addr #0 align 2 {
entry:
  %this.addr = alloca %class.OpenQueue*, align 8
  %_graph.addr = alloca %"class.micropather::Graph"*, align 8
  store %class.OpenQueue* %this, %class.OpenQueue** %this.addr, align 8, !tbaa !3
  store %"class.micropather::Graph"* %_graph, %"class.micropather::Graph"** %_graph.addr, align 8, !tbaa !3
  %this1 = load %class.OpenQueue*, %class.OpenQueue** %this.addr, align 8
  %0 = load %"class.micropather::Graph"*, %"class.micropather::Graph"** %_graph.addr, align 8, !tbaa !3
  %graph = getelementptr inbounds %class.OpenQueue, %class.OpenQueue* %this1, i32 0, i32 2
  store %"class.micropather::Graph"* %0, %"class.micropather::Graph"** %graph, align 8, !tbaa !92
  %sentinelMem = getelementptr inbounds %class.OpenQueue, %class.OpenQueue* %this1, i32 0, i32 1
  %arraydecay = getelementptr inbounds [23 x i32], [23 x i32]* %sentinelMem, i32 0, i32 0
  %1 = bitcast i32* %arraydecay to %"class.micropather::PathNode"*
  %sentinel = getelementptr inbounds %class.OpenQueue, %class.OpenQueue* %this1, i32 0, i32 0
  store %"class.micropather::PathNode"* %1, %"class.micropather::PathNode"** %sentinel, align 8, !tbaa !7
  %sentinel2 = getelementptr inbounds %class.OpenQueue, %class.OpenQueue* %this1, i32 0, i32 0
  %2 = load %"class.micropather::PathNode"*, %"class.micropather::PathNode"** %sentinel2, align 8, !tbaa !7
  call void @_ZN11micropather8PathNode12InitSentinelEv(%"class.micropather::PathNode"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN9ClosedSetC2EPN11micropather5GraphE(%class.ClosedSet* %this, %"class.micropather::Graph"* %_graph) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %class.ClosedSet*, align 8
  %_graph.addr = alloca %"class.micropather::Graph"*, align 8
  store %class.ClosedSet* %this, %class.ClosedSet** %this.addr, align 8, !tbaa !3
  store %"class.micropather::Graph"* %_graph, %"class.micropather::Graph"** %_graph.addr, align 8, !tbaa !3
  %this1 = load %class.ClosedSet*, %class.ClosedSet** %this.addr, align 8
  %0 = load %"class.micropather::Graph"*, %"class.micropather::Graph"** %_graph.addr, align 8, !tbaa !3
  %graph = getelementptr inbounds %class.ClosedSet, %class.ClosedSet* %this1, i32 0, i32 0
  store %"class.micropather::Graph"* %0, %"class.micropather::Graph"** %graph, align 8, !tbaa !93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN9ClosedSetD2Ev(%class.ClosedSet* %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %class.ClosedSet*, align 8
  store %class.ClosedSet* %this, %class.ClosedSet** %this.addr, align 8, !tbaa !3
  %this1 = load %class.ClosedSet*, %class.ClosedSet** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN9OpenQueueD2Ev(%class.OpenQueue* %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %class.OpenQueue*, align 8
  store %class.OpenQueue* %this, %class.OpenQueue** %this.addr, align 8, !tbaa !3
  %this1 = load %class.OpenQueue*, %class.OpenQueue** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_9StateCostEEC2Ev(%"class.micropather::MPVector"* %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector"*, align 8
  store %"class.micropather::MPVector"* %this, %"class.micropather::MPVector"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector"*, %"class.micropather::MPVector"** %this.addr, align 8
  %m_allocated = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 0
  store i32 0, i32* %m_allocated, align 8, !tbaa !95
  %m_size = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 1
  store i32 0, i32* %m_size, align 4, !tbaa !82
  %m_buf = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 2
  store %"struct.micropather::StateCost"* null, %"struct.micropather::StateCost"** %m_buf, align 8, !tbaa !83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_8NodeCostEEC2Ev(%"class.micropather::MPVector.0"* %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.0"*, align 8
  store %"class.micropather::MPVector.0"* %this, %"class.micropather::MPVector.0"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %this.addr, align 8
  %m_allocated = getelementptr inbounds %"class.micropather::MPVector.0", %"class.micropather::MPVector.0"* %this1, i32 0, i32 0
  store i32 0, i32* %m_allocated, align 8, !tbaa !96
  %m_size = getelementptr inbounds %"class.micropather::MPVector.0", %"class.micropather::MPVector.0"* %this1, i32 0, i32 1
  store i32 0, i32* %m_size, align 4, !tbaa !68
  %m_buf = getelementptr inbounds %"class.micropather::MPVector.0", %"class.micropather::MPVector.0"* %this1, i32 0, i32 2
  store %"struct.micropather::NodeCost"* null, %"struct.micropather::NodeCost"** %m_buf, align 8, !tbaa !75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorIfEC2Ev(%"class.micropather::MPVector.1"* %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.1"*, align 8
  store %"class.micropather::MPVector.1"* %this, %"class.micropather::MPVector.1"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector.1"*, %"class.micropather::MPVector.1"** %this.addr, align 8
  %m_allocated = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 0
  store i32 0, i32* %m_allocated, align 8, !tbaa !97
  %m_size = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 1
  store i32 0, i32* %m_size, align 4, !tbaa !67
  %m_buf = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 2
  store float* null, float** %m_buf, align 8, !tbaa !76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_9StateCostEED2Ev(%"class.micropather::MPVector"* %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector"*, align 8
  store %"class.micropather::MPVector"* %this, %"class.micropather::MPVector"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector"*, %"class.micropather::MPVector"** %this.addr, align 8
  %m_buf = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 2
  %0 = load %"struct.micropather::StateCost"*, %"struct.micropather::StateCost"** %m_buf, align 8, !tbaa !83
  %isnull = icmp eq %"struct.micropather::StateCost"* %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = bitcast %"struct.micropather::StateCost"* %0 to i8*
  call void @_ZdaPv(i8* %1) #14
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_8NodeCostEED2Ev(%"class.micropather::MPVector.0"* %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.0"*, align 8
  store %"class.micropather::MPVector.0"* %this, %"class.micropather::MPVector.0"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %this.addr, align 8
  %m_buf = getelementptr inbounds %"class.micropather::MPVector.0", %"class.micropather::MPVector.0"* %this1, i32 0, i32 2
  %0 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %m_buf, align 8, !tbaa !75
  %isnull = icmp eq %"struct.micropather::NodeCost"* %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = bitcast %"struct.micropather::NodeCost"* %0 to i8*
  call void @_ZdaPv(i8* %1) #14
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorIfED2Ev(%"class.micropather::MPVector.1"* %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.1"*, align 8
  store %"class.micropather::MPVector.1"* %this, %"class.micropather::MPVector.1"** %this.addr, align 8, !tbaa !3
  %this1 = load %"class.micropather::MPVector.1"*, %"class.micropather::MPVector.1"** %this.addr, align 8
  %m_buf = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 2
  %0 = load float*, float** %m_buf, align 8, !tbaa !76
  %isnull = icmp eq float* %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = bitcast float* %0 to i8*
  call void @_ZdaPv(i8* %1) #14
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorIPvE8capacityEj(%"class.micropather::MPVector.2"* %this, i32 %cap) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.2"*, align 8
  %cap.addr = alloca i32, align 4
  %newAllocated = alloca i32, align 4
  %newBuf = alloca i8**, align 8
  store %"class.micropather::MPVector.2"* %this, %"class.micropather::MPVector.2"** %this.addr, align 8, !tbaa !3
  store i32 %cap, i32* %cap.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::MPVector.2"*, %"class.micropather::MPVector.2"** %this.addr, align 8
  %m_allocated = getelementptr inbounds %"class.micropather::MPVector.2", %"class.micropather::MPVector.2"* %this1, i32 0, i32 0
  %0 = load i32, i32* %m_allocated, align 8, !tbaa !98
  %1 = load i32, i32* %cap.addr, align 4, !tbaa !17
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = bitcast i32* %newAllocated to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #10
  %3 = load i32, i32* %cap.addr, align 4, !tbaa !17
  %mul = mul i32 %3, 3
  %div = udiv i32 %mul, 2
  %add = add i32 %div, 16
  store i32 %add, i32* %newAllocated, align 4, !tbaa !17
  %4 = bitcast i8*** %newBuf to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #10
  %5 = load i32, i32* %newAllocated, align 4, !tbaa !17
  %6 = zext i32 %5 to i64
  %7 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %6, i64 8)
  %8 = extractvalue { i64, i1 } %7, 1
  %9 = extractvalue { i64, i1 } %7, 0
  %10 = select i1 %8, i64 -1, i64 %9
  %call = call i8* @_Znam(i64 %10) #13
  %11 = bitcast i8* %call to i8**
  store i8** %11, i8*** %newBuf, align 8, !tbaa !3
  %12 = load i8**, i8*** %newBuf, align 8, !tbaa !3
  %13 = bitcast i8** %12 to i8*
  %m_buf = getelementptr inbounds %"class.micropather::MPVector.2", %"class.micropather::MPVector.2"* %this1, i32 0, i32 2
  %14 = load i8**, i8*** %m_buf, align 8, !tbaa !66
  %15 = bitcast i8** %14 to i8*
  %m_size = getelementptr inbounds %"class.micropather::MPVector.2", %"class.micropather::MPVector.2"* %this1, i32 0, i32 1
  %16 = load i32, i32* %m_size, align 4, !tbaa !64
  %conv = zext i32 %16 to i64
  %mul2 = mul i64 8, %conv
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %15, i64 %mul2, i32 8, i1 false)
  %m_buf3 = getelementptr inbounds %"class.micropather::MPVector.2", %"class.micropather::MPVector.2"* %this1, i32 0, i32 2
  %17 = load i8**, i8*** %m_buf3, align 8, !tbaa !66
  %isnull = icmp eq i8** %17, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.then
  %18 = bitcast i8** %17 to i8*
  call void @_ZdaPv(i8* %18) #14
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.then
  %19 = load i8**, i8*** %newBuf, align 8, !tbaa !3
  %m_buf4 = getelementptr inbounds %"class.micropather::MPVector.2", %"class.micropather::MPVector.2"* %this1, i32 0, i32 2
  store i8** %19, i8*** %m_buf4, align 8, !tbaa !66
  %20 = load i32, i32* %newAllocated, align 4, !tbaa !17
  %m_allocated5 = getelementptr inbounds %"class.micropather::MPVector.2", %"class.micropather::MPVector.2"* %this1, i32 0, i32 0
  store i32 %20, i32* %m_allocated5, align 8, !tbaa !98
  %21 = bitcast i8*** %newBuf to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #10
  %22 = bitcast i32* %newAllocated to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %22) #10
  br label %if.end

if.end:                                           ; preds = %delete.end, %entry
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorIfE8capacityEj(%"class.micropather::MPVector.1"* %this, i32 %cap) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.1"*, align 8
  %cap.addr = alloca i32, align 4
  %newAllocated = alloca i32, align 4
  %newBuf = alloca float*, align 8
  store %"class.micropather::MPVector.1"* %this, %"class.micropather::MPVector.1"** %this.addr, align 8, !tbaa !3
  store i32 %cap, i32* %cap.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::MPVector.1"*, %"class.micropather::MPVector.1"** %this.addr, align 8
  %m_allocated = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 0
  %0 = load i32, i32* %m_allocated, align 8, !tbaa !97
  %1 = load i32, i32* %cap.addr, align 4, !tbaa !17
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = bitcast i32* %newAllocated to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #10
  %3 = load i32, i32* %cap.addr, align 4, !tbaa !17
  %mul = mul i32 %3, 3
  %div = udiv i32 %mul, 2
  %add = add i32 %div, 16
  store i32 %add, i32* %newAllocated, align 4, !tbaa !17
  %4 = bitcast float** %newBuf to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #10
  %5 = load i32, i32* %newAllocated, align 4, !tbaa !17
  %6 = zext i32 %5 to i64
  %7 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %6, i64 4)
  %8 = extractvalue { i64, i1 } %7, 1
  %9 = extractvalue { i64, i1 } %7, 0
  %10 = select i1 %8, i64 -1, i64 %9
  %call = call i8* @_Znam(i64 %10) #13
  %11 = bitcast i8* %call to float*
  store float* %11, float** %newBuf, align 8, !tbaa !3
  %12 = load float*, float** %newBuf, align 8, !tbaa !3
  %13 = bitcast float* %12 to i8*
  %m_buf = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 2
  %14 = load float*, float** %m_buf, align 8, !tbaa !76
  %15 = bitcast float* %14 to i8*
  %m_size = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 1
  %16 = load i32, i32* %m_size, align 4, !tbaa !67
  %conv = zext i32 %16 to i64
  %mul2 = mul i64 4, %conv
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %15, i64 %mul2, i32 4, i1 false)
  %m_buf3 = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 2
  %17 = load float*, float** %m_buf3, align 8, !tbaa !76
  %isnull = icmp eq float* %17, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.then
  %18 = bitcast float* %17 to i8*
  call void @_ZdaPv(i8* %18) #14
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.then
  %19 = load float*, float** %newBuf, align 8, !tbaa !3
  %m_buf4 = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 2
  store float* %19, float** %m_buf4, align 8, !tbaa !76
  %20 = load i32, i32* %newAllocated, align 4, !tbaa !17
  %m_allocated5 = getelementptr inbounds %"class.micropather::MPVector.1", %"class.micropather::MPVector.1"* %this1, i32 0, i32 0
  store i32 %20, i32* %m_allocated5, align 8, !tbaa !97
  %21 = bitcast float** %newBuf to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #10
  %22 = bitcast i32* %newAllocated to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %22) #10
  br label %if.end

if.end:                                           ; preds = %delete.end, %entry
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_8NodeCostEE8capacityEj(%"class.micropather::MPVector.0"* %this, i32 %cap) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector.0"*, align 8
  %cap.addr = alloca i32, align 4
  %newAllocated = alloca i32, align 4
  %newBuf = alloca %"struct.micropather::NodeCost"*, align 8
  store %"class.micropather::MPVector.0"* %this, %"class.micropather::MPVector.0"** %this.addr, align 8, !tbaa !3
  store i32 %cap, i32* %cap.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::MPVector.0"*, %"class.micropather::MPVector.0"** %this.addr, align 8
  %m_allocated = getelementptr inbounds %"class.micropather::MPVector.0", %"class.micropather::MPVector.0"* %this1, i32 0, i32 0
  %0 = load i32, i32* %m_allocated, align 8, !tbaa !96
  %1 = load i32, i32* %cap.addr, align 4, !tbaa !17
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = bitcast i32* %newAllocated to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #10
  %3 = load i32, i32* %cap.addr, align 4, !tbaa !17
  %mul = mul i32 %3, 3
  %div = udiv i32 %mul, 2
  %add = add i32 %div, 16
  store i32 %add, i32* %newAllocated, align 4, !tbaa !17
  %4 = bitcast %"struct.micropather::NodeCost"** %newBuf to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #10
  %5 = load i32, i32* %newAllocated, align 4, !tbaa !17
  %6 = zext i32 %5 to i64
  %7 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %6, i64 16)
  %8 = extractvalue { i64, i1 } %7, 1
  %9 = extractvalue { i64, i1 } %7, 0
  %10 = select i1 %8, i64 -1, i64 %9
  %call = call i8* @_Znam(i64 %10) #13
  %11 = bitcast i8* %call to %"struct.micropather::NodeCost"*
  store %"struct.micropather::NodeCost"* %11, %"struct.micropather::NodeCost"** %newBuf, align 8, !tbaa !3
  %12 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %newBuf, align 8, !tbaa !3
  %13 = bitcast %"struct.micropather::NodeCost"* %12 to i8*
  %m_buf = getelementptr inbounds %"class.micropather::MPVector.0", %"class.micropather::MPVector.0"* %this1, i32 0, i32 2
  %14 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %m_buf, align 8, !tbaa !75
  %15 = bitcast %"struct.micropather::NodeCost"* %14 to i8*
  %m_size = getelementptr inbounds %"class.micropather::MPVector.0", %"class.micropather::MPVector.0"* %this1, i32 0, i32 1
  %16 = load i32, i32* %m_size, align 4, !tbaa !68
  %conv = zext i32 %16 to i64
  %mul2 = mul i64 16, %conv
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %15, i64 %mul2, i32 8, i1 false)
  %m_buf3 = getelementptr inbounds %"class.micropather::MPVector.0", %"class.micropather::MPVector.0"* %this1, i32 0, i32 2
  %17 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %m_buf3, align 8, !tbaa !75
  %isnull = icmp eq %"struct.micropather::NodeCost"* %17, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.then
  %18 = bitcast %"struct.micropather::NodeCost"* %17 to i8*
  call void @_ZdaPv(i8* %18) #14
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.then
  %19 = load %"struct.micropather::NodeCost"*, %"struct.micropather::NodeCost"** %newBuf, align 8, !tbaa !3
  %m_buf4 = getelementptr inbounds %"class.micropather::MPVector.0", %"class.micropather::MPVector.0"* %this1, i32 0, i32 2
  store %"struct.micropather::NodeCost"* %19, %"struct.micropather::NodeCost"** %m_buf4, align 8, !tbaa !75
  %20 = load i32, i32* %newAllocated, align 4, !tbaa !17
  %m_allocated5 = getelementptr inbounds %"class.micropather::MPVector.0", %"class.micropather::MPVector.0"* %this1, i32 0, i32 0
  store i32 %20, i32* %m_allocated5, align 8, !tbaa !96
  %21 = bitcast %"struct.micropather::NodeCost"** %newBuf to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #10
  %22 = bitcast i32* %newAllocated to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %22) #10
  br label %if.end

if.end:                                           ; preds = %delete.end, %entry
  ret void
}

; Function Attrs: ssp uwtable
define linkonce_odr void @_ZN11micropather8MPVectorINS_9StateCostEE8capacityEj(%"class.micropather::MPVector"* %this, i32 %cap) #0 align 2 {
entry:
  %this.addr = alloca %"class.micropather::MPVector"*, align 8
  %cap.addr = alloca i32, align 4
  %newAllocated = alloca i32, align 4
  %newBuf = alloca %"struct.micropather::StateCost"*, align 8
  store %"class.micropather::MPVector"* %this, %"class.micropather::MPVector"** %this.addr, align 8, !tbaa !3
  store i32 %cap, i32* %cap.addr, align 4, !tbaa !17
  %this1 = load %"class.micropather::MPVector"*, %"class.micropather::MPVector"** %this.addr, align 8
  %m_allocated = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 0
  %0 = load i32, i32* %m_allocated, align 8, !tbaa !95
  %1 = load i32, i32* %cap.addr, align 4, !tbaa !17
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = bitcast i32* %newAllocated to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #10
  %3 = load i32, i32* %cap.addr, align 4, !tbaa !17
  %mul = mul i32 %3, 3
  %div = udiv i32 %mul, 2
  %add = add i32 %div, 16
  store i32 %add, i32* %newAllocated, align 4, !tbaa !17
  %4 = bitcast %"struct.micropather::StateCost"** %newBuf to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #10
  %5 = load i32, i32* %newAllocated, align 4, !tbaa !17
  %6 = zext i32 %5 to i64
  %7 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %6, i64 16)
  %8 = extractvalue { i64, i1 } %7, 1
  %9 = extractvalue { i64, i1 } %7, 0
  %10 = select i1 %8, i64 -1, i64 %9
  %call = call i8* @_Znam(i64 %10) #13
  %11 = bitcast i8* %call to %"struct.micropather::StateCost"*
  store %"struct.micropather::StateCost"* %11, %"struct.micropather::StateCost"** %newBuf, align 8, !tbaa !3
  %12 = load %"struct.micropather::StateCost"*, %"struct.micropather::StateCost"** %newBuf, align 8, !tbaa !3
  %13 = bitcast %"struct.micropather::StateCost"* %12 to i8*
  %m_buf = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 2
  %14 = load %"struct.micropather::StateCost"*, %"struct.micropather::StateCost"** %m_buf, align 8, !tbaa !83
  %15 = bitcast %"struct.micropather::StateCost"* %14 to i8*
  %m_size = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 1
  %16 = load i32, i32* %m_size, align 4, !tbaa !82
  %conv = zext i32 %16 to i64
  %mul2 = mul i64 16, %conv
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %15, i64 %mul2, i32 8, i1 false)
  %m_buf3 = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 2
  %17 = load %"struct.micropather::StateCost"*, %"struct.micropather::StateCost"** %m_buf3, align 8, !tbaa !83
  %isnull = icmp eq %"struct.micropather::StateCost"* %17, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.then
  %18 = bitcast %"struct.micropather::StateCost"* %17 to i8*
  call void @_ZdaPv(i8* %18) #14
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.then
  %19 = load %"struct.micropather::StateCost"*, %"struct.micropather::StateCost"** %newBuf, align 8, !tbaa !3
  %m_buf4 = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 2
  store %"struct.micropather::StateCost"* %19, %"struct.micropather::StateCost"** %m_buf4, align 8, !tbaa !83
  %20 = load i32, i32* %newAllocated, align 4, !tbaa !17
  %m_allocated5 = getelementptr inbounds %"class.micropather::MPVector", %"class.micropather::MPVector"* %this1, i32 0, i32 0
  store i32 %20, i32* %m_allocated5, align 8, !tbaa !95
  %21 = bitcast %"struct.micropather::StateCost"** %newBuf to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #10
  %22 = bitcast i32* %newAllocated to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %22) #10
  br label %if.end

if.end:                                           ; preds = %delete.end, %entry
  ret void
}

attributes #0 = { ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { allocsize(0) }
attributes #12 = { allocsize(0,1) }
attributes #13 = { builtin }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"clang version 5.0.2 (https://github.com/llvm-mirror/clang.git 26cac19a0d622afc91cd52a002921074bccc6a27) (https://github.com/llvm-mirror/llvm.git da4a2839d80ac52958be0129b871beedfe90136e)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTS9OpenQueue", !4, i64 0, !5, i64 8, !4, i64 104}
!9 = !{!10, !4, i64 64}
!10 = !{!"_ZTSN11micropather8PathNodeE", !4, i64 0, !11, i64 8, !11, i64 12, !11, i64 16, !4, i64 24, !12, i64 32, !12, i64 36, !12, i64 40, !5, i64 48, !4, i64 64, !4, i64 72, !13, i64 80, !13, i64 81}
!11 = !{!"float", !5, i64 0}
!12 = !{!"int", !5, i64 0}
!13 = !{!"bool", !5, i64 0}
!14 = !{!10, !11, i64 16}
!15 = !{!10, !13, i64 80}
!16 = !{!10, !4, i64 72}
!17 = !{!12, !12, i64 0}
!18 = !{!19, !4, i64 8}
!19 = !{!"_ZTSN11micropather12PathNodePoolE", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !12, i64 32, !12, i64 36, !10, i64 40, !12, i64 128, !12, i64 132, !12, i64 136, !12, i64 140, !12, i64 144}
!20 = !{!19, !4, i64 16}
!21 = !{!19, !12, i64 128}
!22 = !{!19, !12, i64 132}
!23 = !{!19, !12, i64 136}
!24 = !{!19, !12, i64 32}
!25 = !{!19, !12, i64 36}
!26 = !{!19, !4, i64 24}
!27 = !{!19, !12, i64 140}
!28 = !{!19, !4, i64 0}
!29 = !{!19, !12, i64 144}
!30 = !{!31, !4, i64 0}
!31 = !{!"_ZTSN11micropather12PathNodePool5BlockE", !4, i64 0, !5, i64 8}
!32 = !{!19, !4, i64 104}
!33 = !{!19, !4, i64 112}
!34 = !{i64 0, i64 8, !3, i64 8, i64 4, !35}
!35 = !{!11, !11, i64 0}
!36 = !{!37, !37, i64 0}
!37 = !{!"long", !5, i64 0}
!38 = !{!10, !4, i64 0}
!39 = !{!10, !12, i64 32}
!40 = !{!10, !11, i64 8}
!41 = !{!10, !11, i64 12}
!42 = !{!10, !4, i64 24}
!43 = !{!10, !13, i64 81}
!44 = !{!10, !12, i64 36}
!45 = !{!10, !12, i64 40}
!46 = !{!13, !13, i64 0}
!47 = !{!48, !4, i64 200}
!48 = !{!"_ZTSN11micropather11MicroPatherE", !19, i64 0, !49, i64 152, !50, i64 168, !51, i64 184, !4, i64 200, !12, i64 208, !4, i64 216}
!49 = !{!"_ZTSN11micropather8MPVectorINS_9StateCostEEE", !12, i64 0, !12, i64 4, !4, i64 8}
!50 = !{!"_ZTSN11micropather8MPVectorINS_8NodeCostEEE", !12, i64 0, !12, i64 4, !4, i64 8}
!51 = !{!"_ZTSN11micropather8MPVectorIfEE", !12, i64 0, !12, i64 4, !4, i64 8}
!52 = !{!48, !12, i64 208}
!53 = !{!48, !4, i64 216}
!54 = !{i8 0, i8 2}
!55 = !{!56, !12, i64 20}
!56 = !{!"_ZTSN11micropather9PathCacheE", !12, i64 0, !12, i64 4, !4, i64 8, !12, i64 16, !12, i64 20}
!57 = !{!56, !4, i64 8}
!58 = !{!56, !12, i64 16}
!59 = !{!56, !12, i64 0}
!60 = !{!56, !12, i64 4}
!61 = !{!5, !5, i64 0}
!62 = !{!63, !4, i64 0}
!63 = !{!"_ZTSN11micropather8NodeCostE", !4, i64 0, !11, i64 8}
!64 = !{!65, !12, i64 4}
!65 = !{!"_ZTSN11micropather8MPVectorIPvEE", !12, i64 0, !12, i64 4, !4, i64 8}
!66 = !{!65, !4, i64 8}
!67 = !{!51, !12, i64 4}
!68 = !{!50, !12, i64 4}
!69 = !{!70, !70, i64 0}
!70 = !{!"vtable pointer", !6, i64 0}
!71 = !{!72, !4, i64 0}
!72 = !{!"_ZTSN11micropather9StateCostE", !4, i64 0, !11, i64 8}
!73 = !{!72, !11, i64 8}
!74 = !{!63, !11, i64 8}
!75 = !{!50, !4, i64 8}
!76 = !{!51, !4, i64 8}
!77 = !{!78, !4, i64 0}
!78 = !{!"_ZTSN11micropather9PathCache4ItemE", !4, i64 0, !4, i64 8, !4, i64 16, !11, i64 24}
!79 = !{!78, !4, i64 8}
!80 = !{!78, !4, i64 16}
!81 = !{!78, !11, i64 24}
!82 = !{!49, !12, i64 4}
!83 = !{!49, !4, i64 8}
!84 = !{i64 0, i64 8, !3, i64 8, i64 8, !3, i64 16, i64 8, !3, i64 24, i64 4, !35}
!85 = !{!86, !12, i64 0}
!86 = !{!"_ZTSN11micropather9CacheDataE", !12, i64 0, !12, i64 4, !11, i64 8, !12, i64 12, !12, i64 16, !11, i64 20}
!87 = !{!86, !12, i64 4}
!88 = !{!86, !11, i64 8}
!89 = !{!86, !12, i64 12}
!90 = !{!86, !12, i64 16}
!91 = !{!86, !11, i64 20}
!92 = !{!8, !4, i64 104}
!93 = !{!94, !4, i64 0}
!94 = !{!"_ZTS9ClosedSet", !4, i64 0}
!95 = !{!49, !12, i64 0}
!96 = !{!50, !12, i64 0}
!97 = !{!51, !12, i64 0}
!98 = !{!65, !12, i64 0}
