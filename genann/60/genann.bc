; ModuleID = 'genann.c'
source_filename = "genann.c"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.15.0"

%struct.genann = type { i32, i32, i32, i32, {}*, {}*, i32, i32, double*, double*, double* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sFILEX = type opaque
%struct.__sbuf = type { i8*, i32 }

@sigmoid_dom_min = constant double -1.500000e+01, align 8
@sigmoid_dom_max = constant double 1.500000e+01, align 8
@interval = common global double 0.000000e+00, align 8
@lookup = common global [4096 x double] zeroinitializer, align 16
@__func__.genann_act_sigmoid_cached = private unnamed_addr constant [26 x i8] c"genann_act_sigmoid_cached\00", align 1
@.str = private unnamed_addr constant [9 x i8] c"genann.c\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"!isnan(a)\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"%d %d %d %d\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"fscanf\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c" %le\00", align 1
@__func__.genann_run = private unnamed_addr constant [11 x i8] c"genann_run\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"w - ann->weight == ann->total_weights\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"o - ann->output == ann->total_neurons\00", align 1
@__func__.genann_train = private unnamed_addr constant [13 x i8] c"genann_train\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c" %.20e\00", align 1

; Function Attrs: nounwind ssp uwtable
define double @genann_act_hidden_indirect(%struct.genann* %ann, double %a) #0 {
entry:
  %ann.addr = alloca %struct.genann*, align 8
  %a.addr = alloca double, align 8
  store %struct.genann* %ann, %struct.genann** %ann.addr, align 8, !tbaa !3
  store double %a, double* %a.addr, align 8, !tbaa !7
  %0 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %activation_hidden = getelementptr inbounds %struct.genann, %struct.genann* %0, i32 0, i32 4
  %activation_hidden1 = bitcast {}** %activation_hidden to double (%struct.genann*, double)**
  %1 = load double (%struct.genann*, double)*, double (%struct.genann*, double)** %activation_hidden1, align 8, !tbaa !9
  %2 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %3 = load double, double* %a.addr, align 8, !tbaa !7
  %call = call double %1(%struct.genann* %2, double %3)
  ret double %call
}

; Function Attrs: nounwind ssp uwtable
define double @genann_act_output_indirect(%struct.genann* %ann, double %a) #0 {
entry:
  %ann.addr = alloca %struct.genann*, align 8
  %a.addr = alloca double, align 8
  store %struct.genann* %ann, %struct.genann** %ann.addr, align 8, !tbaa !3
  store double %a, double* %a.addr, align 8, !tbaa !7
  %0 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %activation_output = getelementptr inbounds %struct.genann, %struct.genann* %0, i32 0, i32 5
  %activation_output1 = bitcast {}** %activation_output to double (%struct.genann*, double)**
  %1 = load double (%struct.genann*, double)*, double (%struct.genann*, double)** %activation_output1, align 8, !tbaa !12
  %2 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %3 = load double, double* %a.addr, align 8, !tbaa !7
  %call = call double %1(%struct.genann* %2, double %3)
  ret double %call
}

; Function Attrs: nounwind ssp uwtable
define double @genann_act_sigmoid(%struct.genann* %ann, double %a) #0 {
entry:
  %retval = alloca double, align 8
  %ann.addr = alloca %struct.genann*, align 8
  %a.addr = alloca double, align 8
  store %struct.genann* %ann, %struct.genann** %ann.addr, align 8, !tbaa !3
  store double %a, double* %a.addr, align 8, !tbaa !7
  %0 = load double, double* %a.addr, align 8, !tbaa !7
  %cmp = fcmp olt double %0, -4.500000e+01
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %1 = load double, double* %a.addr, align 8, !tbaa !7
  %cmp1 = fcmp ogt double %1, 4.500000e+01
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store double 1.000000e+00, double* %retval, align 8
  br label %return

if.end3:                                          ; preds = %if.end
  %2 = load double, double* %a.addr, align 8, !tbaa !7
  %sub = fsub double -0.000000e+00, %2
  %3 = call double @llvm.exp.f64(double %sub)
  %add = fadd double 1.000000e+00, %3
  %div = fdiv double 1.000000e+00, %add
  store double %div, double* %retval, align 8
  br label %return

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %4 = load double, double* %retval, align 8
  ret double %4
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.exp.f64(double) #1

; Function Attrs: nounwind ssp uwtable
define void @genann_init_sigmoid_lookup(%struct.genann* %ann) #0 {
entry:
  %ann.addr = alloca %struct.genann*, align 8
  %f = alloca double, align 8
  %i = alloca i32, align 4
  store %struct.genann* %ann, %struct.genann** %ann.addr, align 8, !tbaa !3
  %0 = bitcast double* %f to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #10
  store double 0x3F7E000000000000, double* %f, align 8, !tbaa !7
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #10
  store double 0x4061111111111111, double* @interval, align 8, !tbaa !7
  store i32 0, i32* %i, align 4, !tbaa !13
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !tbaa !13
  %cmp = icmp slt i32 %2, 4096
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %4 = load i32, i32* %i, align 4, !tbaa !13
  %conv = sitofp i32 %4 to double
  %mul = fmul double 0x3F7E000000000000, %conv
  %add = fadd double -1.500000e+01, %mul
  %call = call double @genann_act_sigmoid(%struct.genann* %3, double %add)
  %5 = load i32, i32* %i, align 4, !tbaa !13
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [4096 x double], [4096 x double]* @lookup, i64 0, i64 %idxprom
  store double %call, double* %arrayidx, align 8, !tbaa !7
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !tbaa !13
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4, !tbaa !13
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %7) #10
  %8 = bitcast double* %f to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define double @genann_act_sigmoid_cached(%struct.genann* %ann, double %a) #0 {
entry:
  %retval = alloca double, align 8
  %ann.addr = alloca %struct.genann*, align 8
  %a.addr = alloca double, align 8
  %j = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.genann* %ann, %struct.genann** %ann.addr, align 8, !tbaa !3
  store double %a, double* %a.addr, align 8, !tbaa !7
  %0 = load double, double* %a.addr, align 8, !tbaa !7
  %call = call i32 @__inline_isnand(double %0)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  call void @__assert_rtn(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.genann_act_sigmoid_cached, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 87, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0)) #11
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %1
  %2 = load double, double* %a.addr, align 8, !tbaa !7
  %cmp = fcmp olt double %2, -1.500000e+01
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %3 = load double, double* getelementptr inbounds ([4096 x double], [4096 x double]* @lookup, i64 0, i64 0), align 16, !tbaa !7
  store double %3, double* %retval, align 8
  br label %return

if.end:                                           ; preds = %cond.end
  %4 = load double, double* %a.addr, align 8, !tbaa !7
  %cmp4 = fcmp oge double %4, 1.500000e+01
  br i1 %cmp4, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end
  %5 = load double, double* getelementptr inbounds ([4096 x double], [4096 x double]* @lookup, i64 0, i64 4095), align 8, !tbaa !7
  store double %5, double* %retval, align 8
  br label %return

if.end7:                                          ; preds = %if.end
  %6 = bitcast i64* %j to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #10
  %7 = load double, double* %a.addr, align 8, !tbaa !7
  %sub = fsub double %7, -1.500000e+01
  %8 = load double, double* @interval, align 8, !tbaa !7
  %mul = fmul double %sub, %8
  %add = fadd double %mul, 5.000000e-01
  %conv8 = fptoui double %add to i64
  store i64 %conv8, i64* %j, align 8, !tbaa !14
  %9 = load i64, i64* %j, align 8, !tbaa !14
  %cmp9 = icmp uge i64 %9, 4096
  %lnot11 = xor i1 %cmp9, true
  %lnot13 = xor i1 %lnot11, true
  %lnot.ext14 = zext i1 %lnot13 to i32
  %conv15 = sext i32 %lnot.ext14 to i64
  %expval16 = call i64 @llvm.expect.i64(i64 %conv15, i64 0)
  %tobool17 = icmp ne i64 %expval16, 0
  br i1 %tobool17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.end7
  %10 = load double, double* getelementptr inbounds ([4096 x double], [4096 x double]* @lookup, i64 0, i64 4095), align 8, !tbaa !7
  store double %10, double* %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end19:                                         ; preds = %if.end7
  %11 = load i64, i64* %j, align 8, !tbaa !14
  %arrayidx = getelementptr inbounds [4096 x double], [4096 x double]* @lookup, i64 0, i64 %11
  %12 = load double, double* %arrayidx, align 8, !tbaa !7
  store double %12, double* %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.then18
  %13 = bitcast i64* %j to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #10
  br label %return

return:                                           ; preds = %cleanup, %if.then6, %if.then
  %14 = load double, double* %retval, align 8
  ret double %14
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define available_externally i32 @__inline_isnand(double %__x) #3 {
entry:
  %__x.addr = alloca double, align 8
  store double %__x, double* %__x.addr, align 8, !tbaa !7
  %0 = load double, double* %__x.addr, align 8, !tbaa !7
  %1 = load double, double* %__x.addr, align 8, !tbaa !7
  %cmp = fcmp une double %0, %1
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #4

; Function Attrs: cold noreturn
declare void @__assert_rtn(i8*, i8*, i32, i8*) #5

; Function Attrs: nounwind ssp uwtable
define double @genann_act_linear(%struct.genann* %ann, double %a) #0 {
entry:
  %ann.addr = alloca %struct.genann*, align 8
  %a.addr = alloca double, align 8
  store %struct.genann* %ann, %struct.genann** %ann.addr, align 8, !tbaa !3
  store double %a, double* %a.addr, align 8, !tbaa !7
  %0 = load double, double* %a.addr, align 8, !tbaa !7
  ret double %0
}

; Function Attrs: nounwind ssp uwtable
define double @genann_act_threshold(%struct.genann* %ann, double %a) #0 {
entry:
  %ann.addr = alloca %struct.genann*, align 8
  %a.addr = alloca double, align 8
  store %struct.genann* %ann, %struct.genann** %ann.addr, align 8, !tbaa !3
  store double %a, double* %a.addr, align 8, !tbaa !7
  %0 = load double, double* %a.addr, align 8, !tbaa !7
  %cmp = fcmp ogt double %0, 0.000000e+00
  %conv = zext i1 %cmp to i32
  %conv1 = sitofp i32 %conv to double
  ret double %conv1
}

; Function Attrs: nounwind ssp uwtable
define %struct.genann* @genann_init(i32 %inputs, i32 %hidden_layers, i32 %hidden, i32 %outputs) #0 {
entry:
  %retval = alloca %struct.genann*, align 8
  %inputs.addr = alloca i32, align 4
  %hidden_layers.addr = alloca i32, align 4
  %hidden.addr = alloca i32, align 4
  %outputs.addr = alloca i32, align 4
  %hidden_weights = alloca i32, align 4
  %output_weights = alloca i32, align 4
  %total_weights = alloca i32, align 4
  %total_neurons = alloca i32, align 4
  %size = alloca i32, align 4
  %ret = alloca %struct.genann*, align 8
  %cleanup.dest.slot = alloca i32
  store i32 %inputs, i32* %inputs.addr, align 4, !tbaa !13
  store i32 %hidden_layers, i32* %hidden_layers.addr, align 4, !tbaa !13
  store i32 %hidden, i32* %hidden.addr, align 4, !tbaa !13
  store i32 %outputs, i32* %outputs.addr, align 4, !tbaa !13
  %0 = load i32, i32* %hidden_layers.addr, align 4, !tbaa !13
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.genann* null, %struct.genann** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %inputs.addr, align 4, !tbaa !13
  %cmp1 = icmp slt i32 %1, 1
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store %struct.genann* null, %struct.genann** %retval, align 8
  br label %return

if.end3:                                          ; preds = %if.end
  %2 = load i32, i32* %outputs.addr, align 4, !tbaa !13
  %cmp4 = icmp slt i32 %2, 1
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  store %struct.genann* null, %struct.genann** %retval, align 8
  br label %return

if.end6:                                          ; preds = %if.end3
  %3 = load i32, i32* %hidden_layers.addr, align 4, !tbaa !13
  %cmp7 = icmp sgt i32 %3, 0
  br i1 %cmp7, label %land.lhs.true, label %if.end10

land.lhs.true:                                    ; preds = %if.end6
  %4 = load i32, i32* %hidden.addr, align 4, !tbaa !13
  %cmp8 = icmp slt i32 %4, 1
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %land.lhs.true
  store %struct.genann* null, %struct.genann** %retval, align 8
  br label %return

if.end10:                                         ; preds = %land.lhs.true, %if.end6
  %5 = bitcast i32* %hidden_weights to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #10
  %6 = load i32, i32* %hidden_layers.addr, align 4, !tbaa !13
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end10
  %7 = load i32, i32* %inputs.addr, align 4, !tbaa !13
  %add = add nsw i32 %7, 1
  %8 = load i32, i32* %hidden.addr, align 4, !tbaa !13
  %mul = mul nsw i32 %add, %8
  %9 = load i32, i32* %hidden_layers.addr, align 4, !tbaa !13
  %sub = sub nsw i32 %9, 1
  %10 = load i32, i32* %hidden.addr, align 4, !tbaa !13
  %add11 = add nsw i32 %10, 1
  %mul12 = mul nsw i32 %sub, %add11
  %11 = load i32, i32* %hidden.addr, align 4, !tbaa !13
  %mul13 = mul nsw i32 %mul12, %11
  %add14 = add nsw i32 %mul, %mul13
  br label %cond.end

cond.false:                                       ; preds = %if.end10
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add14, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %hidden_weights, align 4, !tbaa !13
  %12 = bitcast i32* %output_weights to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #10
  %13 = load i32, i32* %hidden_layers.addr, align 4, !tbaa !13
  %tobool15 = icmp ne i32 %13, 0
  br i1 %tobool15, label %cond.true16, label %cond.false18

cond.true16:                                      ; preds = %cond.end
  %14 = load i32, i32* %hidden.addr, align 4, !tbaa !13
  %add17 = add nsw i32 %14, 1
  br label %cond.end20

cond.false18:                                     ; preds = %cond.end
  %15 = load i32, i32* %inputs.addr, align 4, !tbaa !13
  %add19 = add nsw i32 %15, 1
  br label %cond.end20

cond.end20:                                       ; preds = %cond.false18, %cond.true16
  %cond21 = phi i32 [ %add17, %cond.true16 ], [ %add19, %cond.false18 ]
  %16 = load i32, i32* %outputs.addr, align 4, !tbaa !13
  %mul22 = mul nsw i32 %cond21, %16
  store i32 %mul22, i32* %output_weights, align 4, !tbaa !13
  %17 = bitcast i32* %total_weights to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #10
  %18 = load i32, i32* %hidden_weights, align 4, !tbaa !13
  %19 = load i32, i32* %output_weights, align 4, !tbaa !13
  %add23 = add nsw i32 %18, %19
  store i32 %add23, i32* %total_weights, align 4, !tbaa !13
  %20 = bitcast i32* %total_neurons to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #10
  %21 = load i32, i32* %inputs.addr, align 4, !tbaa !13
  %22 = load i32, i32* %hidden.addr, align 4, !tbaa !13
  %23 = load i32, i32* %hidden_layers.addr, align 4, !tbaa !13
  %mul24 = mul nsw i32 %22, %23
  %add25 = add nsw i32 %21, %mul24
  %24 = load i32, i32* %outputs.addr, align 4, !tbaa !13
  %add26 = add nsw i32 %add25, %24
  store i32 %add26, i32* %total_neurons, align 4, !tbaa !13
  %25 = bitcast i32* %size to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #10
  %26 = load i32, i32* %total_weights, align 4, !tbaa !13
  %27 = load i32, i32* %total_neurons, align 4, !tbaa !13
  %add27 = add nsw i32 %26, %27
  %28 = load i32, i32* %total_neurons, align 4, !tbaa !13
  %29 = load i32, i32* %inputs.addr, align 4, !tbaa !13
  %sub28 = sub nsw i32 %28, %29
  %add29 = add nsw i32 %add27, %sub28
  %conv = sext i32 %add29 to i64
  %mul30 = mul i64 8, %conv
  %add31 = add i64 64, %mul30
  %conv32 = trunc i64 %add31 to i32
  store i32 %conv32, i32* %size, align 4, !tbaa !13
  %30 = bitcast %struct.genann** %ret to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #10
  %31 = load i32, i32* %size, align 4, !tbaa !13
  %conv33 = sext i32 %31 to i64
  %call = call i8* @malloc(i64 %conv33) #12
  %32 = bitcast i8* %call to %struct.genann*
  store %struct.genann* %32, %struct.genann** %ret, align 8, !tbaa !3
  %33 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %tobool34 = icmp ne %struct.genann* %33, null
  br i1 %tobool34, label %if.end36, label %if.then35

if.then35:                                        ; preds = %cond.end20
  store %struct.genann* null, %struct.genann** %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end36:                                         ; preds = %cond.end20
  %34 = load i32, i32* %inputs.addr, align 4, !tbaa !13
  %35 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %inputs37 = getelementptr inbounds %struct.genann, %struct.genann* %35, i32 0, i32 0
  store i32 %34, i32* %inputs37, align 8, !tbaa !16
  %36 = load i32, i32* %hidden_layers.addr, align 4, !tbaa !13
  %37 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %hidden_layers38 = getelementptr inbounds %struct.genann, %struct.genann* %37, i32 0, i32 1
  store i32 %36, i32* %hidden_layers38, align 4, !tbaa !17
  %38 = load i32, i32* %hidden.addr, align 4, !tbaa !13
  %39 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %hidden39 = getelementptr inbounds %struct.genann, %struct.genann* %39, i32 0, i32 2
  store i32 %38, i32* %hidden39, align 8, !tbaa !18
  %40 = load i32, i32* %outputs.addr, align 4, !tbaa !13
  %41 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %outputs40 = getelementptr inbounds %struct.genann, %struct.genann* %41, i32 0, i32 3
  store i32 %40, i32* %outputs40, align 4, !tbaa !19
  %42 = load i32, i32* %total_weights, align 4, !tbaa !13
  %43 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %total_weights41 = getelementptr inbounds %struct.genann, %struct.genann* %43, i32 0, i32 6
  store i32 %42, i32* %total_weights41, align 8, !tbaa !20
  %44 = load i32, i32* %total_neurons, align 4, !tbaa !13
  %45 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %total_neurons42 = getelementptr inbounds %struct.genann, %struct.genann* %45, i32 0, i32 7
  store i32 %44, i32* %total_neurons42, align 4, !tbaa !21
  %46 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %47 = bitcast %struct.genann* %46 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 64
  %48 = bitcast i8* %add.ptr to double*
  %49 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %weight = getelementptr inbounds %struct.genann, %struct.genann* %49, i32 0, i32 8
  store double* %48, double** %weight, align 8, !tbaa !22
  %50 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %weight43 = getelementptr inbounds %struct.genann, %struct.genann* %50, i32 0, i32 8
  %51 = load double*, double** %weight43, align 8, !tbaa !22
  %52 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %total_weights44 = getelementptr inbounds %struct.genann, %struct.genann* %52, i32 0, i32 6
  %53 = load i32, i32* %total_weights44, align 8, !tbaa !20
  %idx.ext = sext i32 %53 to i64
  %add.ptr45 = getelementptr inbounds double, double* %51, i64 %idx.ext
  %54 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %output = getelementptr inbounds %struct.genann, %struct.genann* %54, i32 0, i32 9
  store double* %add.ptr45, double** %output, align 8, !tbaa !23
  %55 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %output46 = getelementptr inbounds %struct.genann, %struct.genann* %55, i32 0, i32 9
  %56 = load double*, double** %output46, align 8, !tbaa !23
  %57 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %total_neurons47 = getelementptr inbounds %struct.genann, %struct.genann* %57, i32 0, i32 7
  %58 = load i32, i32* %total_neurons47, align 4, !tbaa !21
  %idx.ext48 = sext i32 %58 to i64
  %add.ptr49 = getelementptr inbounds double, double* %56, i64 %idx.ext48
  %59 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %delta = getelementptr inbounds %struct.genann, %struct.genann* %59, i32 0, i32 10
  store double* %add.ptr49, double** %delta, align 8, !tbaa !24
  %60 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  call void @genann_randomize(%struct.genann* %60)
  %61 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %activation_hidden = getelementptr inbounds %struct.genann, %struct.genann* %61, i32 0, i32 4
  %activation_hidden50 = bitcast {}** %activation_hidden to double (%struct.genann*, double)**
  store double (%struct.genann*, double)* @genann_act_sigmoid_cached, double (%struct.genann*, double)** %activation_hidden50, align 8, !tbaa !9
  %62 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %activation_output = getelementptr inbounds %struct.genann, %struct.genann* %62, i32 0, i32 5
  %activation_output51 = bitcast {}** %activation_output to double (%struct.genann*, double)**
  store double (%struct.genann*, double)* @genann_act_sigmoid_cached, double (%struct.genann*, double)** %activation_output51, align 8, !tbaa !12
  %63 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  call void @genann_init_sigmoid_lookup(%struct.genann* %63)
  %64 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  store %struct.genann* %64, %struct.genann** %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end36, %if.then35
  %65 = bitcast %struct.genann** %ret to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %65) #10
  %66 = bitcast i32* %size to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #10
  %67 = bitcast i32* %total_neurons to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %67) #10
  %68 = bitcast i32* %total_weights to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %68) #10
  %69 = bitcast i32* %output_weights to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %69) #10
  %70 = bitcast i32* %hidden_weights to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %70) #10
  br label %return

return:                                           ; preds = %cleanup, %if.then9, %if.then5, %if.then2, %if.then
  %71 = load %struct.genann*, %struct.genann** %retval, align 8
  ret %struct.genann* %71
}

; Function Attrs: allocsize(0)
declare i8* @malloc(i64) #6

; Function Attrs: nounwind ssp uwtable
define void @genann_randomize(%struct.genann* %ann) #0 {
entry:
  %ann.addr = alloca %struct.genann*, align 8
  %i = alloca i32, align 4
  %r = alloca double, align 8
  store %struct.genann* %ann, %struct.genann** %ann.addr, align 8, !tbaa !3
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #10
  store i32 0, i32* %i, align 4, !tbaa !13
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !13
  %2 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %total_weights = getelementptr inbounds %struct.genann, %struct.genann* %2, i32 0, i32 6
  %3 = load i32, i32* %total_weights, align 8, !tbaa !20
  %cmp = icmp slt i32 %1, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = bitcast double* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #10
  %call = call i32 @rand()
  %conv = sitofp i32 %call to double
  %div = fdiv double %conv, 0x41DFFFFFFFC00000
  store double %div, double* %r, align 8, !tbaa !7
  %5 = load double, double* %r, align 8, !tbaa !7
  %sub = fsub double %5, 5.000000e-01
  %6 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %weight = getelementptr inbounds %struct.genann, %struct.genann* %6, i32 0, i32 8
  %7 = load double*, double** %weight, align 8, !tbaa !22
  %8 = load i32, i32* %i, align 4, !tbaa !13
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds double, double* %7, i64 %idxprom
  store double %sub, double* %arrayidx, align 8, !tbaa !7
  %9 = bitcast double* %r to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #10
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !tbaa !13
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4, !tbaa !13
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %11 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %11) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %struct.genann* @genann_read(%struct.__sFILE* %in) #0 {
entry:
  %retval = alloca %struct.genann*, align 8
  %in.addr = alloca %struct.__sFILE*, align 8
  %inputs = alloca i32, align 4
  %hidden_layers = alloca i32, align 4
  %hidden = alloca i32, align 4
  %outputs = alloca i32, align 4
  %rc = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %ann = alloca %struct.genann*, align 8
  %i = alloca i32, align 4
  store %struct.__sFILE* %in, %struct.__sFILE** %in.addr, align 8, !tbaa !3
  %0 = bitcast i32* %inputs to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #10
  %1 = bitcast i32* %hidden_layers to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #10
  %2 = bitcast i32* %hidden to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #10
  %3 = bitcast i32* %outputs to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #10
  %4 = bitcast i32* %rc to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #10
  %call = call i32* @__error()
  store i32 0, i32* %call, align 4, !tbaa !13
  %5 = load %struct.__sFILE*, %struct.__sFILE** %in.addr, align 8, !tbaa !3
  %call1 = call i32 (%struct.__sFILE*, i8*, ...) @fscanf(%struct.__sFILE* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32* %inputs, i32* %hidden_layers, i32* %hidden, i32* %outputs)
  store i32 %call1, i32* %rc, align 4, !tbaa !13
  %6 = load i32, i32* %rc, align 4, !tbaa !13
  %cmp = icmp slt i32 %6, 4
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %call2 = call i32* @__error()
  %7 = load i32, i32* %call2, align 4, !tbaa !13
  %cmp3 = icmp ne i32 %7, 0
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0)) #13
  store %struct.genann* null, %struct.genann** %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup15

if.end:                                           ; preds = %lor.lhs.false
  %8 = bitcast %struct.genann** %ann to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #10
  %9 = load i32, i32* %inputs, align 4, !tbaa !13
  %10 = load i32, i32* %hidden_layers, align 4, !tbaa !13
  %11 = load i32, i32* %hidden, align 4, !tbaa !13
  %12 = load i32, i32* %outputs, align 4, !tbaa !13
  %call4 = call %struct.genann* @genann_init(i32 %9, i32 %10, i32 %11, i32 %12)
  store %struct.genann* %call4, %struct.genann** %ann, align 8, !tbaa !3
  %13 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #10
  store i32 0, i32* %i, align 4, !tbaa !13
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !tbaa !13
  %15 = load %struct.genann*, %struct.genann** %ann, align 8, !tbaa !3
  %total_weights = getelementptr inbounds %struct.genann, %struct.genann* %15, i32 0, i32 6
  %16 = load i32, i32* %total_weights, align 8, !tbaa !20
  %cmp5 = icmp slt i32 %14, %16
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call6 = call i32* @__error()
  store i32 0, i32* %call6, align 4, !tbaa !13
  %17 = load %struct.__sFILE*, %struct.__sFILE** %in.addr, align 8, !tbaa !3
  %18 = load %struct.genann*, %struct.genann** %ann, align 8, !tbaa !3
  %weight = getelementptr inbounds %struct.genann, %struct.genann* %18, i32 0, i32 8
  %19 = load double*, double** %weight, align 8, !tbaa !22
  %20 = load i32, i32* %i, align 4, !tbaa !13
  %idx.ext = sext i32 %20 to i64
  %add.ptr = getelementptr inbounds double, double* %19, i64 %idx.ext
  %call7 = call i32 (%struct.__sFILE*, i8*, ...) @fscanf(%struct.__sFILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), double* %add.ptr)
  store i32 %call7, i32* %rc, align 4, !tbaa !13
  %21 = load i32, i32* %rc, align 4, !tbaa !13
  %cmp8 = icmp slt i32 %21, 1
  br i1 %cmp8, label %if.then12, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %for.body
  %call10 = call i32* @__error()
  %22 = load i32, i32* %call10, align 4, !tbaa !13
  %cmp11 = icmp ne i32 %22, 0
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %lor.lhs.false9, %for.body
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0)) #13
  %23 = load %struct.genann*, %struct.genann** %ann, align 8, !tbaa !3
  call void @genann_free(%struct.genann* %23)
  store %struct.genann* null, %struct.genann** %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end13:                                         ; preds = %lor.lhs.false9
  br label %for.inc

for.inc:                                          ; preds = %if.end13
  %24 = load i32, i32* %i, align 4, !tbaa !13
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %i, align 4, !tbaa !13
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %25 = load %struct.genann*, %struct.genann** %ann, align 8, !tbaa !3
  store %struct.genann* %25, %struct.genann** %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then12
  %26 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %26) #10
  %27 = bitcast %struct.genann** %ann to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #10
  br label %cleanup15

cleanup15:                                        ; preds = %cleanup, %if.then
  %28 = bitcast i32* %rc to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %28) #10
  %29 = bitcast i32* %outputs to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %29) #10
  %30 = bitcast i32* %hidden to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %30) #10
  %31 = bitcast i32* %hidden_layers to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %31) #10
  %32 = bitcast i32* %inputs to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %32) #10
  %33 = load %struct.genann*, %struct.genann** %retval, align 8
  ret %struct.genann* %33
}

declare i32* @__error() #7

declare i32 @fscanf(%struct.__sFILE*, i8*, ...) #7

; Function Attrs: cold
declare void @perror(i8*) #8

; Function Attrs: nounwind ssp uwtable
define void @genann_free(%struct.genann* %ann) #0 {
entry:
  %ann.addr = alloca %struct.genann*, align 8
  store %struct.genann* %ann, %struct.genann** %ann.addr, align 8, !tbaa !3
  %0 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %1 = bitcast %struct.genann* %0 to i8*
  call void @free(i8* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %struct.genann* @genann_copy(%struct.genann* %ann) #0 {
entry:
  %retval = alloca %struct.genann*, align 8
  %ann.addr = alloca %struct.genann*, align 8
  %size = alloca i32, align 4
  %ret = alloca %struct.genann*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.genann* %ann, %struct.genann** %ann.addr, align 8, !tbaa !3
  %0 = bitcast i32* %size to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #10
  %1 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %total_weights = getelementptr inbounds %struct.genann, %struct.genann* %1, i32 0, i32 6
  %2 = load i32, i32* %total_weights, align 8, !tbaa !20
  %3 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %total_neurons = getelementptr inbounds %struct.genann, %struct.genann* %3, i32 0, i32 7
  %4 = load i32, i32* %total_neurons, align 4, !tbaa !21
  %add = add nsw i32 %2, %4
  %5 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %total_neurons1 = getelementptr inbounds %struct.genann, %struct.genann* %5, i32 0, i32 7
  %6 = load i32, i32* %total_neurons1, align 4, !tbaa !21
  %7 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs = getelementptr inbounds %struct.genann, %struct.genann* %7, i32 0, i32 0
  %8 = load i32, i32* %inputs, align 8, !tbaa !16
  %sub = sub nsw i32 %6, %8
  %add2 = add nsw i32 %add, %sub
  %conv = sext i32 %add2 to i64
  %mul = mul i64 8, %conv
  %add3 = add i64 64, %mul
  %conv4 = trunc i64 %add3 to i32
  store i32 %conv4, i32* %size, align 4, !tbaa !13
  %9 = bitcast %struct.genann** %ret to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #10
  %10 = load i32, i32* %size, align 4, !tbaa !13
  %conv5 = sext i32 %10 to i64
  %call = call i8* @malloc(i64 %conv5) #12
  %11 = bitcast i8* %call to %struct.genann*
  store %struct.genann* %11, %struct.genann** %ret, align 8, !tbaa !3
  %12 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %tobool = icmp ne %struct.genann* %12, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.genann* null, %struct.genann** %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %13 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %14 = bitcast %struct.genann* %13 to i8*
  %15 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %16 = bitcast %struct.genann* %15 to i8*
  %17 = load i32, i32* %size, align 4, !tbaa !13
  %conv6 = sext i32 %17 to i64
  %18 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %19 = bitcast %struct.genann* %18 to i8*
  %20 = call i64 @llvm.objectsize.i64.p0i8(i8* %19, i1 false, i1 true)
  %call7 = call i8* @__memcpy_chk(i8* %14, i8* %16, i64 %conv6, i64 %20) #10
  %21 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %22 = bitcast %struct.genann* %21 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 64
  %23 = bitcast i8* %add.ptr to double*
  %24 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %weight = getelementptr inbounds %struct.genann, %struct.genann* %24, i32 0, i32 8
  store double* %23, double** %weight, align 8, !tbaa !22
  %25 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %weight8 = getelementptr inbounds %struct.genann, %struct.genann* %25, i32 0, i32 8
  %26 = load double*, double** %weight8, align 8, !tbaa !22
  %27 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %total_weights9 = getelementptr inbounds %struct.genann, %struct.genann* %27, i32 0, i32 6
  %28 = load i32, i32* %total_weights9, align 8, !tbaa !20
  %idx.ext = sext i32 %28 to i64
  %add.ptr10 = getelementptr inbounds double, double* %26, i64 %idx.ext
  %29 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %output = getelementptr inbounds %struct.genann, %struct.genann* %29, i32 0, i32 9
  store double* %add.ptr10, double** %output, align 8, !tbaa !23
  %30 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %output11 = getelementptr inbounds %struct.genann, %struct.genann* %30, i32 0, i32 9
  %31 = load double*, double** %output11, align 8, !tbaa !23
  %32 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %total_neurons12 = getelementptr inbounds %struct.genann, %struct.genann* %32, i32 0, i32 7
  %33 = load i32, i32* %total_neurons12, align 4, !tbaa !21
  %idx.ext13 = sext i32 %33 to i64
  %add.ptr14 = getelementptr inbounds double, double* %31, i64 %idx.ext13
  %34 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  %delta = getelementptr inbounds %struct.genann, %struct.genann* %34, i32 0, i32 10
  store double* %add.ptr14, double** %delta, align 8, !tbaa !24
  %35 = load %struct.genann*, %struct.genann** %ret, align 8, !tbaa !3
  store %struct.genann* %35, %struct.genann** %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %36 = bitcast %struct.genann** %ret to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #10
  %37 = bitcast i32* %size to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %37) #10
  %38 = load %struct.genann*, %struct.genann** %retval, align 8
  ret %struct.genann* %38
}

; Function Attrs: nounwind
declare i8* @__memcpy_chk(i8*, i8*, i64, i64) #9

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1, i1) #1

declare i32 @rand() #7

declare void @free(i8*) #7

; Function Attrs: nounwind ssp uwtable
define double* @genann_run(%struct.genann* %ann, double* %inputs) #0 {
entry:
  %retval = alloca double*, align 8
  %ann.addr = alloca %struct.genann*, align 8
  %inputs.addr = alloca double*, align 8
  %w = alloca double*, align 8
  %o = alloca double*, align 8
  %i = alloca double*, align 8
  %h = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ret = alloca double*, align 8
  %sum = alloca double, align 8
  %cleanup.dest.slot = alloca i32
  %sum24 = alloca double, align 8
  %sum58 = alloca double, align 8
  %ret85 = alloca double*, align 8
  %sum91 = alloca double, align 8
  store %struct.genann* %ann, %struct.genann** %ann.addr, align 8, !tbaa !3
  store double* %inputs, double** %inputs.addr, align 8, !tbaa !3
  %0 = bitcast double** %w to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #10
  %1 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %weight = getelementptr inbounds %struct.genann, %struct.genann* %1, i32 0, i32 8
  %2 = load double*, double** %weight, align 8, !tbaa !22
  store double* %2, double** %w, align 8, !tbaa !3
  %3 = bitcast double** %o to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #10
  %4 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %output = getelementptr inbounds %struct.genann, %struct.genann* %4, i32 0, i32 9
  %5 = load double*, double** %output, align 8, !tbaa !23
  %6 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs1 = getelementptr inbounds %struct.genann, %struct.genann* %6, i32 0, i32 0
  %7 = load i32, i32* %inputs1, align 8, !tbaa !16
  %idx.ext = sext i32 %7 to i64
  %add.ptr = getelementptr inbounds double, double* %5, i64 %idx.ext
  store double* %add.ptr, double** %o, align 8, !tbaa !3
  %8 = bitcast double** %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #10
  %9 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %output2 = getelementptr inbounds %struct.genann, %struct.genann* %9, i32 0, i32 9
  %10 = load double*, double** %output2, align 8, !tbaa !23
  store double* %10, double** %i, align 8, !tbaa !3
  %11 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %output3 = getelementptr inbounds %struct.genann, %struct.genann* %11, i32 0, i32 9
  %12 = load double*, double** %output3, align 8, !tbaa !23
  %13 = bitcast double* %12 to i8*
  %14 = load double*, double** %inputs.addr, align 8, !tbaa !3
  %15 = bitcast double* %14 to i8*
  %16 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs4 = getelementptr inbounds %struct.genann, %struct.genann* %16, i32 0, i32 0
  %17 = load i32, i32* %inputs4, align 8, !tbaa !16
  %conv = sext i32 %17 to i64
  %mul = mul i64 8, %conv
  %18 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %output5 = getelementptr inbounds %struct.genann, %struct.genann* %18, i32 0, i32 9
  %19 = load double*, double** %output5, align 8, !tbaa !23
  %20 = bitcast double* %19 to i8*
  %21 = call i64 @llvm.objectsize.i64.p0i8(i8* %20, i1 false, i1 true)
  %call = call i8* @__memcpy_chk(i8* %13, i8* %15, i64 %mul, i64 %21) #10
  %22 = bitcast i32* %h to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #10
  %23 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #10
  %24 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #10
  %25 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden_layers = getelementptr inbounds %struct.genann, %struct.genann* %25, i32 0, i32 1
  %26 = load i32, i32* %hidden_layers, align 4, !tbaa !17
  %tobool = icmp ne i32 %26, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %27 = bitcast double** %ret to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #10
  %28 = load double*, double** %o, align 8, !tbaa !3
  store double* %28, double** %ret, align 8, !tbaa !3
  store i32 0, i32* %j, align 4, !tbaa !13
  br label %for.cond

for.cond:                                         ; preds = %for.inc17, %if.then
  %29 = load i32, i32* %j, align 4, !tbaa !13
  %30 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %outputs = getelementptr inbounds %struct.genann, %struct.genann* %30, i32 0, i32 3
  %31 = load i32, i32* %outputs, align 4, !tbaa !19
  %cmp = icmp slt i32 %29, %31
  br i1 %cmp, label %for.body, label %for.end19

for.body:                                         ; preds = %for.cond
  %32 = bitcast double* %sum to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #10
  %33 = load double*, double** %w, align 8, !tbaa !3
  %incdec.ptr = getelementptr inbounds double, double* %33, i32 1
  store double* %incdec.ptr, double** %w, align 8, !tbaa !3
  %34 = load double, double* %33, align 8, !tbaa !7
  %mul7 = fmul double %34, -1.000000e+00
  store double %mul7, double* %sum, align 8, !tbaa !7
  store i32 0, i32* %k, align 4, !tbaa !13
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc, %for.body
  %35 = load i32, i32* %k, align 4, !tbaa !13
  %36 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs9 = getelementptr inbounds %struct.genann, %struct.genann* %36, i32 0, i32 0
  %37 = load i32, i32* %inputs9, align 8, !tbaa !16
  %cmp10 = icmp slt i32 %35, %37
  br i1 %cmp10, label %for.body12, label %for.end

for.body12:                                       ; preds = %for.cond8
  %38 = load double*, double** %w, align 8, !tbaa !3
  %incdec.ptr13 = getelementptr inbounds double, double* %38, i32 1
  store double* %incdec.ptr13, double** %w, align 8, !tbaa !3
  %39 = load double, double* %38, align 8, !tbaa !7
  %40 = load double*, double** %i, align 8, !tbaa !3
  %41 = load i32, i32* %k, align 4, !tbaa !13
  %idxprom = sext i32 %41 to i64
  %arrayidx = getelementptr inbounds double, double* %40, i64 %idxprom
  %42 = load double, double* %arrayidx, align 8, !tbaa !7
  %mul14 = fmul double %39, %42
  %43 = load double, double* %sum, align 8, !tbaa !7
  %add = fadd double %43, %mul14
  store double %add, double* %sum, align 8, !tbaa !7
  br label %for.inc

for.inc:                                          ; preds = %for.body12
  %44 = load i32, i32* %k, align 4, !tbaa !13
  %inc = add nsw i32 %44, 1
  store i32 %inc, i32* %k, align 4, !tbaa !13
  br label %for.cond8

for.end:                                          ; preds = %for.cond8
  %45 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %46 = load double, double* %sum, align 8, !tbaa !7
  %call15 = call double @genann_act_output_indirect(%struct.genann* %45, double %46)
  %47 = load double*, double** %o, align 8, !tbaa !3
  %incdec.ptr16 = getelementptr inbounds double, double* %47, i32 1
  store double* %incdec.ptr16, double** %o, align 8, !tbaa !3
  store double %call15, double* %47, align 8, !tbaa !7
  %48 = bitcast double* %sum to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #10
  br label %for.inc17

for.inc17:                                        ; preds = %for.end
  %49 = load i32, i32* %j, align 4, !tbaa !13
  %inc18 = add nsw i32 %49, 1
  store i32 %inc18, i32* %j, align 4, !tbaa !13
  br label %for.cond

for.end19:                                        ; preds = %for.cond
  %50 = load double*, double** %ret, align 8, !tbaa !3
  store double* %50, double** %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  %51 = bitcast double** %ret to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #10
  br label %cleanup

if.end:                                           ; preds = %entry
  store i32 0, i32* %j, align 4, !tbaa !13
  br label %for.cond20

for.cond20:                                       ; preds = %for.inc42, %if.end
  %52 = load i32, i32* %j, align 4, !tbaa !13
  %53 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden = getelementptr inbounds %struct.genann, %struct.genann* %53, i32 0, i32 2
  %54 = load i32, i32* %hidden, align 8, !tbaa !18
  %cmp21 = icmp slt i32 %52, %54
  br i1 %cmp21, label %for.body23, label %for.end44

for.body23:                                       ; preds = %for.cond20
  %55 = bitcast double* %sum24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #10
  %56 = load double*, double** %w, align 8, !tbaa !3
  %incdec.ptr25 = getelementptr inbounds double, double* %56, i32 1
  store double* %incdec.ptr25, double** %w, align 8, !tbaa !3
  %57 = load double, double* %56, align 8, !tbaa !7
  %mul26 = fmul double %57, -1.000000e+00
  store double %mul26, double* %sum24, align 8, !tbaa !7
  store i32 0, i32* %k, align 4, !tbaa !13
  br label %for.cond27

for.cond27:                                       ; preds = %for.inc37, %for.body23
  %58 = load i32, i32* %k, align 4, !tbaa !13
  %59 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs28 = getelementptr inbounds %struct.genann, %struct.genann* %59, i32 0, i32 0
  %60 = load i32, i32* %inputs28, align 8, !tbaa !16
  %cmp29 = icmp slt i32 %58, %60
  br i1 %cmp29, label %for.body31, label %for.end39

for.body31:                                       ; preds = %for.cond27
  %61 = load double*, double** %w, align 8, !tbaa !3
  %incdec.ptr32 = getelementptr inbounds double, double* %61, i32 1
  store double* %incdec.ptr32, double** %w, align 8, !tbaa !3
  %62 = load double, double* %61, align 8, !tbaa !7
  %63 = load double*, double** %i, align 8, !tbaa !3
  %64 = load i32, i32* %k, align 4, !tbaa !13
  %idxprom33 = sext i32 %64 to i64
  %arrayidx34 = getelementptr inbounds double, double* %63, i64 %idxprom33
  %65 = load double, double* %arrayidx34, align 8, !tbaa !7
  %mul35 = fmul double %62, %65
  %66 = load double, double* %sum24, align 8, !tbaa !7
  %add36 = fadd double %66, %mul35
  store double %add36, double* %sum24, align 8, !tbaa !7
  br label %for.inc37

for.inc37:                                        ; preds = %for.body31
  %67 = load i32, i32* %k, align 4, !tbaa !13
  %inc38 = add nsw i32 %67, 1
  store i32 %inc38, i32* %k, align 4, !tbaa !13
  br label %for.cond27

for.end39:                                        ; preds = %for.cond27
  %68 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %69 = load double, double* %sum24, align 8, !tbaa !7
  %call40 = call double @genann_act_hidden_indirect(%struct.genann* %68, double %69)
  %70 = load double*, double** %o, align 8, !tbaa !3
  %incdec.ptr41 = getelementptr inbounds double, double* %70, i32 1
  store double* %incdec.ptr41, double** %o, align 8, !tbaa !3
  store double %call40, double* %70, align 8, !tbaa !7
  %71 = bitcast double* %sum24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %71) #10
  br label %for.inc42

for.inc42:                                        ; preds = %for.end39
  %72 = load i32, i32* %j, align 4, !tbaa !13
  %inc43 = add nsw i32 %72, 1
  store i32 %inc43, i32* %j, align 4, !tbaa !13
  br label %for.cond20

for.end44:                                        ; preds = %for.cond20
  %73 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs45 = getelementptr inbounds %struct.genann, %struct.genann* %73, i32 0, i32 0
  %74 = load i32, i32* %inputs45, align 8, !tbaa !16
  %75 = load double*, double** %i, align 8, !tbaa !3
  %idx.ext46 = sext i32 %74 to i64
  %add.ptr47 = getelementptr inbounds double, double* %75, i64 %idx.ext46
  store double* %add.ptr47, double** %i, align 8, !tbaa !3
  store i32 1, i32* %h, align 4, !tbaa !13
  br label %for.cond48

for.cond48:                                       ; preds = %for.inc82, %for.end44
  %76 = load i32, i32* %h, align 4, !tbaa !13
  %77 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden_layers49 = getelementptr inbounds %struct.genann, %struct.genann* %77, i32 0, i32 1
  %78 = load i32, i32* %hidden_layers49, align 4, !tbaa !17
  %cmp50 = icmp slt i32 %76, %78
  br i1 %cmp50, label %for.body52, label %for.end84

for.body52:                                       ; preds = %for.cond48
  store i32 0, i32* %j, align 4, !tbaa !13
  br label %for.cond53

for.cond53:                                       ; preds = %for.inc76, %for.body52
  %79 = load i32, i32* %j, align 4, !tbaa !13
  %80 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden54 = getelementptr inbounds %struct.genann, %struct.genann* %80, i32 0, i32 2
  %81 = load i32, i32* %hidden54, align 8, !tbaa !18
  %cmp55 = icmp slt i32 %79, %81
  br i1 %cmp55, label %for.body57, label %for.end78

for.body57:                                       ; preds = %for.cond53
  %82 = bitcast double* %sum58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %82) #10
  %83 = load double*, double** %w, align 8, !tbaa !3
  %incdec.ptr59 = getelementptr inbounds double, double* %83, i32 1
  store double* %incdec.ptr59, double** %w, align 8, !tbaa !3
  %84 = load double, double* %83, align 8, !tbaa !7
  %mul60 = fmul double %84, -1.000000e+00
  store double %mul60, double* %sum58, align 8, !tbaa !7
  store i32 0, i32* %k, align 4, !tbaa !13
  br label %for.cond61

for.cond61:                                       ; preds = %for.inc71, %for.body57
  %85 = load i32, i32* %k, align 4, !tbaa !13
  %86 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden62 = getelementptr inbounds %struct.genann, %struct.genann* %86, i32 0, i32 2
  %87 = load i32, i32* %hidden62, align 8, !tbaa !18
  %cmp63 = icmp slt i32 %85, %87
  br i1 %cmp63, label %for.body65, label %for.end73

for.body65:                                       ; preds = %for.cond61
  %88 = load double*, double** %w, align 8, !tbaa !3
  %incdec.ptr66 = getelementptr inbounds double, double* %88, i32 1
  store double* %incdec.ptr66, double** %w, align 8, !tbaa !3
  %89 = load double, double* %88, align 8, !tbaa !7
  %90 = load double*, double** %i, align 8, !tbaa !3
  %91 = load i32, i32* %k, align 4, !tbaa !13
  %idxprom67 = sext i32 %91 to i64
  %arrayidx68 = getelementptr inbounds double, double* %90, i64 %idxprom67
  %92 = load double, double* %arrayidx68, align 8, !tbaa !7
  %mul69 = fmul double %89, %92
  %93 = load double, double* %sum58, align 8, !tbaa !7
  %add70 = fadd double %93, %mul69
  store double %add70, double* %sum58, align 8, !tbaa !7
  br label %for.inc71

for.inc71:                                        ; preds = %for.body65
  %94 = load i32, i32* %k, align 4, !tbaa !13
  %inc72 = add nsw i32 %94, 1
  store i32 %inc72, i32* %k, align 4, !tbaa !13
  br label %for.cond61

for.end73:                                        ; preds = %for.cond61
  %95 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %96 = load double, double* %sum58, align 8, !tbaa !7
  %call74 = call double @genann_act_hidden_indirect(%struct.genann* %95, double %96)
  %97 = load double*, double** %o, align 8, !tbaa !3
  %incdec.ptr75 = getelementptr inbounds double, double* %97, i32 1
  store double* %incdec.ptr75, double** %o, align 8, !tbaa !3
  store double %call74, double* %97, align 8, !tbaa !7
  %98 = bitcast double* %sum58 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #10
  br label %for.inc76

for.inc76:                                        ; preds = %for.end73
  %99 = load i32, i32* %j, align 4, !tbaa !13
  %inc77 = add nsw i32 %99, 1
  store i32 %inc77, i32* %j, align 4, !tbaa !13
  br label %for.cond53

for.end78:                                        ; preds = %for.cond53
  %100 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden79 = getelementptr inbounds %struct.genann, %struct.genann* %100, i32 0, i32 2
  %101 = load i32, i32* %hidden79, align 8, !tbaa !18
  %102 = load double*, double** %i, align 8, !tbaa !3
  %idx.ext80 = sext i32 %101 to i64
  %add.ptr81 = getelementptr inbounds double, double* %102, i64 %idx.ext80
  store double* %add.ptr81, double** %i, align 8, !tbaa !3
  br label %for.inc82

for.inc82:                                        ; preds = %for.end78
  %103 = load i32, i32* %h, align 4, !tbaa !13
  %inc83 = add nsw i32 %103, 1
  store i32 %inc83, i32* %h, align 4, !tbaa !13
  br label %for.cond48

for.end84:                                        ; preds = %for.cond48
  %104 = bitcast double** %ret85 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %104) #10
  %105 = load double*, double** %o, align 8, !tbaa !3
  store double* %105, double** %ret85, align 8, !tbaa !3
  store i32 0, i32* %j, align 4, !tbaa !13
  br label %for.cond86

for.cond86:                                       ; preds = %for.inc109, %for.end84
  %106 = load i32, i32* %j, align 4, !tbaa !13
  %107 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %outputs87 = getelementptr inbounds %struct.genann, %struct.genann* %107, i32 0, i32 3
  %108 = load i32, i32* %outputs87, align 4, !tbaa !19
  %cmp88 = icmp slt i32 %106, %108
  br i1 %cmp88, label %for.body90, label %for.end111

for.body90:                                       ; preds = %for.cond86
  %109 = bitcast double* %sum91 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109) #10
  %110 = load double*, double** %w, align 8, !tbaa !3
  %incdec.ptr92 = getelementptr inbounds double, double* %110, i32 1
  store double* %incdec.ptr92, double** %w, align 8, !tbaa !3
  %111 = load double, double* %110, align 8, !tbaa !7
  %mul93 = fmul double %111, -1.000000e+00
  store double %mul93, double* %sum91, align 8, !tbaa !7
  store i32 0, i32* %k, align 4, !tbaa !13
  br label %for.cond94

for.cond94:                                       ; preds = %for.inc104, %for.body90
  %112 = load i32, i32* %k, align 4, !tbaa !13
  %113 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden95 = getelementptr inbounds %struct.genann, %struct.genann* %113, i32 0, i32 2
  %114 = load i32, i32* %hidden95, align 8, !tbaa !18
  %cmp96 = icmp slt i32 %112, %114
  br i1 %cmp96, label %for.body98, label %for.end106

for.body98:                                       ; preds = %for.cond94
  %115 = load double*, double** %w, align 8, !tbaa !3
  %incdec.ptr99 = getelementptr inbounds double, double* %115, i32 1
  store double* %incdec.ptr99, double** %w, align 8, !tbaa !3
  %116 = load double, double* %115, align 8, !tbaa !7
  %117 = load double*, double** %i, align 8, !tbaa !3
  %118 = load i32, i32* %k, align 4, !tbaa !13
  %idxprom100 = sext i32 %118 to i64
  %arrayidx101 = getelementptr inbounds double, double* %117, i64 %idxprom100
  %119 = load double, double* %arrayidx101, align 8, !tbaa !7
  %mul102 = fmul double %116, %119
  %120 = load double, double* %sum91, align 8, !tbaa !7
  %add103 = fadd double %120, %mul102
  store double %add103, double* %sum91, align 8, !tbaa !7
  br label %for.inc104

for.inc104:                                       ; preds = %for.body98
  %121 = load i32, i32* %k, align 4, !tbaa !13
  %inc105 = add nsw i32 %121, 1
  store i32 %inc105, i32* %k, align 4, !tbaa !13
  br label %for.cond94

for.end106:                                       ; preds = %for.cond94
  %122 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %123 = load double, double* %sum91, align 8, !tbaa !7
  %call107 = call double @genann_act_output_indirect(%struct.genann* %122, double %123)
  %124 = load double*, double** %o, align 8, !tbaa !3
  %incdec.ptr108 = getelementptr inbounds double, double* %124, i32 1
  store double* %incdec.ptr108, double** %o, align 8, !tbaa !3
  store double %call107, double* %124, align 8, !tbaa !7
  %125 = bitcast double* %sum91 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #10
  br label %for.inc109

for.inc109:                                       ; preds = %for.end106
  %126 = load i32, i32* %j, align 4, !tbaa !13
  %inc110 = add nsw i32 %126, 1
  store i32 %inc110, i32* %j, align 4, !tbaa !13
  br label %for.cond86

for.end111:                                       ; preds = %for.cond86
  %127 = load double*, double** %w, align 8, !tbaa !3
  %128 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %weight112 = getelementptr inbounds %struct.genann, %struct.genann* %128, i32 0, i32 8
  %129 = load double*, double** %weight112, align 8, !tbaa !22
  %sub.ptr.lhs.cast = ptrtoint double* %127 to i64
  %sub.ptr.rhs.cast = ptrtoint double* %129 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %130 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %total_weights = getelementptr inbounds %struct.genann, %struct.genann* %130, i32 0, i32 6
  %131 = load i32, i32* %total_weights, align 8, !tbaa !20
  %conv113 = sext i32 %131 to i64
  %cmp114 = icmp eq i64 %sub.ptr.div, %conv113
  %lnot = xor i1 %cmp114, true
  %lnot.ext = zext i1 %lnot to i32
  %conv116 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv116, i64 0)
  %tobool117 = icmp ne i64 %expval, 0
  br i1 %tobool117, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.end111
  call void @__assert_rtn(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.genann_run, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 271, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i32 0, i32 0)) #11
  unreachable
                                                  ; No predecessors!
  br label %cond.end

cond.false:                                       ; preds = %for.end111
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %132
  %133 = load double*, double** %o, align 8, !tbaa !3
  %134 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %output118 = getelementptr inbounds %struct.genann, %struct.genann* %134, i32 0, i32 9
  %135 = load double*, double** %output118, align 8, !tbaa !23
  %sub.ptr.lhs.cast119 = ptrtoint double* %133 to i64
  %sub.ptr.rhs.cast120 = ptrtoint double* %135 to i64
  %sub.ptr.sub121 = sub i64 %sub.ptr.lhs.cast119, %sub.ptr.rhs.cast120
  %sub.ptr.div122 = sdiv exact i64 %sub.ptr.sub121, 8
  %136 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %total_neurons = getelementptr inbounds %struct.genann, %struct.genann* %136, i32 0, i32 7
  %137 = load i32, i32* %total_neurons, align 4, !tbaa !21
  %conv123 = sext i32 %137 to i64
  %cmp124 = icmp eq i64 %sub.ptr.div122, %conv123
  %lnot126 = xor i1 %cmp124, true
  %lnot.ext127 = zext i1 %lnot126 to i32
  %conv128 = sext i32 %lnot.ext127 to i64
  %expval129 = call i64 @llvm.expect.i64(i64 %conv128, i64 0)
  %tobool130 = icmp ne i64 %expval129, 0
  br i1 %tobool130, label %cond.true131, label %cond.false132

cond.true131:                                     ; preds = %cond.end
  call void @__assert_rtn(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.genann_run, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 272, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i32 0, i32 0)) #11
  unreachable
                                                  ; No predecessors!
  br label %cond.end133

cond.false132:                                    ; preds = %cond.end
  br label %cond.end133

cond.end133:                                      ; preds = %cond.false132, %138
  %139 = load double*, double** %ret85, align 8, !tbaa !3
  store double* %139, double** %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  %140 = bitcast double** %ret85 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %140) #10
  br label %cleanup

cleanup:                                          ; preds = %cond.end133, %for.end19
  %141 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %141) #10
  %142 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %142) #10
  %143 = bitcast i32* %h to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %143) #10
  %144 = bitcast double** %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %144) #10
  %145 = bitcast double** %o to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %145) #10
  %146 = bitcast double** %w to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %146) #10
  %147 = load double*, double** %retval, align 8
  ret double* %147
}

; Function Attrs: nounwind ssp uwtable
define void @genann_train(%struct.genann* %ann, double* %inputs, double* %desired_outputs, double %learning_rate) #0 {
entry:
  %ann.addr = alloca %struct.genann*, align 8
  %inputs.addr = alloca double*, align 8
  %desired_outputs.addr = alloca double*, align 8
  %learning_rate.addr = alloca double, align 8
  %h = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %o = alloca double*, align 8
  %d = alloca double*, align 8
  %t = alloca double*, align 8
  %o32 = alloca double*, align 8
  %d41 = alloca double*, align 8
  %dd = alloca double*, align 8
  %ww = alloca double*, align 8
  %delta69 = alloca double, align 8
  %forward_delta = alloca double, align 8
  %windex = alloca i32, align 4
  %forward_weight = alloca double, align 8
  %d100 = alloca double*, align 8
  %w = alloca double*, align 8
  %i = alloca double*, align 8
  %d190 = alloca double*, align 8
  %i196 = alloca double*, align 8
  %w210 = alloca double*, align 8
  store %struct.genann* %ann, %struct.genann** %ann.addr, align 8, !tbaa !3
  store double* %inputs, double** %inputs.addr, align 8, !tbaa !3
  store double* %desired_outputs, double** %desired_outputs.addr, align 8, !tbaa !3
  store double %learning_rate, double* %learning_rate.addr, align 8, !tbaa !7
  %0 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %1 = load double*, double** %inputs.addr, align 8, !tbaa !3
  %call = call double* @genann_run(%struct.genann* %0, double* %1)
  %2 = bitcast i32* %h to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #10
  %3 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #10
  %4 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #10
  %5 = bitcast double** %o to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #10
  %6 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %output = getelementptr inbounds %struct.genann, %struct.genann* %6, i32 0, i32 9
  %7 = load double*, double** %output, align 8, !tbaa !23
  %8 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs1 = getelementptr inbounds %struct.genann, %struct.genann* %8, i32 0, i32 0
  %9 = load i32, i32* %inputs1, align 8, !tbaa !16
  %idx.ext = sext i32 %9 to i64
  %add.ptr = getelementptr inbounds double, double* %7, i64 %idx.ext
  %10 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden = getelementptr inbounds %struct.genann, %struct.genann* %10, i32 0, i32 2
  %11 = load i32, i32* %hidden, align 8, !tbaa !18
  %12 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden_layers = getelementptr inbounds %struct.genann, %struct.genann* %12, i32 0, i32 1
  %13 = load i32, i32* %hidden_layers, align 4, !tbaa !17
  %mul = mul nsw i32 %11, %13
  %idx.ext2 = sext i32 %mul to i64
  %add.ptr3 = getelementptr inbounds double, double* %add.ptr, i64 %idx.ext2
  store double* %add.ptr3, double** %o, align 8, !tbaa !3
  %14 = bitcast double** %d to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  %15 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %delta = getelementptr inbounds %struct.genann, %struct.genann* %15, i32 0, i32 10
  %16 = load double*, double** %delta, align 8, !tbaa !24
  %17 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden4 = getelementptr inbounds %struct.genann, %struct.genann* %17, i32 0, i32 2
  %18 = load i32, i32* %hidden4, align 8, !tbaa !18
  %19 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden_layers5 = getelementptr inbounds %struct.genann, %struct.genann* %19, i32 0, i32 1
  %20 = load i32, i32* %hidden_layers5, align 4, !tbaa !17
  %mul6 = mul nsw i32 %18, %20
  %idx.ext7 = sext i32 %mul6 to i64
  %add.ptr8 = getelementptr inbounds double, double* %16, i64 %idx.ext7
  store double* %add.ptr8, double** %d, align 8, !tbaa !3
  %21 = bitcast double** %t to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #10
  %22 = load double*, double** %desired_outputs.addr, align 8, !tbaa !3
  store double* %22, double** %t, align 8, !tbaa !3
  %23 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %activation_output = getelementptr inbounds %struct.genann, %struct.genann* %23, i32 0, i32 5
  %activation_output9 = bitcast {}** %activation_output to double (%struct.genann*, double)**
  %24 = load double (%struct.genann*, double)*, double (%struct.genann*, double)** %activation_output9, align 8, !tbaa !12
  %cmp = icmp eq double (%struct.genann*, double)* %24, @genann_act_linear
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %j, align 4, !tbaa !13
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %25 = load i32, i32* %j, align 4, !tbaa !13
  %26 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %outputs = getelementptr inbounds %struct.genann, %struct.genann* %26, i32 0, i32 3
  %27 = load i32, i32* %outputs, align 4, !tbaa !19
  %cmp10 = icmp slt i32 %25, %27
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %28 = load double*, double** %t, align 8, !tbaa !3
  %incdec.ptr = getelementptr inbounds double, double* %28, i32 1
  store double* %incdec.ptr, double** %t, align 8, !tbaa !3
  %29 = load double, double* %28, align 8, !tbaa !7
  %30 = load double*, double** %o, align 8, !tbaa !3
  %incdec.ptr11 = getelementptr inbounds double, double* %30, i32 1
  store double* %incdec.ptr11, double** %o, align 8, !tbaa !3
  %31 = load double, double* %30, align 8, !tbaa !7
  %sub = fsub double %29, %31
  %32 = load double*, double** %d, align 8, !tbaa !3
  %incdec.ptr12 = getelementptr inbounds double, double* %32, i32 1
  store double* %incdec.ptr12, double** %d, align 8, !tbaa !3
  store double %sub, double* %32, align 8, !tbaa !7
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %33 = load i32, i32* %j, align 4, !tbaa !13
  %inc = add nsw i32 %33, 1
  store i32 %inc, i32* %j, align 4, !tbaa !13
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, i32* %j, align 4, !tbaa !13
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc24, %if.else
  %34 = load i32, i32* %j, align 4, !tbaa !13
  %35 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %outputs14 = getelementptr inbounds %struct.genann, %struct.genann* %35, i32 0, i32 3
  %36 = load i32, i32* %outputs14, align 4, !tbaa !19
  %cmp15 = icmp slt i32 %34, %36
  br i1 %cmp15, label %for.body16, label %for.end26

for.body16:                                       ; preds = %for.cond13
  %37 = load double*, double** %t, align 8, !tbaa !3
  %38 = load double, double* %37, align 8, !tbaa !7
  %39 = load double*, double** %o, align 8, !tbaa !3
  %40 = load double, double* %39, align 8, !tbaa !7
  %sub17 = fsub double %38, %40
  %41 = load double*, double** %o, align 8, !tbaa !3
  %42 = load double, double* %41, align 8, !tbaa !7
  %mul18 = fmul double %sub17, %42
  %43 = load double*, double** %o, align 8, !tbaa !3
  %44 = load double, double* %43, align 8, !tbaa !7
  %sub19 = fsub double 1.000000e+00, %44
  %mul20 = fmul double %mul18, %sub19
  %45 = load double*, double** %d, align 8, !tbaa !3
  %incdec.ptr21 = getelementptr inbounds double, double* %45, i32 1
  store double* %incdec.ptr21, double** %d, align 8, !tbaa !3
  store double %mul20, double* %45, align 8, !tbaa !7
  %46 = load double*, double** %o, align 8, !tbaa !3
  %incdec.ptr22 = getelementptr inbounds double, double* %46, i32 1
  store double* %incdec.ptr22, double** %o, align 8, !tbaa !3
  %47 = load double*, double** %t, align 8, !tbaa !3
  %incdec.ptr23 = getelementptr inbounds double, double* %47, i32 1
  store double* %incdec.ptr23, double** %t, align 8, !tbaa !3
  br label %for.inc24

for.inc24:                                        ; preds = %for.body16
  %48 = load i32, i32* %j, align 4, !tbaa !13
  %inc25 = add nsw i32 %48, 1
  store i32 %inc25, i32* %j, align 4, !tbaa !13
  br label %for.cond13

for.end26:                                        ; preds = %for.cond13
  br label %if.end

if.end:                                           ; preds = %for.end26, %for.end
  %49 = bitcast double** %t to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #10
  %50 = bitcast double** %d to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #10
  %51 = bitcast double** %o to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #10
  %52 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden_layers27 = getelementptr inbounds %struct.genann, %struct.genann* %52, i32 0, i32 1
  %53 = load i32, i32* %hidden_layers27, align 4, !tbaa !17
  %sub28 = sub nsw i32 %53, 1
  store i32 %sub28, i32* %h, align 4, !tbaa !13
  br label %for.cond29

for.cond29:                                       ; preds = %for.inc98, %if.end
  %54 = load i32, i32* %h, align 4, !tbaa !13
  %cmp30 = icmp sge i32 %54, 0
  br i1 %cmp30, label %for.body31, label %for.end99

for.body31:                                       ; preds = %for.cond29
  %55 = bitcast double** %o32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #10
  %56 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %output33 = getelementptr inbounds %struct.genann, %struct.genann* %56, i32 0, i32 9
  %57 = load double*, double** %output33, align 8, !tbaa !23
  %58 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs34 = getelementptr inbounds %struct.genann, %struct.genann* %58, i32 0, i32 0
  %59 = load i32, i32* %inputs34, align 8, !tbaa !16
  %idx.ext35 = sext i32 %59 to i64
  %add.ptr36 = getelementptr inbounds double, double* %57, i64 %idx.ext35
  %60 = load i32, i32* %h, align 4, !tbaa !13
  %61 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden37 = getelementptr inbounds %struct.genann, %struct.genann* %61, i32 0, i32 2
  %62 = load i32, i32* %hidden37, align 8, !tbaa !18
  %mul38 = mul nsw i32 %60, %62
  %idx.ext39 = sext i32 %mul38 to i64
  %add.ptr40 = getelementptr inbounds double, double* %add.ptr36, i64 %idx.ext39
  store double* %add.ptr40, double** %o32, align 8, !tbaa !3
  %63 = bitcast double** %d41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %63) #10
  %64 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %delta42 = getelementptr inbounds %struct.genann, %struct.genann* %64, i32 0, i32 10
  %65 = load double*, double** %delta42, align 8, !tbaa !24
  %66 = load i32, i32* %h, align 4, !tbaa !13
  %67 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden43 = getelementptr inbounds %struct.genann, %struct.genann* %67, i32 0, i32 2
  %68 = load i32, i32* %hidden43, align 8, !tbaa !18
  %mul44 = mul nsw i32 %66, %68
  %idx.ext45 = sext i32 %mul44 to i64
  %add.ptr46 = getelementptr inbounds double, double* %65, i64 %idx.ext45
  store double* %add.ptr46, double** %d41, align 8, !tbaa !3
  %69 = bitcast double** %dd to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %69) #10
  %70 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %delta47 = getelementptr inbounds %struct.genann, %struct.genann* %70, i32 0, i32 10
  %71 = load double*, double** %delta47, align 8, !tbaa !24
  %72 = load i32, i32* %h, align 4, !tbaa !13
  %add = add nsw i32 %72, 1
  %73 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden48 = getelementptr inbounds %struct.genann, %struct.genann* %73, i32 0, i32 2
  %74 = load i32, i32* %hidden48, align 8, !tbaa !18
  %mul49 = mul nsw i32 %add, %74
  %idx.ext50 = sext i32 %mul49 to i64
  %add.ptr51 = getelementptr inbounds double, double* %71, i64 %idx.ext50
  store double* %add.ptr51, double** %dd, align 8, !tbaa !3
  %75 = bitcast double** %ww to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %75) #10
  %76 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %weight = getelementptr inbounds %struct.genann, %struct.genann* %76, i32 0, i32 8
  %77 = load double*, double** %weight, align 8, !tbaa !22
  %78 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs52 = getelementptr inbounds %struct.genann, %struct.genann* %78, i32 0, i32 0
  %79 = load i32, i32* %inputs52, align 8, !tbaa !16
  %add53 = add nsw i32 %79, 1
  %80 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden54 = getelementptr inbounds %struct.genann, %struct.genann* %80, i32 0, i32 2
  %81 = load i32, i32* %hidden54, align 8, !tbaa !18
  %mul55 = mul nsw i32 %add53, %81
  %idx.ext56 = sext i32 %mul55 to i64
  %add.ptr57 = getelementptr inbounds double, double* %77, i64 %idx.ext56
  %82 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden58 = getelementptr inbounds %struct.genann, %struct.genann* %82, i32 0, i32 2
  %83 = load i32, i32* %hidden58, align 8, !tbaa !18
  %add59 = add nsw i32 %83, 1
  %84 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden60 = getelementptr inbounds %struct.genann, %struct.genann* %84, i32 0, i32 2
  %85 = load i32, i32* %hidden60, align 8, !tbaa !18
  %mul61 = mul nsw i32 %add59, %85
  %86 = load i32, i32* %h, align 4, !tbaa !13
  %mul62 = mul nsw i32 %mul61, %86
  %idx.ext63 = sext i32 %mul62 to i64
  %add.ptr64 = getelementptr inbounds double, double* %add.ptr57, i64 %idx.ext63
  store double* %add.ptr64, double** %ww, align 8, !tbaa !3
  store i32 0, i32* %j, align 4, !tbaa !13
  br label %for.cond65

for.cond65:                                       ; preds = %for.inc95, %for.body31
  %87 = load i32, i32* %j, align 4, !tbaa !13
  %88 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden66 = getelementptr inbounds %struct.genann, %struct.genann* %88, i32 0, i32 2
  %89 = load i32, i32* %hidden66, align 8, !tbaa !18
  %cmp67 = icmp slt i32 %87, %89
  br i1 %cmp67, label %for.body68, label %for.end97

for.body68:                                       ; preds = %for.cond65
  %90 = bitcast double* %delta69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %90) #10
  store double 0.000000e+00, double* %delta69, align 8, !tbaa !7
  store i32 0, i32* %k, align 4, !tbaa !13
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc87, %for.body68
  %91 = load i32, i32* %k, align 4, !tbaa !13
  %92 = load i32, i32* %h, align 4, !tbaa !13
  %93 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden_layers71 = getelementptr inbounds %struct.genann, %struct.genann* %93, i32 0, i32 1
  %94 = load i32, i32* %hidden_layers71, align 4, !tbaa !17
  %sub72 = sub nsw i32 %94, 1
  %cmp73 = icmp eq i32 %92, %sub72
  br i1 %cmp73, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.cond70
  %95 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %outputs74 = getelementptr inbounds %struct.genann, %struct.genann* %95, i32 0, i32 3
  %96 = load i32, i32* %outputs74, align 4, !tbaa !19
  br label %cond.end

cond.false:                                       ; preds = %for.cond70
  %97 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden75 = getelementptr inbounds %struct.genann, %struct.genann* %97, i32 0, i32 2
  %98 = load i32, i32* %hidden75, align 8, !tbaa !18
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %96, %cond.true ], [ %98, %cond.false ]
  %cmp76 = icmp slt i32 %91, %cond
  br i1 %cmp76, label %for.body77, label %for.end89

for.body77:                                       ; preds = %cond.end
  %99 = bitcast double* %forward_delta to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %99) #10
  %100 = load double*, double** %dd, align 8, !tbaa !3
  %101 = load i32, i32* %k, align 4, !tbaa !13
  %idxprom = sext i32 %101 to i64
  %arrayidx = getelementptr inbounds double, double* %100, i64 %idxprom
  %102 = load double, double* %arrayidx, align 8, !tbaa !7
  store double %102, double* %forward_delta, align 8, !tbaa !7
  %103 = bitcast i32* %windex to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %103) #10
  %104 = load i32, i32* %k, align 4, !tbaa !13
  %105 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden78 = getelementptr inbounds %struct.genann, %struct.genann* %105, i32 0, i32 2
  %106 = load i32, i32* %hidden78, align 8, !tbaa !18
  %add79 = add nsw i32 %106, 1
  %mul80 = mul nsw i32 %104, %add79
  %107 = load i32, i32* %j, align 4, !tbaa !13
  %add81 = add nsw i32 %107, 1
  %add82 = add nsw i32 %mul80, %add81
  store i32 %add82, i32* %windex, align 4, !tbaa !13
  %108 = bitcast double* %forward_weight to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %108) #10
  %109 = load double*, double** %ww, align 8, !tbaa !3
  %110 = load i32, i32* %windex, align 4, !tbaa !13
  %idxprom83 = sext i32 %110 to i64
  %arrayidx84 = getelementptr inbounds double, double* %109, i64 %idxprom83
  %111 = load double, double* %arrayidx84, align 8, !tbaa !7
  store double %111, double* %forward_weight, align 8, !tbaa !7
  %112 = load double, double* %forward_delta, align 8, !tbaa !7
  %113 = load double, double* %forward_weight, align 8, !tbaa !7
  %mul85 = fmul double %112, %113
  %114 = load double, double* %delta69, align 8, !tbaa !7
  %add86 = fadd double %114, %mul85
  store double %add86, double* %delta69, align 8, !tbaa !7
  %115 = bitcast double* %forward_weight to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %115) #10
  %116 = bitcast i32* %windex to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %116) #10
  %117 = bitcast double* %forward_delta to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #10
  br label %for.inc87

for.inc87:                                        ; preds = %for.body77
  %118 = load i32, i32* %k, align 4, !tbaa !13
  %inc88 = add nsw i32 %118, 1
  store i32 %inc88, i32* %k, align 4, !tbaa !13
  br label %for.cond70

for.end89:                                        ; preds = %cond.end
  %119 = load double*, double** %o32, align 8, !tbaa !3
  %120 = load double, double* %119, align 8, !tbaa !7
  %121 = load double*, double** %o32, align 8, !tbaa !3
  %122 = load double, double* %121, align 8, !tbaa !7
  %sub90 = fsub double 1.000000e+00, %122
  %mul91 = fmul double %120, %sub90
  %123 = load double, double* %delta69, align 8, !tbaa !7
  %mul92 = fmul double %mul91, %123
  %124 = load double*, double** %d41, align 8, !tbaa !3
  store double %mul92, double* %124, align 8, !tbaa !7
  %125 = load double*, double** %d41, align 8, !tbaa !3
  %incdec.ptr93 = getelementptr inbounds double, double* %125, i32 1
  store double* %incdec.ptr93, double** %d41, align 8, !tbaa !3
  %126 = load double*, double** %o32, align 8, !tbaa !3
  %incdec.ptr94 = getelementptr inbounds double, double* %126, i32 1
  store double* %incdec.ptr94, double** %o32, align 8, !tbaa !3
  %127 = bitcast double* %delta69 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127) #10
  br label %for.inc95

for.inc95:                                        ; preds = %for.end89
  %128 = load i32, i32* %j, align 4, !tbaa !13
  %inc96 = add nsw i32 %128, 1
  store i32 %inc96, i32* %j, align 4, !tbaa !13
  br label %for.cond65

for.end97:                                        ; preds = %for.cond65
  %129 = bitcast double** %ww to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %129) #10
  %130 = bitcast double** %dd to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %130) #10
  %131 = bitcast double** %d41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %131) #10
  %132 = bitcast double** %o32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %132) #10
  br label %for.inc98

for.inc98:                                        ; preds = %for.end97
  %133 = load i32, i32* %h, align 4, !tbaa !13
  %dec = add nsw i32 %133, -1
  store i32 %dec, i32* %h, align 4, !tbaa !13
  br label %for.cond29

for.end99:                                        ; preds = %for.cond29
  %134 = bitcast double** %d100 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %134) #10
  %135 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %delta101 = getelementptr inbounds %struct.genann, %struct.genann* %135, i32 0, i32 10
  %136 = load double*, double** %delta101, align 8, !tbaa !24
  %137 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden102 = getelementptr inbounds %struct.genann, %struct.genann* %137, i32 0, i32 2
  %138 = load i32, i32* %hidden102, align 8, !tbaa !18
  %139 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden_layers103 = getelementptr inbounds %struct.genann, %struct.genann* %139, i32 0, i32 1
  %140 = load i32, i32* %hidden_layers103, align 4, !tbaa !17
  %mul104 = mul nsw i32 %138, %140
  %idx.ext105 = sext i32 %mul104 to i64
  %add.ptr106 = getelementptr inbounds double, double* %136, i64 %idx.ext105
  store double* %add.ptr106, double** %d100, align 8, !tbaa !3
  %141 = bitcast double** %w to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %141) #10
  %142 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %weight107 = getelementptr inbounds %struct.genann, %struct.genann* %142, i32 0, i32 8
  %143 = load double*, double** %weight107, align 8, !tbaa !22
  %144 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden_layers108 = getelementptr inbounds %struct.genann, %struct.genann* %144, i32 0, i32 1
  %145 = load i32, i32* %hidden_layers108, align 4, !tbaa !17
  %tobool = icmp ne i32 %145, 0
  br i1 %tobool, label %cond.true109, label %cond.false122

cond.true109:                                     ; preds = %for.end99
  %146 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs110 = getelementptr inbounds %struct.genann, %struct.genann* %146, i32 0, i32 0
  %147 = load i32, i32* %inputs110, align 8, !tbaa !16
  %add111 = add nsw i32 %147, 1
  %148 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden112 = getelementptr inbounds %struct.genann, %struct.genann* %148, i32 0, i32 2
  %149 = load i32, i32* %hidden112, align 8, !tbaa !18
  %mul113 = mul nsw i32 %add111, %149
  %150 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden114 = getelementptr inbounds %struct.genann, %struct.genann* %150, i32 0, i32 2
  %151 = load i32, i32* %hidden114, align 8, !tbaa !18
  %add115 = add nsw i32 %151, 1
  %152 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden116 = getelementptr inbounds %struct.genann, %struct.genann* %152, i32 0, i32 2
  %153 = load i32, i32* %hidden116, align 8, !tbaa !18
  %mul117 = mul nsw i32 %add115, %153
  %154 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden_layers118 = getelementptr inbounds %struct.genann, %struct.genann* %154, i32 0, i32 1
  %155 = load i32, i32* %hidden_layers118, align 4, !tbaa !17
  %sub119 = sub nsw i32 %155, 1
  %mul120 = mul nsw i32 %mul117, %sub119
  %add121 = add nsw i32 %mul113, %mul120
  br label %cond.end123

cond.false122:                                    ; preds = %for.end99
  br label %cond.end123

cond.end123:                                      ; preds = %cond.false122, %cond.true109
  %cond124 = phi i32 [ %add121, %cond.true109 ], [ 0, %cond.false122 ]
  %idx.ext125 = sext i32 %cond124 to i64
  %add.ptr126 = getelementptr inbounds double, double* %143, i64 %idx.ext125
  store double* %add.ptr126, double** %w, align 8, !tbaa !3
  %156 = bitcast double** %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %156) #10
  %157 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %output127 = getelementptr inbounds %struct.genann, %struct.genann* %157, i32 0, i32 9
  %158 = load double*, double** %output127, align 8, !tbaa !23
  %159 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden_layers128 = getelementptr inbounds %struct.genann, %struct.genann* %159, i32 0, i32 1
  %160 = load i32, i32* %hidden_layers128, align 4, !tbaa !17
  %tobool129 = icmp ne i32 %160, 0
  br i1 %tobool129, label %cond.true130, label %cond.false137

cond.true130:                                     ; preds = %cond.end123
  %161 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs131 = getelementptr inbounds %struct.genann, %struct.genann* %161, i32 0, i32 0
  %162 = load i32, i32* %inputs131, align 8, !tbaa !16
  %163 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden132 = getelementptr inbounds %struct.genann, %struct.genann* %163, i32 0, i32 2
  %164 = load i32, i32* %hidden132, align 8, !tbaa !18
  %165 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden_layers133 = getelementptr inbounds %struct.genann, %struct.genann* %165, i32 0, i32 1
  %166 = load i32, i32* %hidden_layers133, align 4, !tbaa !17
  %sub134 = sub nsw i32 %166, 1
  %mul135 = mul nsw i32 %164, %sub134
  %add136 = add nsw i32 %162, %mul135
  br label %cond.end138

cond.false137:                                    ; preds = %cond.end123
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false137, %cond.true130
  %cond139 = phi i32 [ %add136, %cond.true130 ], [ 0, %cond.false137 ]
  %idx.ext140 = sext i32 %cond139 to i64
  %add.ptr141 = getelementptr inbounds double, double* %158, i64 %idx.ext140
  store double* %add.ptr141, double** %i, align 8, !tbaa !3
  store i32 0, i32* %j, align 4, !tbaa !13
  br label %for.cond142

for.cond142:                                      ; preds = %for.inc173, %cond.end138
  %167 = load i32, i32* %j, align 4, !tbaa !13
  %168 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %outputs143 = getelementptr inbounds %struct.genann, %struct.genann* %168, i32 0, i32 3
  %169 = load i32, i32* %outputs143, align 4, !tbaa !19
  %cmp144 = icmp slt i32 %167, %169
  br i1 %cmp144, label %for.body145, label %for.end175

for.body145:                                      ; preds = %for.cond142
  %170 = load double*, double** %d100, align 8, !tbaa !3
  %171 = load double, double* %170, align 8, !tbaa !7
  %172 = load double, double* %learning_rate.addr, align 8, !tbaa !7
  %mul146 = fmul double %171, %172
  %mul147 = fmul double %mul146, -1.000000e+00
  %173 = load double*, double** %w, align 8, !tbaa !3
  %incdec.ptr148 = getelementptr inbounds double, double* %173, i32 1
  store double* %incdec.ptr148, double** %w, align 8, !tbaa !3
  %174 = load double, double* %173, align 8, !tbaa !7
  %add149 = fadd double %174, %mul147
  store double %add149, double* %173, align 8, !tbaa !7
  store i32 1, i32* %k, align 4, !tbaa !13
  br label %for.cond150

for.cond150:                                      ; preds = %for.inc169, %for.body145
  %175 = load i32, i32* %k, align 4, !tbaa !13
  %176 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden_layers151 = getelementptr inbounds %struct.genann, %struct.genann* %176, i32 0, i32 1
  %177 = load i32, i32* %hidden_layers151, align 4, !tbaa !17
  %tobool152 = icmp ne i32 %177, 0
  br i1 %tobool152, label %cond.true153, label %cond.false155

cond.true153:                                     ; preds = %for.cond150
  %178 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden154 = getelementptr inbounds %struct.genann, %struct.genann* %178, i32 0, i32 2
  %179 = load i32, i32* %hidden154, align 8, !tbaa !18
  br label %cond.end157

cond.false155:                                    ; preds = %for.cond150
  %180 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs156 = getelementptr inbounds %struct.genann, %struct.genann* %180, i32 0, i32 0
  %181 = load i32, i32* %inputs156, align 8, !tbaa !16
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false155, %cond.true153
  %cond158 = phi i32 [ %179, %cond.true153 ], [ %181, %cond.false155 ]
  %add159 = add nsw i32 %cond158, 1
  %cmp160 = icmp slt i32 %175, %add159
  br i1 %cmp160, label %for.body161, label %for.end171

for.body161:                                      ; preds = %cond.end157
  %182 = load double*, double** %d100, align 8, !tbaa !3
  %183 = load double, double* %182, align 8, !tbaa !7
  %184 = load double, double* %learning_rate.addr, align 8, !tbaa !7
  %mul162 = fmul double %183, %184
  %185 = load double*, double** %i, align 8, !tbaa !3
  %186 = load i32, i32* %k, align 4, !tbaa !13
  %sub163 = sub nsw i32 %186, 1
  %idxprom164 = sext i32 %sub163 to i64
  %arrayidx165 = getelementptr inbounds double, double* %185, i64 %idxprom164
  %187 = load double, double* %arrayidx165, align 8, !tbaa !7
  %mul166 = fmul double %mul162, %187
  %188 = load double*, double** %w, align 8, !tbaa !3
  %incdec.ptr167 = getelementptr inbounds double, double* %188, i32 1
  store double* %incdec.ptr167, double** %w, align 8, !tbaa !3
  %189 = load double, double* %188, align 8, !tbaa !7
  %add168 = fadd double %189, %mul166
  store double %add168, double* %188, align 8, !tbaa !7
  br label %for.inc169

for.inc169:                                       ; preds = %for.body161
  %190 = load i32, i32* %k, align 4, !tbaa !13
  %inc170 = add nsw i32 %190, 1
  store i32 %inc170, i32* %k, align 4, !tbaa !13
  br label %for.cond150

for.end171:                                       ; preds = %cond.end157
  %191 = load double*, double** %d100, align 8, !tbaa !3
  %incdec.ptr172 = getelementptr inbounds double, double* %191, i32 1
  store double* %incdec.ptr172, double** %d100, align 8, !tbaa !3
  br label %for.inc173

for.inc173:                                       ; preds = %for.end171
  %192 = load i32, i32* %j, align 4, !tbaa !13
  %inc174 = add nsw i32 %192, 1
  store i32 %inc174, i32* %j, align 4, !tbaa !13
  br label %for.cond142

for.end175:                                       ; preds = %for.cond142
  %193 = load double*, double** %w, align 8, !tbaa !3
  %194 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %weight176 = getelementptr inbounds %struct.genann, %struct.genann* %194, i32 0, i32 8
  %195 = load double*, double** %weight176, align 8, !tbaa !22
  %sub.ptr.lhs.cast = ptrtoint double* %193 to i64
  %sub.ptr.rhs.cast = ptrtoint double* %195 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %196 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %total_weights = getelementptr inbounds %struct.genann, %struct.genann* %196, i32 0, i32 6
  %197 = load i32, i32* %total_weights, align 8, !tbaa !20
  %conv = sext i32 %197 to i64
  %cmp177 = icmp eq i64 %sub.ptr.div, %conv
  %lnot = xor i1 %cmp177, true
  %lnot.ext = zext i1 %lnot to i32
  %conv179 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv179, i64 0)
  %tobool180 = icmp ne i64 %expval, 0
  br i1 %tobool180, label %cond.true181, label %cond.false182

cond.true181:                                     ; preds = %for.end175
  call void @__assert_rtn(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.genann_train, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 362, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i32 0, i32 0)) #11
  unreachable
                                                  ; No predecessors!
  br label %cond.end183

cond.false182:                                    ; preds = %for.end175
  br label %cond.end183

cond.end183:                                      ; preds = %cond.false182, %198
  %199 = bitcast double** %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #10
  %200 = bitcast double** %w to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %200) #10
  %201 = bitcast double** %d100 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %201) #10
  %202 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden_layers184 = getelementptr inbounds %struct.genann, %struct.genann* %202, i32 0, i32 1
  %203 = load i32, i32* %hidden_layers184, align 4, !tbaa !17
  %sub185 = sub nsw i32 %203, 1
  store i32 %sub185, i32* %h, align 4, !tbaa !13
  br label %for.cond186

for.cond186:                                      ; preds = %for.inc266, %cond.end183
  %204 = load i32, i32* %h, align 4, !tbaa !13
  %cmp187 = icmp sge i32 %204, 0
  br i1 %cmp187, label %for.body189, label %for.end268

for.body189:                                      ; preds = %for.cond186
  %205 = bitcast double** %d190 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %205) #10
  %206 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %delta191 = getelementptr inbounds %struct.genann, %struct.genann* %206, i32 0, i32 10
  %207 = load double*, double** %delta191, align 8, !tbaa !24
  %208 = load i32, i32* %h, align 4, !tbaa !13
  %209 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden192 = getelementptr inbounds %struct.genann, %struct.genann* %209, i32 0, i32 2
  %210 = load i32, i32* %hidden192, align 8, !tbaa !18
  %mul193 = mul nsw i32 %208, %210
  %idx.ext194 = sext i32 %mul193 to i64
  %add.ptr195 = getelementptr inbounds double, double* %207, i64 %idx.ext194
  store double* %add.ptr195, double** %d190, align 8, !tbaa !3
  %211 = bitcast double** %i196 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %211) #10
  %212 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %output197 = getelementptr inbounds %struct.genann, %struct.genann* %212, i32 0, i32 9
  %213 = load double*, double** %output197, align 8, !tbaa !23
  %214 = load i32, i32* %h, align 4, !tbaa !13
  %tobool198 = icmp ne i32 %214, 0
  br i1 %tobool198, label %cond.true199, label %cond.false205

cond.true199:                                     ; preds = %for.body189
  %215 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs200 = getelementptr inbounds %struct.genann, %struct.genann* %215, i32 0, i32 0
  %216 = load i32, i32* %inputs200, align 8, !tbaa !16
  %217 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden201 = getelementptr inbounds %struct.genann, %struct.genann* %217, i32 0, i32 2
  %218 = load i32, i32* %hidden201, align 8, !tbaa !18
  %219 = load i32, i32* %h, align 4, !tbaa !13
  %sub202 = sub nsw i32 %219, 1
  %mul203 = mul nsw i32 %218, %sub202
  %add204 = add nsw i32 %216, %mul203
  br label %cond.end206

cond.false205:                                    ; preds = %for.body189
  br label %cond.end206

cond.end206:                                      ; preds = %cond.false205, %cond.true199
  %cond207 = phi i32 [ %add204, %cond.true199 ], [ 0, %cond.false205 ]
  %idx.ext208 = sext i32 %cond207 to i64
  %add.ptr209 = getelementptr inbounds double, double* %213, i64 %idx.ext208
  store double* %add.ptr209, double** %i196, align 8, !tbaa !3
  %220 = bitcast double** %w210 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %220) #10
  %221 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %weight211 = getelementptr inbounds %struct.genann, %struct.genann* %221, i32 0, i32 8
  %222 = load double*, double** %weight211, align 8, !tbaa !22
  %223 = load i32, i32* %h, align 4, !tbaa !13
  %tobool212 = icmp ne i32 %223, 0
  br i1 %tobool212, label %cond.true213, label %cond.false225

cond.true213:                                     ; preds = %cond.end206
  %224 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs214 = getelementptr inbounds %struct.genann, %struct.genann* %224, i32 0, i32 0
  %225 = load i32, i32* %inputs214, align 8, !tbaa !16
  %add215 = add nsw i32 %225, 1
  %226 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden216 = getelementptr inbounds %struct.genann, %struct.genann* %226, i32 0, i32 2
  %227 = load i32, i32* %hidden216, align 8, !tbaa !18
  %mul217 = mul nsw i32 %add215, %227
  %228 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden218 = getelementptr inbounds %struct.genann, %struct.genann* %228, i32 0, i32 2
  %229 = load i32, i32* %hidden218, align 8, !tbaa !18
  %add219 = add nsw i32 %229, 1
  %230 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden220 = getelementptr inbounds %struct.genann, %struct.genann* %230, i32 0, i32 2
  %231 = load i32, i32* %hidden220, align 8, !tbaa !18
  %mul221 = mul nsw i32 %add219, %231
  %232 = load i32, i32* %h, align 4, !tbaa !13
  %sub222 = sub nsw i32 %232, 1
  %mul223 = mul nsw i32 %mul221, %sub222
  %add224 = add nsw i32 %mul217, %mul223
  br label %cond.end226

cond.false225:                                    ; preds = %cond.end206
  br label %cond.end226

cond.end226:                                      ; preds = %cond.false225, %cond.true213
  %cond227 = phi i32 [ %add224, %cond.true213 ], [ 0, %cond.false225 ]
  %idx.ext228 = sext i32 %cond227 to i64
  %add.ptr229 = getelementptr inbounds double, double* %222, i64 %idx.ext228
  store double* %add.ptr229, double** %w210, align 8, !tbaa !3
  store i32 0, i32* %j, align 4, !tbaa !13
  br label %for.cond230

for.cond230:                                      ; preds = %for.inc263, %cond.end226
  %233 = load i32, i32* %j, align 4, !tbaa !13
  %234 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden231 = getelementptr inbounds %struct.genann, %struct.genann* %234, i32 0, i32 2
  %235 = load i32, i32* %hidden231, align 8, !tbaa !18
  %cmp232 = icmp slt i32 %233, %235
  br i1 %cmp232, label %for.body234, label %for.end265

for.body234:                                      ; preds = %for.cond230
  %236 = load double*, double** %d190, align 8, !tbaa !3
  %237 = load double, double* %236, align 8, !tbaa !7
  %238 = load double, double* %learning_rate.addr, align 8, !tbaa !7
  %mul235 = fmul double %237, %238
  %mul236 = fmul double %mul235, -1.000000e+00
  %239 = load double*, double** %w210, align 8, !tbaa !3
  %incdec.ptr237 = getelementptr inbounds double, double* %239, i32 1
  store double* %incdec.ptr237, double** %w210, align 8, !tbaa !3
  %240 = load double, double* %239, align 8, !tbaa !7
  %add238 = fadd double %240, %mul236
  store double %add238, double* %239, align 8, !tbaa !7
  store i32 1, i32* %k, align 4, !tbaa !13
  br label %for.cond239

for.cond239:                                      ; preds = %for.inc259, %for.body234
  %241 = load i32, i32* %k, align 4, !tbaa !13
  %242 = load i32, i32* %h, align 4, !tbaa !13
  %cmp240 = icmp eq i32 %242, 0
  br i1 %cmp240, label %cond.true242, label %cond.false244

cond.true242:                                     ; preds = %for.cond239
  %243 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs243 = getelementptr inbounds %struct.genann, %struct.genann* %243, i32 0, i32 0
  %244 = load i32, i32* %inputs243, align 8, !tbaa !16
  br label %cond.end246

cond.false244:                                    ; preds = %for.cond239
  %245 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden245 = getelementptr inbounds %struct.genann, %struct.genann* %245, i32 0, i32 2
  %246 = load i32, i32* %hidden245, align 8, !tbaa !18
  br label %cond.end246

cond.end246:                                      ; preds = %cond.false244, %cond.true242
  %cond247 = phi i32 [ %244, %cond.true242 ], [ %246, %cond.false244 ]
  %add248 = add nsw i32 %cond247, 1
  %cmp249 = icmp slt i32 %241, %add248
  br i1 %cmp249, label %for.body251, label %for.end261

for.body251:                                      ; preds = %cond.end246
  %247 = load double*, double** %d190, align 8, !tbaa !3
  %248 = load double, double* %247, align 8, !tbaa !7
  %249 = load double, double* %learning_rate.addr, align 8, !tbaa !7
  %mul252 = fmul double %248, %249
  %250 = load double*, double** %i196, align 8, !tbaa !3
  %251 = load i32, i32* %k, align 4, !tbaa !13
  %sub253 = sub nsw i32 %251, 1
  %idxprom254 = sext i32 %sub253 to i64
  %arrayidx255 = getelementptr inbounds double, double* %250, i64 %idxprom254
  %252 = load double, double* %arrayidx255, align 8, !tbaa !7
  %mul256 = fmul double %mul252, %252
  %253 = load double*, double** %w210, align 8, !tbaa !3
  %incdec.ptr257 = getelementptr inbounds double, double* %253, i32 1
  store double* %incdec.ptr257, double** %w210, align 8, !tbaa !3
  %254 = load double, double* %253, align 8, !tbaa !7
  %add258 = fadd double %254, %mul256
  store double %add258, double* %253, align 8, !tbaa !7
  br label %for.inc259

for.inc259:                                       ; preds = %for.body251
  %255 = load i32, i32* %k, align 4, !tbaa !13
  %inc260 = add nsw i32 %255, 1
  store i32 %inc260, i32* %k, align 4, !tbaa !13
  br label %for.cond239

for.end261:                                       ; preds = %cond.end246
  %256 = load double*, double** %d190, align 8, !tbaa !3
  %incdec.ptr262 = getelementptr inbounds double, double* %256, i32 1
  store double* %incdec.ptr262, double** %d190, align 8, !tbaa !3
  br label %for.inc263

for.inc263:                                       ; preds = %for.end261
  %257 = load i32, i32* %j, align 4, !tbaa !13
  %inc264 = add nsw i32 %257, 1
  store i32 %inc264, i32* %j, align 4, !tbaa !13
  br label %for.cond230

for.end265:                                       ; preds = %for.cond230
  %258 = bitcast double** %w210 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %258) #10
  %259 = bitcast double** %i196 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %259) #10
  %260 = bitcast double** %d190 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %260) #10
  br label %for.inc266

for.inc266:                                       ; preds = %for.end265
  %261 = load i32, i32* %h, align 4, !tbaa !13
  %dec267 = add nsw i32 %261, -1
  store i32 %dec267, i32* %h, align 4, !tbaa !13
  br label %for.cond186

for.end268:                                       ; preds = %for.cond186
  %262 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %262) #10
  %263 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %263) #10
  %264 = bitcast i32* %h to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %264) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @genann_write(%struct.genann* %ann, %struct.__sFILE* %out) #0 {
entry:
  %ann.addr = alloca %struct.genann*, align 8
  %out.addr = alloca %struct.__sFILE*, align 8
  %i = alloca i32, align 4
  store %struct.genann* %ann, %struct.genann** %ann.addr, align 8, !tbaa !3
  store %struct.__sFILE* %out, %struct.__sFILE** %out.addr, align 8, !tbaa !3
  %0 = load %struct.__sFILE*, %struct.__sFILE** %out.addr, align 8, !tbaa !3
  %1 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %inputs = getelementptr inbounds %struct.genann, %struct.genann* %1, i32 0, i32 0
  %2 = load i32, i32* %inputs, align 8, !tbaa !16
  %3 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden_layers = getelementptr inbounds %struct.genann, %struct.genann* %3, i32 0, i32 1
  %4 = load i32, i32* %hidden_layers, align 4, !tbaa !17
  %5 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %hidden = getelementptr inbounds %struct.genann, %struct.genann* %5, i32 0, i32 2
  %6 = load i32, i32* %hidden, align 8, !tbaa !18
  %7 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %outputs = getelementptr inbounds %struct.genann, %struct.genann* %7, i32 0, i32 3
  %8 = load i32, i32* %outputs, align 4, !tbaa !19
  %call = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 %2, i32 %4, i32 %6, i32 %8)
  %9 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #10
  store i32 0, i32* %i, align 4, !tbaa !13
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !tbaa !13
  %11 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %total_weights = getelementptr inbounds %struct.genann, %struct.genann* %11, i32 0, i32 6
  %12 = load i32, i32* %total_weights, align 8, !tbaa !20
  %cmp = icmp slt i32 %10, %12
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load %struct.__sFILE*, %struct.__sFILE** %out.addr, align 8, !tbaa !3
  %14 = load %struct.genann*, %struct.genann** %ann.addr, align 8, !tbaa !3
  %weight = getelementptr inbounds %struct.genann, %struct.genann* %14, i32 0, i32 8
  %15 = load double*, double** %weight, align 8, !tbaa !22
  %16 = load i32, i32* %i, align 4, !tbaa !13
  %idxprom = sext i32 %16 to i64
  %arrayidx = getelementptr inbounds double, double* %15, i64 %idxprom
  %17 = load double, double* %arrayidx, align 8, !tbaa !7
  %call1 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), double %17)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !tbaa !13
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4, !tbaa !13
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %19 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %19) #10
  ret void
}

declare i32 @fprintf(%struct.__sFILE*, i8*, ...) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }
attributes #5 = { cold noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="true" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { cold noreturn }
attributes #12 = { allocsize(0) }
attributes #13 = { cold }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"clang version 6.0.1 (https://github.com/llvm-mirror/clang.git 2f27999df400d17b33cdd412fdd606a88208dfcc) (https://github.com/llvm-mirror/llvm.git 5136df4d089a086b70d452160ad5451861269498)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
!7 = !{!8, !8, i64 0}
!8 = !{!"double", !5, i64 0}
!9 = !{!10, !4, i64 16}
!10 = !{!"genann", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !4, i64 16, !4, i64 24, !11, i64 32, !11, i64 36, !4, i64 40, !4, i64 48, !4, i64 56}
!11 = !{!"int", !5, i64 0}
!12 = !{!10, !4, i64 24}
!13 = !{!11, !11, i64 0}
!14 = !{!15, !15, i64 0}
!15 = !{!"long", !5, i64 0}
!16 = !{!10, !11, i64 0}
!17 = !{!10, !11, i64 4}
!18 = !{!10, !11, i64 8}
!19 = !{!10, !11, i64 12}
!20 = !{!10, !11, i64 32}
!21 = !{!10, !11, i64 36}
!22 = !{!10, !4, i64 40}
!23 = !{!10, !4, i64 48}
!24 = !{!10, !4, i64 56}
